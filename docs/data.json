{
    "project": {
        "name": "YASMF",
        "description": "YASMF: Yet Another Simple Mobile Framework",
        "version": "0.3.100",
        "url": "https://github.com/photokandyStudios/YASMF"
    },
    "files": {
        "demo/merges/android/cordova.js": {
            "name": "demo/merges/android/cordova.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "demo/merges/ios/cordova.js": {
            "name": "demo/merges/ios/cordova.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "demo/platforms/android/assets/www/framework/PKObject.js": {
            "name": "demo/platforms/android/assets/www/framework/PKObject.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "demo/platforms/android/assets/www/framework/device.js": {
            "name": "demo/platforms/android/assets/www/framework/device.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "demo/platforms/android/assets/www/framework/fileutil.js": {
            "name": "demo/platforms/android/assets/www/framework/fileutil.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "demo/platforms/android/assets/www/framework/localization.js": {
            "name": "demo/platforms/android/assets/www/framework/localization.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "demo/platforms/android/assets/www/framework/pk-object.js": {
            "name": "demo/platforms/android/assets/www/framework/pk-object.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "demo/platforms/android/assets/www/framework/scroller.js": {
            "name": "demo/platforms/android/assets/www/framework/scroller.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "demo/platforms/android/assets/www/framework/ui-base.js": {
            "name": "demo/platforms/android/assets/www/framework/ui-base.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "demo/platforms/android/assets/www/framework/ui-core.js": {
            "name": "demo/platforms/android/assets/www/framework/ui-core.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "demo/platforms/android/assets/www/framework/ui-gestures.js": {
            "name": "demo/platforms/android/assets/www/framework/ui-gestures.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "demo/platforms/android/assets/www/framework/ui-label.js": {
            "name": "demo/platforms/android/assets/www/framework/ui-label.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "demo/platforms/android/assets/www/framework/ui-msg.js": {
            "name": "demo/platforms/android/assets/www/framework/ui-msg.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "demo/platforms/android/assets/www/framework/ui-view.js": {
            "name": "demo/platforms/android/assets/www/framework/ui-view.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "demo/platforms/android/assets/www/framework/utility.js": {
            "name": "demo/platforms/android/assets/www/framework/utility.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "demo/platforms/android/assets/www/cordova.js": {
            "name": "demo/platforms/android/assets/www/cordova.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "demo/platforms/ios/build/YASMFDemoApp.app/www/framework/PKObject.js": {
            "name": "demo/platforms/ios/build/YASMFDemoApp.app/www/framework/PKObject.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "demo/platforms/ios/build/YASMFDemoApp.app/www/framework/device.js": {
            "name": "demo/platforms/ios/build/YASMFDemoApp.app/www/framework/device.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "demo/platforms/ios/build/YASMFDemoApp.app/www/framework/fileutil.js": {
            "name": "demo/platforms/ios/build/YASMFDemoApp.app/www/framework/fileutil.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "demo/platforms/ios/build/YASMFDemoApp.app/www/framework/localization.js": {
            "name": "demo/platforms/ios/build/YASMFDemoApp.app/www/framework/localization.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "demo/platforms/ios/build/YASMFDemoApp.app/www/framework/pk-object.js": {
            "name": "demo/platforms/ios/build/YASMFDemoApp.app/www/framework/pk-object.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "demo/platforms/ios/build/YASMFDemoApp.app/www/framework/scroller.js": {
            "name": "demo/platforms/ios/build/YASMFDemoApp.app/www/framework/scroller.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "demo/platforms/ios/build/YASMFDemoApp.app/www/framework/ui-base.js": {
            "name": "demo/platforms/ios/build/YASMFDemoApp.app/www/framework/ui-base.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "demo/platforms/ios/build/YASMFDemoApp.app/www/framework/ui-core.js": {
            "name": "demo/platforms/ios/build/YASMFDemoApp.app/www/framework/ui-core.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "demo/platforms/ios/build/YASMFDemoApp.app/www/framework/ui-gestures.js": {
            "name": "demo/platforms/ios/build/YASMFDemoApp.app/www/framework/ui-gestures.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "demo/platforms/ios/build/YASMFDemoApp.app/www/framework/ui-label.js": {
            "name": "demo/platforms/ios/build/YASMFDemoApp.app/www/framework/ui-label.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "demo/platforms/ios/build/YASMFDemoApp.app/www/framework/ui-msg.js": {
            "name": "demo/platforms/ios/build/YASMFDemoApp.app/www/framework/ui-msg.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "demo/platforms/ios/build/YASMFDemoApp.app/www/framework/ui-view.js": {
            "name": "demo/platforms/ios/build/YASMFDemoApp.app/www/framework/ui-view.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "demo/platforms/ios/build/YASMFDemoApp.app/www/framework/utility.js": {
            "name": "demo/platforms/ios/build/YASMFDemoApp.app/www/framework/utility.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "demo/platforms/ios/build/YASMFDemoApp.app/www/cordova.js": {
            "name": "demo/platforms/ios/build/YASMFDemoApp.app/www/cordova.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "demo/platforms/ios/www/framework/PKObject.js": {
            "name": "demo/platforms/ios/www/framework/PKObject.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "demo/platforms/ios/www/framework/device.js": {
            "name": "demo/platforms/ios/www/framework/device.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "demo/platforms/ios/www/framework/fileutil.js": {
            "name": "demo/platforms/ios/www/framework/fileutil.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "demo/platforms/ios/www/framework/localization.js": {
            "name": "demo/platforms/ios/www/framework/localization.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "demo/platforms/ios/www/framework/pk-object.js": {
            "name": "demo/platforms/ios/www/framework/pk-object.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "demo/platforms/ios/www/framework/scroller.js": {
            "name": "demo/platforms/ios/www/framework/scroller.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "demo/platforms/ios/www/framework/ui-base.js": {
            "name": "demo/platforms/ios/www/framework/ui-base.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "demo/platforms/ios/www/framework/ui-core.js": {
            "name": "demo/platforms/ios/www/framework/ui-core.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "demo/platforms/ios/www/framework/ui-gestures.js": {
            "name": "demo/platforms/ios/www/framework/ui-gestures.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "demo/platforms/ios/www/framework/ui-label.js": {
            "name": "demo/platforms/ios/www/framework/ui-label.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "demo/platforms/ios/www/framework/ui-msg.js": {
            "name": "demo/platforms/ios/www/framework/ui-msg.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "demo/platforms/ios/www/framework/ui-view.js": {
            "name": "demo/platforms/ios/www/framework/ui-view.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "demo/platforms/ios/www/framework/utility.js": {
            "name": "demo/platforms/ios/www/framework/utility.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "demo/platforms/ios/www/cordova.js": {
            "name": "demo/platforms/ios/www/cordova.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "demo/www/framework/PKObject.js": {
            "name": "demo/www/framework/PKObject.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "demo/www/framework/device.js": {
            "name": "demo/www/framework/device.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "demo/www/framework/fileutil.js": {
            "name": "demo/www/framework/fileutil.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "demo/www/framework/localization.js": {
            "name": "demo/www/framework/localization.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "demo/www/framework/pk-object.js": {
            "name": "demo/www/framework/pk-object.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "demo/www/framework/scroller.js": {
            "name": "demo/www/framework/scroller.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "demo/www/framework/ui-base.js": {
            "name": "demo/www/framework/ui-base.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "demo/www/framework/ui-core.js": {
            "name": "demo/www/framework/ui-core.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "demo/www/framework/ui-gestures.js": {
            "name": "demo/www/framework/ui-gestures.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "demo/www/framework/ui-label.js": {
            "name": "demo/www/framework/ui-label.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "demo/www/framework/ui-msg.js": {
            "name": "demo/www/framework/ui-msg.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "demo/www/framework/ui-view.js": {
            "name": "demo/www/framework/ui-view.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "demo/www/framework/utility.js": {
            "name": "demo/www/framework/utility.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "framework/device.js": {
            "name": "framework/device.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "framework/fileutil.js": {
            "name": "framework/fileutil.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "framework/localization.js": {
            "name": "framework/localization.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "framework/pk-object.js": {
            "name": "framework/pk-object.js",
            "modules": {
                "PKObject": 1
            },
            "classes": {
                "PKObject": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "framework/scroller.js": {
            "name": "framework/scroller.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "framework/ui-base.js": {
            "name": "framework/ui-base.js",
            "modules": {
                "UI": 1
            },
            "classes": {
                "UI": 1,
                "UI.FONT": 1,
                "UI.SHADOW": 1,
                "UI.COLOR": 1
            },
            "fors": {},
            "namespaces": {
                "UI": 1
            }
        },
        "framework/ui-core.js": {
            "name": "framework/ui-core.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "framework/ui-gestures.js": {
            "name": "framework/ui-gestures.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "framework/ui-label.js": {
            "name": "framework/ui-label.js",
            "modules": {
                "UI.Label": 1
            },
            "classes": {
                "UI.Label": 1
            },
            "fors": {},
            "namespaces": {
                "UI": 1
            }
        },
        "framework/ui-msg.js": {
            "name": "framework/ui-msg.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "framework/ui-view.js": {
            "name": "framework/ui-view.js",
            "modules": {
                "UI.View": 1
            },
            "classes": {
                "UI.View": 1
            },
            "fors": {},
            "namespaces": {
                "UI": 1
            }
        },
        "framework/utility.js": {
            "name": "framework/utility.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        }
    },
    "modules": {
        "PKObject": {
            "name": "PKObject",
            "submodules": {},
            "classes": {
                "PKObject": 1
            },
            "fors": {},
            "namespaces": {
                "UI": 1
            },
            "tag": "module",
            "file": "framework/pk-object.js",
            "line": 40,
            "description": "BASE PKOBJECT\nThe Object class provides the top object that all other objects inherit\n from. This provides object inheritance via a subclass/superclass mechanism\n without having to worry about prototype or constructor inheritance.\nPKObjects provide simple subclassing and a limited form of KVO in the form\n of tags and tag listeners.",
            "requires": [
                "PKUTIL"
            ],
            "author": "Kerri Shotts",
            "version": "0.3"
        },
        "UI": {
            "name": "UI",
            "submodules": {},
            "classes": {
                "UI": 1,
                "UI.FONT": 1,
                "UI.SHADOW": 1,
                "UI.COLOR": 1
            },
            "fors": {},
            "namespaces": {
                "UI": 1
            },
            "tag": "module",
            "file": "framework/ui-base.js",
            "line": 716,
            "description": "Provides the base namespace for various user-interface functions,\nincluding colors, points, rectangles, shadows, fonts, etc.",
            "requires": [
                "PKUTIL",
                "PKDEVICE"
            ]
        },
        "UI.Label": {
            "name": "UI.Label",
            "submodules": {},
            "classes": {
                "UI.Label": 1
            },
            "fors": {},
            "namespaces": {
                "UI": 1
            },
            "tag": "module",
            "file": "framework/ui-label.js",
            "line": 35,
            "description": "UI-LABEL provides the UI.Label object",
            "requires": [
                "PKUTIL",
                "UI",
                "UI.View",
                "PKObject",
                "PKUI"
            ],
            "author": "Kerri Shotts",
            "version": "0.3"
        },
        "UI.View": {
            "name": "UI.View",
            "submodules": {},
            "classes": {
                "UI.View": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "framework/ui-view.js",
            "line": 35,
            "description": "UI-VIEW provides the UI.View object",
            "requires": [
                "PKUTIL",
                "UI",
                "PKObject",
                "PKUI"
            ],
            "author": "Kerri Shotts",
            "version": "0.3"
        }
    },
    "classes": {
        "PKObject": {
            "name": "PKObject",
            "shortname": "PKObject",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "PKObject",
            "namespace": "",
            "file": "framework/pk-object.js",
            "line": 40,
            "description": "PKObject is the base object for all complex objects used by YASMF;\nsimpler objects that are properties-only do not inherit from this\nclass.\n\nPKObject provides simple inheritance, but not by using the typical\nprototypal method. Rather inheritance is formed by object composition\nwhere all objects are instances of PKObject with methods overridden\ninstead. As such, you can *not* use any Javascript type checking to\ndifferentiate PKObjects; you should instead use the `class`\nproperty.\n\nPKObject provides inheritance to more than just a constructor: any\nmethod can be overridden, but it is critical that the super-chain\nbe properly initialized. See the `super` and `overrideSuper`\nmethods for more information."
        },
        "UI": {
            "name": "UI",
            "shortname": "UI",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "UI",
            "namespace": "UI",
            "file": "framework/ui-base.js",
            "line": 808,
            "description": "Provides the base namespace for various user-interface functions,\nincluding colors, points, rectangles, shadows, fonts, etc."
        },
        "UI.FONT": {
            "name": "UI.FONT",
            "shortname": "UI.FONT",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "UI",
            "namespace": "UI",
            "file": "framework/ui-base.js",
            "line": 460,
            "description": "UI.FONT"
        },
        "UI.SHADOW": {
            "name": "UI.SHADOW",
            "shortname": "UI.SHADOW",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "UI",
            "namespace": "UI",
            "file": "framework/ui-base.js",
            "line": 609,
            "description": "UI.SHADOW"
        },
        "UI.COLOR": {
            "name": "UI.COLOR",
            "shortname": "UI.COLOR",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "UI",
            "namespace": "UI",
            "file": "framework/ui-base.js",
            "line": 716,
            "description": "UI.COLOR"
        },
        "UI.Label": {
            "name": "UI.Label",
            "shortname": "UI.Label",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "UI.Label",
            "namespace": "",
            "file": "framework/ui-label.js",
            "line": 35,
            "description": "A simple label widget.",
            "extends": "UI.View"
        },
        "UI.View": {
            "name": "UI.View",
            "shortname": "UI.View",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "UI.View",
            "namespace": "",
            "file": "framework/ui-view.js",
            "line": 35,
            "description": "Views provide the basic object that all widgets that are part of the\n display hierarchy derive from.",
            "extends": "PKObject"
        }
    },
    "classitems": [
        {
            "file": "demo/merges/android/cordova.js",
            "line": 98,
            "description": "Listen for DOMContentLoaded and notify our channel subscribers.",
            "class": "PKObject"
        },
        {
            "file": "demo/merges/android/cordova.js",
            "line": 108,
            "description": "Intercept calls to addEventListener + removeEventListener and handle deviceready,\nresume, and pause events.",
            "class": "PKObject"
        },
        {
            "file": "demo/merges/android/cordova.js",
            "line": 117,
            "description": "Houses custom event handlers to intercept on document + window event listeners.",
            "class": "PKObject"
        },
        {
            "file": "demo/merges/android/cordova.js",
            "line": 183,
            "description": "Methods to add/remove your own addEventListener hijacking on document + window.",
            "class": "PKObject"
        },
        {
            "file": "demo/merges/android/cordova.js",
            "line": 201,
            "description": "Retrieve original event handlers that were replaced by Cordova",
            "return": {
                "description": "object"
            },
            "class": "PKObject"
        },
        {
            "file": "demo/merges/android/cordova.js",
            "line": 210,
            "description": "Method to fire event from native code\nbNoDetach is required for events which cause an exception which needs to be caught in native code",
            "class": "PKObject"
        },
        {
            "file": "demo/merges/android/cordova.js",
            "line": 240,
            "description": "Plugin callback mechanism.",
            "class": "PKObject"
        },
        {
            "file": "demo/merges/android/cordova.js",
            "line": 260,
            "description": "Called by native code when returning successful result from an action.",
            "class": "PKObject"
        },
        {
            "file": "demo/merges/android/cordova.js",
            "line": 271,
            "description": "Called by native code when returning error result from an action.",
            "class": "PKObject"
        },
        {
            "file": "demo/merges/android/cordova.js",
            "line": 284,
            "description": "Called by native code when returning the result from an action.",
            "class": "PKObject"
        },
        {
            "file": "demo/merges/android/cordova.js",
            "line": 462,
            "description": "Merge properties from one object onto another recursively.  Properties from\nthe src object will overwrite existing target property.",
            "params": [
                {
                    "name": "target",
                    "description": "Object to merge properties into."
                },
                {
                    "name": "src",
                    "description": "Object to merge properties from."
                }
            ],
            "class": "PKObject"
        },
        {
            "file": "demo/merges/android/cordova.js",
            "line": 507,
            "description": "Custom pub-sub \"channel\" that can have functions subscribed to it\nThis object is used to define and control firing of events for\ncordova initialization, as well as for custom events thereafter.\n\nThe order of events during page load and Cordova startup is as follows:\n\nonDOMContentLoaded*         Internal event that is received when the web page is loaded and parsed.\nonNativeReady*              Internal event that indicates the Cordova native side is ready.\nonCordovaReady*             Internal event fired when all Cordova JavaScript objects have been created.\nonCordovaInfoReady*         Internal event fired when device properties are available.\nonCordovaConnectionReady*   Internal event fired when the connection property has been set.\nonDeviceReady*              User event fired to indicate that Cordova is ready\nonResume                    User event fired to indicate a start/resume lifecycle event\nonPause                     User event fired to indicate a pause lifecycle event\nonDestroy*                  Internal event fired when app is being destroyed (User should use window.onunload event, not this one).\n\nThe events marked with an * are sticky. Once they have fired, they will stay in the fired state.\nAll listeners that subscribe after the event is fired will be executed right away.\n\nThe only Cordova events that user code should register for are:\n     deviceready           Cordova native code is initialized and Cordova APIs can be called from JavaScript\n     pause                 App has moved to background\n     resume                App has returned to foreground\n\nListeners can be registered as:\n     document.addEventListener(\"deviceready\", myDeviceReadyListener, false);\n     document.addEventListener(\"resume\", myResumeListener, false);\n     document.addEventListener(\"pause\", myPauseListener, false);\n\nThe DOM lifecycle events should be used for saving and restoring state\n     window.onload\n     window.onunload",
            "class": "PKObject"
        },
        {
            "file": "demo/merges/android/cordova.js",
            "line": 543,
            "description": "Channel",
            "is_constructor": 1,
            "params": [
                {
                    "name": "type",
                    "description": "String the channel name"
                }
            ],
            "class": "PKObject"
        },
        {
            "file": "demo/merges/android/cordova.js",
            "line": 563,
            "description": "Calls the provided function only after all of the channels specified\nhave been fired. All channels must be sticky channels.",
            "class": "PKObject"
        },
        {
            "file": "demo/merges/android/cordova.js",
            "line": 588,
            "description": "cordova Channels that must fire before \"deviceready\" is fired.",
            "class": "PKObject"
        },
        {
            "file": "demo/merges/android/cordova.js",
            "line": 594,
            "description": "Indicate that a feature needs to be initialized before it is ready to be used.\nThis holds up Cordova's \"deviceready\" event until the feature has been initialized\nand Cordova.initComplete(feature) is called.",
            "params": [
                {
                    "name": "feature",
                    "description": "The unique feature name",
                    "type": "String"
                }
            ],
            "class": "PKObject"
        },
        {
            "file": "demo/merges/android/cordova.js",
            "line": 609,
            "description": "Indicate that initialization code has completed and the feature is ready to be used.",
            "params": [
                {
                    "name": "feature",
                    "description": "The unique feature name",
                    "type": "String"
                }
            ],
            "class": "PKObject"
        },
        {
            "file": "demo/merges/android/cordova.js",
            "line": 626,
            "description": "Subscribes the given function to the channel. Any time that\nChannel.fire is called so too will the function.\nOptionally specify an execution context for the function\nand a guid that can be used to stop subscribing to the channel.\nReturns the guid.",
            "class": "PKObject"
        },
        {
            "file": "demo/merges/android/cordova.js",
            "line": 662,
            "description": "Unsubscribes the function with the given guid from the channel.",
            "class": "PKObject"
        },
        {
            "file": "demo/merges/android/cordova.js",
            "line": 680,
            "description": "Calls all functions subscribed to this channel.",
            "class": "PKObject"
        },
        {
            "file": "demo/merges/android/cordova.js",
            "line": 780,
            "description": "Execute a cordova command.  It is up to the native side whether this action\nis synchronous or asynchronous.  The native side can return:\n     Synchronous: PluginResult object as a JSON string\n     Asynchronous: Empty string \"\"\nIf async, the native side will cordova.callbackSuccess or cordova.callbackError,\ndepending upon the result of the action.",
            "params": [
                {
                    "name": "success",
                    "description": "The success callback",
                    "type": "Function"
                },
                {
                    "name": "fail",
                    "description": "The fail callback",
                    "type": "Function"
                },
                {
                    "name": "service",
                    "description": "The name of the service to use",
                    "type": "String"
                },
                {
                    "name": "action",
                    "description": "Action to be run in cordova",
                    "type": "String"
                },
                {
                    "name": "args",
                    "description": "Zero or more arguments to pass to the method",
                    "type": "String[]",
                    "optional": true
                }
            ],
            "class": "PKObject"
        },
        {
            "file": "demo/merges/android/cordova.js",
            "line": 1180,
            "description": "Gets a picture from source defined by \"options.sourceType\", and returns the\nimage as defined by the \"options.destinationType\" option.\n\nThe defaults are sourceType=CAMERA and destinationType=FILE_URI.",
            "params": [
                {
                    "name": "successCallback",
                    "description": "",
                    "type": "Function"
                },
                {
                    "name": "errorCallback",
                    "description": "",
                    "type": "Function"
                },
                {
                    "name": "options",
                    "description": "",
                    "type": "Object"
                }
            ],
            "class": "PKObject"
        },
        {
            "file": "demo/merges/android/cordova.js",
            "line": 1261,
            "description": "A handle to an image picker popover.",
            "class": "PKObject"
        },
        {
            "file": "demo/merges/android/cordova.js",
            "line": 1279,
            "description": "Encapsulates options for iOS Popover image picker",
            "class": "PKObject"
        },
        {
            "file": "demo/merges/android/cordova.js",
            "line": 1299,
            "description": "Encapsulates all audio capture operation configuration options.",
            "class": "PKObject"
        },
        {
            "file": "demo/merges/android/cordova.js",
            "line": 1318,
            "description": "The CaptureError interface encapsulates all errors in the Capture API.",
            "class": "PKObject"
        },
        {
            "file": "demo/merges/android/cordova.js",
            "line": 1343,
            "description": "Encapsulates all image capture operation configuration options.",
            "class": "PKObject"
        },
        {
            "file": "demo/merges/android/cordova.js",
            "line": 1360,
            "description": "Encapsulates all video capture operation configuration options.",
            "class": "PKObject"
        },
        {
            "file": "demo/merges/android/cordova.js",
            "line": 1379,
            "description": "CompassError.\nAn error code assigned by an implementation when an error has occurred",
            "is_constructor": 1,
            "class": "PKObject"
        },
        {
            "file": "demo/merges/android/cordova.js",
            "line": 1412,
            "description": "Encapsulates a set of parameters that the capture device supports.",
            "class": "PKObject"
        },
        {
            "file": "demo/merges/android/cordova.js",
            "line": 1433,
            "description": "Network status",
            "class": "PKObject"
        },
        {
            "file": "demo/merges/android/cordova.js",
            "line": 1457,
            "description": "Converts primitives into Complex Object\nCurrently only used for Date fields",
            "class": "PKObject"
        },
        {
            "file": "demo/merges/android/cordova.js",
            "line": 1471,
            "description": "Converts Complex objects into primitives\nOnly conversion at present is for Dates.",
            "class": "PKObject"
        },
        {
            "file": "demo/merges/android/cordova.js",
            "line": 1495,
            "description": "Contains information about a single contact.",
            "is_constructor": 1,
            "params": [
                {
                    "name": "id",
                    "description": "unique identifier",
                    "type": "DOMString"
                },
                {
                    "name": "displayName",
                    "description": "",
                    "type": "DOMString"
                },
                {
                    "name": "name",
                    "description": "",
                    "type": "ContactName"
                },
                {
                    "name": "nickname",
                    "description": "",
                    "type": "DOMString"
                },
                {
                    "name": "phoneNumbers",
                    "description": "array of phone numbers",
                    "type": "Array.<ContactField>"
                },
                {
                    "name": "emails",
                    "description": "array of email addresses",
                    "type": "Array.<ContactField>"
                },
                {
                    "name": "addresses",
                    "description": "array of addresses",
                    "type": "Array.<ContactAddress>"
                },
                {
                    "name": "ims",
                    "description": "instant messaging user ids",
                    "type": "Array.<ContactField>"
                },
                {
                    "name": "organizations",
                    "description": "",
                    "type": "Array.<ContactOrganization>"
                },
                {
                    "name": "birthday",
                    "description": "contact's birthday",
                    "type": "DOMString"
                },
                {
                    "name": "note",
                    "description": "user notes about contact",
                    "type": "DOMString"
                },
                {
                    "name": "photos",
                    "description": "",
                    "type": "Array.<ContactField>"
                },
                {
                    "name": "categories",
                    "description": "",
                    "type": "Array.<ContactField>"
                },
                {
                    "name": "urls",
                    "description": "contact's web sites",
                    "type": "Array.<ContactField>"
                }
            ],
            "class": "PKObject"
        },
        {
            "file": "demo/merges/android/cordova.js",
            "line": 1532,
            "description": "Removes contact from device storage.",
            "params": [
                {
                    "name": "successCB",
                    "description": "success callback"
                },
                {
                    "name": "errorCB",
                    "description": "error callback"
                }
            ],
            "class": "PKObject"
        },
        {
            "file": "demo/merges/android/cordova.js",
            "line": 1550,
            "description": "Creates a deep copy of this Contact.\nWith the contact ID set to null.",
            "return": {
                "description": "copy of this Contact"
            },
            "class": "PKObject"
        },
        {
            "file": "demo/merges/android/cordova.js",
            "line": 1580,
            "description": "Persists contact to device storage.",
            "params": [
                {
                    "name": "successCB",
                    "description": "success callback"
                },
                {
                    "name": "errorCB",
                    "description": "error callback"
                }
            ],
            "class": "PKObject"
        },
        {
            "file": "demo/merges/android/cordova.js",
            "line": 1614,
            "description": "Contact address.",
            "is_constructor": 1,
            "params": [
                {
                    "name": "id",
                    "description": "unique identifier, should only be set by native code",
                    "type": "DOMString"
                },
                {
                    "name": "formatted",
                    "description": "// NOTE: not a W3C standard"
                },
                {
                    "name": "streetAddress",
                    "description": ""
                },
                {
                    "name": "locality",
                    "description": ""
                },
                {
                    "name": "region",
                    "description": ""
                },
                {
                    "name": "postalCode",
                    "description": ""
                },
                {
                    "name": "country",
                    "description": ""
                }
            ],
            "class": "PKObject"
        },
        {
            "file": "demo/merges/android/cordova.js",
            "line": 1645,
            "description": "ContactError.\nAn error code assigned by an implementation when an error has occurred",
            "is_constructor": 1,
            "class": "PKObject"
        },
        {
            "file": "demo/merges/android/cordova.js",
            "line": 1654,
            "description": "Error codes",
            "class": "PKObject"
        },
        {
            "file": "demo/merges/android/cordova.js",
            "line": 1672,
            "description": "Generic contact field.",
            "is_constructor": 1,
            "params": [
                {
                    "name": "id",
                    "description": "unique identifier, should only be set by native code // NOTE: not a W3C standard",
                    "type": "DOMString"
                },
                {
                    "name": "type",
                    "description": ""
                },
                {
                    "name": "value",
                    "description": ""
                },
                {
                    "name": "pref",
                    "description": ""
                }
            ],
            "class": "PKObject"
        },
        {
            "file": "demo/merges/android/cordova.js",
            "line": 1694,
            "description": "ContactFindOptions.",
            "is_constructor": 1,
            "params": [
                {
                    "name": "filter",
                    "description": "used to match contacts against"
                },
                {
                    "name": "multiple",
                    "description": "boolean used to determine if more than one contact should be returned"
                }
            ],
            "class": "PKObject"
        },
        {
            "file": "demo/merges/android/cordova.js",
            "line": 1713,
            "description": "Contact name.",
            "is_constructor": 1,
            "params": [
                {
                    "name": "formatted",
                    "description": "// NOTE: not part of W3C standard"
                },
                {
                    "name": "familyName",
                    "description": ""
                },
                {
                    "name": "givenName",
                    "description": ""
                },
                {
                    "name": "middle",
                    "description": ""
                },
                {
                    "name": "prefix",
                    "description": ""
                },
                {
                    "name": "suffix",
                    "description": ""
                }
            ],
            "class": "PKObject"
        },
        {
            "file": "demo/merges/android/cordova.js",
            "line": 1739,
            "description": "Contact organization.",
            "is_constructor": 1,
            "params": [
                {
                    "name": "id",
                    "description": "unique identifier, should only be set by native code // NOTE: not a W3C standard",
                    "type": "DOMString"
                },
                {
                    "name": "name",
                    "description": ""
                },
                {
                    "name": "dept",
                    "description": ""
                },
                {
                    "name": "title",
                    "description": ""
                },
                {
                    "name": "startDate",
                    "description": ""
                },
                {
                    "name": "endDate",
                    "description": ""
                },
                {
                    "name": "location",
                    "description": ""
                },
                {
                    "name": "desc",
                    "description": ""
                }
            ],
            "class": "PKObject"
        },
        {
            "file": "demo/merges/android/cordova.js",
            "line": 1768,
            "description": "This class contains position information.",
            "params": [
                {
                    "name": "lat",
                    "description": "",
                    "type": "Object"
                },
                {
                    "name": "lng",
                    "description": "",
                    "type": "Object"
                },
                {
                    "name": "alt",
                    "description": "",
                    "type": "Object"
                },
                {
                    "name": "acc",
                    "description": "",
                    "type": "Object"
                },
                {
                    "name": "head",
                    "description": "",
                    "type": "Object"
                },
                {
                    "name": "vel",
                    "description": "",
                    "type": "Object"
                },
                {
                    "name": "altacc",
                    "description": "",
                    "type": "Object"
                }
            ],
            "is_constructor": 1,
            "class": "PKObject"
        },
        {
            "file": "demo/merges/android/cordova.js",
            "line": 1780,
            "description": "The latitude of the position.",
            "class": "PKObject"
        },
        {
            "file": "demo/merges/android/cordova.js",
            "line": 1784,
            "description": "The longitude of the position,",
            "class": "PKObject"
        },
        {
            "file": "demo/merges/android/cordova.js",
            "line": 1788,
            "description": "The accuracy of the position.",
            "class": "PKObject"
        },
        {
            "file": "demo/merges/android/cordova.js",
            "line": 1792,
            "description": "The altitude of the position.",
            "class": "PKObject"
        },
        {
            "file": "demo/merges/android/cordova.js",
            "line": 1796,
            "description": "The direction the device is moving at the position.",
            "class": "PKObject"
        },
        {
            "file": "demo/merges/android/cordova.js",
            "line": 1800,
            "description": "The velocity with which the device is moving at the position.",
            "class": "PKObject"
        },
        {
            "file": "demo/merges/android/cordova.js",
            "line": 1809,
            "description": "The altitude accuracy of the position.",
            "class": "PKObject"
        },
        {
            "file": "demo/merges/android/cordova.js",
            "line": 1829,
            "description": "An interface representing a directory on the file system.\n\n{boolean} isFile always false (readonly)\n{boolean} isDirectory always true (readonly)\n{DOMString} name of the directory, excluding the path leading to it (readonly)\n{DOMString} fullPath the absolute full path to the directory (readonly)\nTODO: implement this!!! {FileSystem} filesystem on which the directory resides (readonly)",
            "class": "PKObject"
        },
        {
            "file": "demo/merges/android/cordova.js",
            "line": 1844,
            "description": "Creates a new DirectoryReader to read entries from this directory",
            "class": "PKObject"
        },
        {
            "file": "demo/merges/android/cordova.js",
            "line": 1851,
            "description": "Creates or looks up a directory",
            "params": [
                {
                    "name": "path",
                    "description": "either a relative or absolute path from this directory in which to look up or create a directory",
                    "type": "DOMString"
                },
                {
                    "name": "options",
                    "description": "to create or exclusively create the directory",
                    "type": "Flags"
                },
                {
                    "name": "successCallback",
                    "description": "is called with the new entry",
                    "type": "Function"
                },
                {
                    "name": "errorCallback",
                    "description": "is called with a FileError",
                    "type": "Function"
                }
            ],
            "class": "PKObject"
        },
        {
            "file": "demo/merges/android/cordova.js",
            "line": 1871,
            "description": "Deletes a directory and all of it's contents",
            "params": [
                {
                    "name": "successCallback",
                    "description": "is called with no parameters",
                    "type": "Function"
                },
                {
                    "name": "errorCallback",
                    "description": "is called with a FileError",
                    "type": "Function"
                }
            ],
            "class": "PKObject"
        },
        {
            "file": "demo/merges/android/cordova.js",
            "line": 1885,
            "description": "Creates or looks up a file",
            "params": [
                {
                    "name": "path",
                    "description": "either a relative or absolute path from this directory in which to look up or create a file",
                    "type": "DOMString"
                },
                {
                    "name": "options",
                    "description": "to create or exclusively create the file",
                    "type": "Flags"
                },
                {
                    "name": "successCallback",
                    "description": "is called with the new entry",
                    "type": "Function"
                },
                {
                    "name": "errorCallback",
                    "description": "is called with a FileError",
                    "type": "Function"
                }
            ],
            "class": "PKObject"
        },
        {
            "file": "demo/merges/android/cordova.js",
            "line": 1916,
            "description": "An interface that lists the files and directories in a directory.",
            "class": "PKObject"
        },
        {
            "file": "demo/merges/android/cordova.js",
            "line": 1923,
            "description": "Returns a list of entries from a directory.",
            "params": [
                {
                    "name": "successCallback",
                    "description": "is called with a list of entries",
                    "type": "Function"
                },
                {
                    "name": "errorCallback",
                    "description": "is called with a FileError",
                    "type": "Function"
                }
            ],
            "class": "PKObject"
        },
        {
            "file": "demo/merges/android/cordova.js",
            "line": 1966,
            "description": "Represents a file or directory on the local file system.",
            "params": [
                {
                    "name": "isFile!~YUIDOC_LINE~!",
                    "description": "true if Entry is a file (readonly)",
                    "type": "Boolean"
                },
                {
                    "name": "isDirectory!~YUIDOC_LINE~!",
                    "description": "true if Entry is a directory (readonly)",
                    "type": "Boolean"
                },
                {
                    "name": "name!~YUIDOC_LINE~!",
                    "description": "name of the file or directory, excluding the path\n           leading to it (readonly)",
                    "type": "DOMString"
                },
                {
                    "name": "fullPath!~YUIDOC_LINE~!",
                    "description": "the absolute full path to the file or directory\n           (readonly)",
                    "type": "DOMString"
                }
            ],
            "class": "PKObject"
        },
        {
            "file": "demo/merges/android/cordova.js",
            "line": 1988,
            "description": "Look up the metadata of the entry.",
            "params": [
                {
                    "name": "successCallback!~YUIDOC_LINE~!",
                    "description": "is called with a Metadata object",
                    "type": "Function"
                },
                {
                    "name": "errorCallback!~YUIDOC_LINE~!",
                    "description": "is called with a FileError",
                    "type": "Function"
                }
            ],
            "class": "PKObject"
        },
        {
            "file": "demo/merges/android/cordova.js",
            "line": 2009,
            "description": "Set the metadata of the entry.",
            "params": [
                {
                    "name": "successCallback!~YUIDOC_LINE~!",
                    "description": "is called with a Metadata object",
                    "type": "Function"
                },
                {
                    "name": "errorCallback!~YUIDOC_LINE~!",
                    "description": "is called with a FileError",
                    "type": "Function"
                },
                {
                    "name": "metadataObject!~YUIDOC_LINE~!",
                    "description": "keys and values to set",
                    "type": "Object"
                }
            ],
            "class": "PKObject"
        },
        {
            "file": "demo/merges/android/cordova.js",
            "line": 2024,
            "description": "Move a file or directory to a new location.",
            "params": [
                {
                    "name": "parent!~YUIDOC_LINE~!",
                    "description": "the directory to which to move this entry",
                    "type": "DirectoryEntry"
                },
                {
                    "name": "newName!~YUIDOC_LINE~!",
                    "description": "new name of the entry, defaults to the current name",
                    "type": "DOMString"
                },
                {
                    "name": "successCallback!~YUIDOC_LINE~!",
                    "description": "called with the new DirectoryEntry object",
                    "type": "Function"
                },
                {
                    "name": "errorCallback!~YUIDOC_LINE~!",
                    "description": "called with a FileError",
                    "type": "Function"
                }
            ],
            "class": "PKObject"
        },
        {
            "file": "demo/merges/android/cordova.js",
            "line": 2063,
            "description": "Copy a directory to a different location.",
            "params": [
                {
                    "name": "parent!~YUIDOC_LINE~!",
                    "description": "the directory to which to copy the entry",
                    "type": "DirectoryEntry"
                },
                {
                    "name": "newName!~YUIDOC_LINE~!",
                    "description": "new name of the entry, defaults to the current name",
                    "type": "DOMString"
                },
                {
                    "name": "successCallback!~YUIDOC_LINE~!",
                    "description": "called with the new Entry object",
                    "type": "Function"
                },
                {
                    "name": "errorCallback!~YUIDOC_LINE~!",
                    "description": "called with a FileError",
                    "type": "Function"
                }
            ],
            "class": "PKObject"
        },
        {
            "file": "demo/merges/android/cordova.js",
            "line": 2104,
            "description": "Return a URL that can be used to identify this entry.",
            "class": "PKObject"
        },
        {
            "file": "demo/merges/android/cordova.js",
            "line": 2112,
            "description": "Returns a URI that can be used to identify this entry.",
            "params": [
                {
                    "name": "mimeType",
                    "description": "for a FileEntry, the mime type to be used to interpret the file, when loaded through this URI.",
                    "type": "DOMString"
                }
            ],
            "return": {
                "description": "uri"
            },
            "class": "PKObject"
        },
        {
            "file": "demo/merges/android/cordova.js",
            "line": 2124,
            "description": "Remove a file or directory. It is an error to attempt to delete a\ndirectory that is not empty. It is an error to attempt to delete a\nroot directory of a file system.",
            "params": [
                {
                    "name": "successCallback",
                    "description": "called with no parameters",
                    "type": "Function"
                },
                {
                    "name": "errorCallback",
                    "description": "called with a FileError",
                    "type": "Function"
                }
            ],
            "class": "PKObject"
        },
        {
            "file": "demo/merges/android/cordova.js",
            "line": 2140,
            "description": "Look up the parent DirectoryEntry of this entry.",
            "params": [
                {
                    "name": "successCallback",
                    "description": "called with the parent DirectoryEntry object",
                    "type": "Function"
                },
                {
                    "name": "errorCallback",
                    "description": "called with a FileError",
                    "type": "Function"
                }
            ],
            "class": "PKObject"
        },
        {
            "file": "demo/merges/android/cordova.js",
            "line": 2166,
            "description": "Constructor.\nname {DOMString} name of the file, without path information\nfullPath {DOMString} the full path of the file, including the name\ntype {DOMString} mime type\nlastModifiedDate {Date} last modified date\nsize {Number} size of the file in bytes",
            "class": "PKObject"
        },
        {
            "file": "demo/merges/android/cordova.js",
            "line": 2187,
            "description": "Returns a \"slice\" of the file. Since Cordova Files don't contain the actual\ncontent, this really returns a File with adjusted start and end.\nSlices of slices are supported.\nstart {Number} The index at which to start the slice (inclusive).\nend {Number} The index at which to end the slice (exclusive).",
            "class": "PKObject"
        },
        {
            "file": "demo/merges/android/cordova.js",
            "line": 2235,
            "description": "An interface representing a file on the file system.\n\n{boolean} isFile always true (readonly)\n{boolean} isDirectory always false (readonly)\n{DOMString} name of the file, excluding the path leading to it (readonly)\n{DOMString} fullPath the absolute full path to the file (readonly)\n{FileSystem} filesystem on which the file resides (readonly)",
            "class": "PKObject"
        },
        {
            "file": "demo/merges/android/cordova.js",
            "line": 2250,
            "description": "Creates a new FileWriter associated with the file that this FileEntry represents.",
            "params": [
                {
                    "name": "successCallback",
                    "description": "is called with the new FileWriter",
                    "type": "Function"
                },
                {
                    "name": "errorCallback",
                    "description": "is called with a FileError",
                    "type": "Function"
                }
            ],
            "class": "PKObject"
        },
        {
            "file": "demo/merges/android/cordova.js",
            "line": 2268,
            "description": "Returns a File that represents the current state of the file that this FileEntry represents.",
            "params": [
                {
                    "name": "successCallback",
                    "description": "is called with the new File object",
                    "type": "Function"
                },
                {
                    "name": "errorCallback",
                    "description": "is called with a FileError",
                    "type": "Function"
                }
            ],
            "class": "PKObject"
        },
        {
            "file": "demo/merges/android/cordova.js",
            "line": 2293,
            "description": "FileError",
            "class": "PKObject"
        },
        {
            "file": "demo/merges/android/cordova.js",
            "line": 2332,
            "description": "This class reads the mobile device file system.\n\nFor Android:\n     The root directory is the root of the file system.\n     To read from the SD card, the file name is \"sdcard/my_file.txt\"",
            "is_constructor": 1,
            "class": "PKObject"
        },
        {
            "file": "demo/merges/android/cordova.js",
            "line": 2403,
            "description": "Abort reading file.",
            "class": "PKObject"
        },
        {
            "file": "demo/merges/android/cordova.js",
            "line": 2428,
            "description": "Read text file.",
            "params": [
                {
                    "name": "file",
                    "description": "File object containing file properties",
                    "type": "File"
                },
                {
                    "name": "encoding",
                    "description": "[Optional] (see http://www.iana.org/assignments/character-sets)"
                }
            ],
            "class": "PKObject"
        },
        {
            "file": "demo/merges/android/cordova.js",
            "line": 2505,
            "description": "Read file and return data as a base64 encoded data url.\nA data url is of the form:\n     data:[<mediatype>][;base64],<data>",
            "params": [
                {
                    "name": "file",
                    "description": "File object containing file properties",
                    "type": "File"
                }
            ],
            "class": "PKObject"
        },
        {
            "file": "demo/merges/android/cordova.js",
            "line": 2579,
            "description": "Read file and return data as a binary data.",
            "params": [
                {
                    "name": "file",
                    "description": "File object containing file properties",
                    "type": "File"
                }
            ],
            "class": "PKObject"
        },
        {
            "file": "demo/merges/android/cordova.js",
            "line": 2593,
            "description": "Read file and return data as a binary data.",
            "params": [
                {
                    "name": "file",
                    "description": "File object containing file properties",
                    "type": "File"
                }
            ],
            "class": "PKObject"
        },
        {
            "file": "demo/merges/android/cordova.js",
            "line": 2616,
            "description": "An interface representing a file system",
            "is_constructor": 1,
            "class": "PKObject"
        },
        {
            "file": "demo/merges/android/cordova.js",
            "line": 2652,
            "description": "FileTransfer uploads a file to a remote server.",
            "is_constructor": 1,
            "class": "PKObject"
        },
        {
            "file": "demo/merges/android/cordova.js",
            "line": 2661,
            "description": "Given an absolute file path, uploads a file on the device to a remote server\nusing a multipart HTTP request.",
            "params": [
                {
                    "name": "filePath",
                    "description": "Full path of the file on the device",
                    "type": "String"
                },
                {
                    "name": "server",
                    "description": "URL of the server to receive the file",
                    "type": "String"
                },
                {
                    "name": "successCallback",
                    "description": "(Function}  Callback to be invoked when upload has completed"
                },
                {
                    "name": "errorCallback",
                    "description": "Callback to be invoked upon error",
                    "type": "Function"
                },
                {
                    "name": "options",
                    "description": "Optional parameters such as file name and mimetype",
                    "type": "FileUploadOptions"
                },
                {
                    "name": "trustAllHosts",
                    "description": "Optional trust all hosts (e.g. for self-signed certs), defaults to false",
                    "type": "Boolean"
                }
            ],
            "class": "PKObject"
        },
        {
            "file": "demo/merges/android/cordova.js",
            "line": 2714,
            "description": "Downloads a file form a given URL and saves it to the specified directory.",
            "params": [
                {
                    "name": "source",
                    "description": "URL of the server to receive the file",
                    "type": "String"
                },
                {
                    "name": "target",
                    "description": "Full path of the file on the device",
                    "type": "String"
                },
                {
                    "name": "successCallback",
                    "description": "(Function}  Callback to be invoked when upload has completed"
                },
                {
                    "name": "errorCallback",
                    "description": "Callback to be invoked upon error",
                    "type": "Function"
                },
                {
                    "name": "trustAllHosts",
                    "description": "Optional trust all hosts (e.g. for self-signed certs), defaults to false",
                    "type": "Boolean"
                }
            ],
            "class": "PKObject"
        },
        {
            "file": "demo/merges/android/cordova.js",
            "line": 2754,
            "description": "Aborts the ongoing file transfer on this object",
            "params": [
                {
                    "name": "successCallback",
                    "description": "Callback to be invoked upon success",
                    "type": "Function"
                },
                {
                    "name": "errorCallback",
                    "description": "Callback to be invoked upon error",
                    "type": "Function"
                }
            ],
            "class": "PKObject"
        },
        {
            "file": "demo/merges/android/cordova.js",
            "line": 2770,
            "description": "FileTransferError",
            "is_constructor": 1,
            "class": "PKObject"
        },
        {
            "file": "demo/merges/android/cordova.js",
            "line": 2794,
            "description": "Options to customize the HTTP request used to upload files.",
            "is_constructor": 1,
            "params": [
                {
                    "name": "fileKey",
                    "description": "Name of file request parameter.",
                    "type": "String"
                },
                {
                    "name": "fileName",
                    "description": "Filename to be used by the server. Defaults to image.jpg.",
                    "type": "String"
                },
                {
                    "name": "mimeType",
                    "description": "Mimetype of the uploaded file. Defaults to image/jpeg.",
                    "type": "String"
                },
                {
                    "name": "params",
                    "description": "Object with key: value params to send to the server.",
                    "type": "Object"
                },
                {
                    "name": "headers",
                    "description": "Keys are header names, values are header values. Multiple\n                          headers of the same name are not supported.",
                    "type": "Object"
                }
            ],
            "class": "PKObject"
        },
        {
            "file": "demo/merges/android/cordova.js",
            "line": 2819,
            "description": "FileUploadResult",
            "is_constructor": 1,
            "class": "PKObject"
        },
        {
            "file": "demo/merges/android/cordova.js",
            "line": 2840,
            "description": "This class writes to the mobile device file system.\n\nFor Android:\n     The root directory is the root of the file system.\n     To write to the SD card, the file name is \"sdcard/my_file.txt\"",
            "is_constructor": 1,
            "params": [
                {
                    "name": "file",
                    "description": "File object containing file properties",
                    "type": "File"
                },
                {
                    "name": "append",
                    "description": "if true write to the end of the file, otherwise overwrite the file"
                }
            ],
            "class": "PKObject"
        },
        {
            "file": "demo/merges/android/cordova.js",
            "line": 2882,
            "description": "Abort writing file.",
            "class": "PKObject"
        },
        {
            "file": "demo/merges/android/cordova.js",
            "line": 2907,
            "description": "Writes data to the file",
            "params": [
                {
                    "name": "text",
                    "description": "to be written"
                }
            ],
            "class": "PKObject"
        },
        {
            "file": "demo/merges/android/cordova.js",
            "line": 2981,
            "description": "Moves the file pointer to the location specified.\n\nIf the offset is a negative number the position of the file\npointer is rewound.  If the offset is greater than the file\nsize the position is set to the end of the file.",
            "params": [
                {
                    "name": "offset",
                    "description": "is the location to move the file pointer to."
                }
            ],
            "class": "PKObject"
        },
        {
            "file": "demo/merges/android/cordova.js",
            "line": 3016,
            "description": "Truncates the file to the size specified.",
            "params": [
                {
                    "name": "size",
                    "description": "to chop the file at."
                }
            ],
            "class": "PKObject"
        },
        {
            "file": "demo/merges/android/cordova.js",
            "line": 3095,
            "description": "Supplies arguments to methods that lookup or create files and directories.",
            "params": [
                {
                    "name": "create!~YUIDOC_LINE~!",
                    "description": "file or directory if it doesn't exist",
                    "type": "Boolean"
                },
                {
                    "name": "exclusive!~YUIDOC_LINE~!",
                    "description": "used with create; if true the command will fail if\n           target path exists",
                    "type": "Boolean"
                }
            ],
            "class": "PKObject"
        },
        {
            "file": "demo/merges/android/cordova.js",
            "line": 3117,
            "description": "Globalization error object",
            "is_constructor": 1,
            "params": [
                {
                    "name": "code",
                    "description": ""
                },
                {
                    "name": "message",
                    "description": ""
                }
            ],
            "class": "PKObject"
        },
        {
            "file": "demo/merges/android/cordova.js",
            "line": 3191,
            "description": "Represents a local file system.",
            "class": "PKObject"
        },
        {
            "file": "demo/merges/android/cordova.js",
            "line": 3214,
            "description": "This class provides access to the device media, interfaces to both sound and video",
            "is_constructor": 1,
            "params": [
                {
                    "name": "src",
                    "description": "The file name or url to play"
                },
                {
                    "name": "successCallback",
                    "description": "The callback to be called when the file is done playing or recording.\n                                 successCallback()"
                },
                {
                    "name": "errorCallback",
                    "description": "The callback to be called if there is an error.\n                                 errorCallback(int errorCode) - OPTIONAL"
                },
                {
                    "name": "statusCallback",
                    "description": "The callback to be called when media status has changed.\n                                 statusCallback(int statusCode) - OPTIONAL"
                }
            ],
            "class": "PKObject"
        },
        {
            "file": "demo/merges/android/cordova.js",
            "line": 3258,
            "description": "Start or resume playing audio file.",
            "class": "PKObject"
        },
        {
            "file": "demo/merges/android/cordova.js",
            "line": 3265,
            "description": "Stop playing audio file.",
            "class": "PKObject"
        },
        {
            "file": "demo/merges/android/cordova.js",
            "line": 3275,
            "description": "Seek or jump to a new time in the track..",
            "class": "PKObject"
        },
        {
            "file": "demo/merges/android/cordova.js",
            "line": 3285,
            "description": "Pause playing audio file.",
            "class": "PKObject"
        },
        {
            "file": "demo/merges/android/cordova.js",
            "line": 3292,
            "description": "Get duration of an audio file.\nThe duration is only set for audio that is playing, paused or stopped.",
            "return": {
                "description": "duration or -1 if not known."
            },
            "class": "PKObject"
        },
        {
            "file": "demo/merges/android/cordova.js",
            "line": 3302,
            "description": "Get position of audio.",
            "class": "PKObject"
        },
        {
            "file": "demo/merges/android/cordova.js",
            "line": 3313,
            "description": "Start recording audio file.",
            "class": "PKObject"
        },
        {
            "file": "demo/merges/android/cordova.js",
            "line": 3320,
            "description": "Stop recording audio file.",
            "class": "PKObject"
        },
        {
            "file": "demo/merges/android/cordova.js",
            "line": 3327,
            "description": "Release the resources.",
            "class": "PKObject"
        },
        {
            "file": "demo/merges/android/cordova.js",
            "line": 3334,
            "description": "Adjust the volume.",
            "class": "PKObject"
        },
        {
            "file": "demo/merges/android/cordova.js",
            "line": 3341,
            "description": "Audio has status update.\nPRIVATE",
            "params": [
                {
                    "name": "id",
                    "description": "The media object id (string)"
                },
                {
                    "name": "msgType",
                    "description": "The 'type' of update this is"
                },
                {
                    "name": "value",
                    "description": "Use of value is determined by the msgType"
                }
            ],
            "class": "PKObject"
        },
        {
            "file": "demo/merges/android/cordova.js",
            "line": 3388,
            "description": "This class contains information about any Media errors.",
            "class": "PKObject"
        },
        {
            "file": "demo/merges/android/cordova.js",
            "line": 3432,
            "description": "Represents a single file.\n\nname {DOMString} name of the file, without path information\nfullPath {DOMString} the full path of the file, including the name\ntype {DOMString} mime type\nlastModifiedDate {Date} last modified date\nsize {Number} size of the file in bytes",
            "class": "PKObject"
        },
        {
            "file": "demo/merges/android/cordova.js",
            "line": 3447,
            "description": "Request capture format data for a specific file and type",
            "params": [
                {
                    "name": "successCB",
                    "description": "",
                    "type": "Function"
                },
                {
                    "name": "errorCB",
                    "description": "",
                    "type": "Function"
                }
            ],
            "class": "PKObject"
        },
        {
            "file": "demo/merges/android/cordova.js",
            "line": 3468,
            "description": "MediaFileData encapsulates format information of a media file.",
            "params": [
                {
                    "name": "codecs",
                    "description": "",
                    "type": "DOMString"
                },
                {
                    "name": "bitrate",
                    "description": "",
                    "type": "Long"
                },
                {
                    "name": "height",
                    "description": "",
                    "type": "Long"
                },
                {
                    "name": "width",
                    "description": "",
                    "type": "Long"
                },
                {
                    "name": "duration",
                    "description": "",
                    "type": "Float"
                }
            ],
            "class": "PKObject"
        },
        {
            "file": "demo/merges/android/cordova.js",
            "line": 3492,
            "description": "Information about the state of the file or directory\n\n{Date} modificationTime (readonly)",
            "class": "PKObject"
        },
        {
            "file": "demo/merges/android/cordova.js",
            "line": 3526,
            "description": "Position error object",
            "is_constructor": 1,
            "params": [
                {
                    "name": "code",
                    "description": ""
                },
                {
                    "name": "message",
                    "description": ""
                }
            ],
            "class": "PKObject"
        },
        {
            "file": "demo/merges/android/cordova.js",
            "line": 3601,
            "description": "This class provides access to device accelerometer data.",
            "is_constructor": 1,
            "class": "PKObject"
        },
        {
            "file": "demo/merges/android/cordova.js",
            "line": 3662,
            "description": "Asynchronously acquires the current acceleration.",
            "params": [
                {
                    "name": "successCallback",
                    "description": "The function to call when the acceleration data is available",
                    "type": "Function"
                },
                {
                    "name": "errorCallback",
                    "description": "The function to call when there is an error getting the acceleration data. (OPTIONAL)",
                    "type": "Function"
                },
                {
                    "name": "options",
                    "description": "The options for getting the accelerometer data such as timeout. (OPTIONAL)",
                    "type": "AccelerationOptions"
                }
            ],
            "class": "PKObject"
        },
        {
            "file": "demo/merges/android/cordova.js",
            "line": 3690,
            "description": "Asynchronously acquires the acceleration repeatedly at a given interval.",
            "params": [
                {
                    "name": "successCallback",
                    "description": "The function to call each time the acceleration data is available",
                    "type": "Function"
                },
                {
                    "name": "errorCallback",
                    "description": "The function to call when there is an error getting the acceleration data. (OPTIONAL)",
                    "type": "Function"
                },
                {
                    "name": "options",
                    "description": "The options for getting the accelerometer data such as timeout. (OPTIONAL)",
                    "type": "AccelerationOptions"
                }
            ],
            "return": {
                "description": "String                       The watch id that must be passed to #clearWatch to stop watching."
            },
            "class": "PKObject"
        },
        {
            "file": "demo/merges/android/cordova.js",
            "line": 3734,
            "description": "Clears the specified accelerometer watch.",
            "params": [
                {
                    "name": "id",
                    "description": "The id of the watch returned from #watchAcceleration.",
                    "type": "String"
                }
            ],
            "class": "PKObject"
        },
        {
            "file": "demo/merges/android/cordova.js",
            "line": 3770,
            "description": "Clear the resource cache.",
            "class": "PKObject"
        },
        {
            "file": "demo/merges/android/cordova.js",
            "line": 3777,
            "description": "Load the url into the webview or into new browser instance.",
            "params": [
                {
                    "name": "url",
                    "description": "The URL to load"
                },
                {
                    "name": "props",
                    "description": "Properties that can be passed in to the activity:\n     wait: int                           => wait msec before loading URL\n     loadingDialog: \"Title,Message\"      => display a native loading dialog\n     loadUrlTimeoutValue: int            => time in msec to wait before triggering a timeout error\n     clearHistory: boolean              => clear webview history (default=false)\n     openExternal: boolean              => open in a new browser (default=false)\n\nExample:\n     navigator.app.loadUrl(\"http://server/myapp/index.html\", );",
                    "type": "Wait:2000, loadingDialog:\"Wait,Loading App\", loadUrlTimeoutValue: 60000"
                }
            ],
            "class": "PKObject"
        },
        {
            "file": "demo/merges/android/cordova.js",
            "line": 3795,
            "description": "Cancel loadUrl that is waiting to be loaded.",
            "class": "PKObject"
        },
        {
            "file": "demo/merges/android/cordova.js",
            "line": 3802,
            "description": "Clear web history in this web view.\nInstead of BACK button loading the previous web page, it will exit the app.",
            "class": "PKObject"
        },
        {
            "file": "demo/merges/android/cordova.js",
            "line": 3810,
            "description": "Go to previous page displayed.\nThis is the same as pressing the backbutton on Android device.",
            "class": "PKObject"
        },
        {
            "file": "demo/merges/android/cordova.js",
            "line": 3818,
            "description": "Override the default behavior of the Android back button.\nIf overridden, when the back button is pressed, the \"backKeyDown\" JavaScript event will be fired.\n\nNote: The user should not have to call this method.  Instead, when the user\n      registers for the \"backbutton\" event, this is automatically done.",
            "params": [
                {
                    "name": "override",
                    "description": "T=override, F=cancel override"
                }
            ],
            "class": "PKObject"
        },
        {
            "file": "demo/merges/android/cordova.js",
            "line": 3831,
            "description": "Exit and terminate the application.",
            "class": "PKObject"
        },
        {
            "file": "demo/merges/android/cordova.js",
            "line": 3910,
            "description": "Provides Android enhanced notification API.",
            "class": "PKObject"
        },
        {
            "file": "demo/merges/android/cordova.js",
            "line": 3925,
            "description": "Close an activity dialog",
            "class": "PKObject"
        },
        {
            "file": "demo/merges/android/cordova.js",
            "line": 3932,
            "description": "Display a progress dialog with progress bar that goes from 0 to 100.",
            "params": [
                {
                    "name": "!~YUIDOC_LINE~!",
                    "description": "title Title of the progress dialog.",
                    "type": "String"
                },
                {
                    "name": "!~YUIDOC_LINE~!",
                    "description": "message Message to display in the dialog.",
                    "type": "String"
                }
            ],
            "class": "PKObject"
        },
        {
            "file": "demo/merges/android/cordova.js",
            "line": 3944,
            "description": "Close the progress dialog.",
            "class": "PKObject"
        },
        {
            "file": "demo/merges/android/cordova.js",
            "line": 3951,
            "description": "Set the progress dialog value.",
            "params": [
                {
                    "name": "!~YUIDOC_LINE~!",
                    "description": "value 0-100",
                    "type": "Number"
                }
            ],
            "class": "PKObject"
        },
        {
            "file": "demo/merges/android/cordova.js",
            "line": 3990,
            "description": "SQL result set object\nPRIVATE METHOD",
            "is_constructor": 1,
            "class": "PKObject"
        },
        {
            "file": "demo/merges/android/cordova.js",
            "line": 4000,
            "description": "Get item from SQL result set",
            "params": [
                {
                    "name": "row",
                    "description": "The row number to return"
                }
            ],
            "return": {
                "description": "The row object"
            },
            "class": "PKObject"
        },
        {
            "file": "demo/merges/android/cordova.js",
            "line": 4010,
            "description": "SQL result set that is returned to user.\nPRIVATE METHOD",
            "is_constructor": 1,
            "class": "PKObject"
        },
        {
            "file": "demo/merges/android/cordova.js",
            "line": 4019,
            "description": "Callback from native code when query is complete.\nPRIVATE METHOD",
            "params": [
                {
                    "name": "id",
                    "description": "Query id"
                }
            ],
            "class": "PKObject"
        },
        {
            "file": "demo/merges/android/cordova.js",
            "line": 4059,
            "description": "Callback from native code when query fails\nPRIVATE METHOD",
            "params": [
                {
                    "name": "reason",
                    "description": "Error message"
                },
                {
                    "name": "id",
                    "description": "Query id"
                }
            ],
            "class": "PKObject"
        },
        {
            "file": "demo/merges/android/cordova.js",
            "line": 4098,
            "description": "SQL query object\nPRIVATE METHOD",
            "is_constructor": 1,
            "params": [
                {
                    "name": "tx",
                    "description": "The transaction object that this query belongs to"
                }
            ],
            "class": "PKObject"
        },
        {
            "file": "demo/merges/android/cordova.js",
            "line": 4128,
            "description": "Transaction object\nPRIVATE METHOD",
            "is_constructor": 1,
            "class": "PKObject"
        },
        {
            "file": "demo/merges/android/cordova.js",
            "line": 4146,
            "description": "Mark query in transaction as complete.\nIf all queries are complete, call the user's transaction success callback.",
            "params": [
                {
                    "name": "id",
                    "description": "Query id"
                }
            ],
            "class": "PKObject"
        },
        {
            "file": "demo/merges/android/cordova.js",
            "line": 4174,
            "description": "Mark query in transaction as failed.",
            "params": [
                {
                    "name": "id",
                    "description": "Query id"
                },
                {
                    "name": "reason",
                    "description": "Error message"
                }
            ],
            "class": "PKObject"
        },
        {
            "file": "demo/merges/android/cordova.js",
            "line": 4197,
            "description": "Execute SQL statement",
            "params": [
                {
                    "name": "sql",
                    "description": "SQL statement to execute"
                },
                {
                    "name": "params",
                    "description": "Statement parameters"
                },
                {
                    "name": "successCallback",
                    "description": "Success callback"
                },
                {
                    "name": "errorCallback",
                    "description": "Error callback"
                }
            ],
            "class": "PKObject"
        },
        {
            "file": "demo/merges/android/cordova.js",
            "line": 4227,
            "description": "Start a transaction.\nDoes not support rollback in event of failure.",
            "params": [
                {
                    "name": "process",
                    "description": "The transaction function",
                    "type": "Function"
                },
                {
                    "name": "successCallback",
                    "description": "",
                    "type": "Function"
                },
                {
                    "name": "errorCallback",
                    "description": "",
                    "type": "Function"
                }
            ],
            "class": "PKObject"
        },
        {
            "file": "demo/merges/android/cordova.js",
            "line": 4253,
            "description": "Open database",
            "params": [
                {
                    "name": "name",
                    "description": "Database name"
                },
                {
                    "name": "version",
                    "description": "Database version"
                },
                {
                    "name": "display_name",
                    "description": "Database display name"
                },
                {
                    "name": "size",
                    "description": "Database size in bytes"
                }
            ],
            "return": {
                "description": "Database object"
            },
            "class": "PKObject"
        },
        {
            "file": "demo/merges/android/cordova.js",
            "line": 4324,
            "description": "This class contains information about the current battery status.",
            "is_constructor": 1,
            "class": "PKObject"
        },
        {
            "file": "demo/merges/android/cordova.js",
            "line": 4350,
            "description": "Event handlers for when callbacks get registered for the battery.\nKeep track of how many handlers we have so we can start and stop the native battery listener\nappropriately (and hopefully save on battery life!).",
            "class": "PKObject"
        },
        {
            "file": "demo/merges/android/cordova.js",
            "line": 4364,
            "description": "Callback for battery status",
            "params": [
                {
                    "name": "info",
                    "description": "keys: level, isPlugged",
                    "type": "Object"
                }
            ],
            "class": "PKObject"
        },
        {
            "file": "demo/merges/android/cordova.js",
            "line": 4392,
            "description": "Error callback for battery start",
            "class": "PKObject"
        },
        {
            "file": "demo/merges/android/cordova.js",
            "line": 4433,
            "description": "Launches a capture of different types.",
            "params": [
                {
                    "name": "(DOMString}",
                    "description": "type"
                },
                {
                    "name": "successCB",
                    "description": "",
                    "type": "Function"
                },
                {
                    "name": "errorCB",
                    "description": "",
                    "type": "Function"
                },
                {
                    "name": "options",
                    "description": "",
                    "type": "CaptureVideoOptions"
                }
            ],
            "class": "PKObject"
        },
        {
            "file": "demo/merges/android/cordova.js",
            "line": 4458,
            "description": "The Capture interface exposes an interface to the camera and microphone of the hosting device.",
            "class": "PKObject"
        },
        {
            "file": "demo/merges/android/cordova.js",
            "line": 4467,
            "description": "Launch audio recorder application for recording audio clip(s).",
            "params": [
                {
                    "name": "successCB",
                    "description": "",
                    "type": "Function"
                },
                {
                    "name": "errorCB",
                    "description": "",
                    "type": "Function"
                },
                {
                    "name": "options",
                    "description": "",
                    "type": "CaptureAudioOptions"
                }
            ],
            "class": "PKObject"
        },
        {
            "file": "demo/merges/android/cordova.js",
            "line": 4478,
            "description": "Launch camera application for taking image(s).",
            "params": [
                {
                    "name": "successCB",
                    "description": "",
                    "type": "Function"
                },
                {
                    "name": "errorCB",
                    "description": "",
                    "type": "Function"
                },
                {
                    "name": "options",
                    "description": "",
                    "type": "CaptureImageOptions"
                }
            ],
            "class": "PKObject"
        },
        {
            "file": "demo/merges/android/cordova.js",
            "line": 4489,
            "description": "Launch device camera application for recording video(s).",
            "params": [
                {
                    "name": "successCB",
                    "description": "",
                    "type": "Function"
                },
                {
                    "name": "errorCB",
                    "description": "",
                    "type": "Function"
                },
                {
                    "name": "options",
                    "description": "",
                    "type": "CaptureVideoOptions"
                }
            ],
            "class": "PKObject"
        },
        {
            "file": "demo/merges/android/cordova.js",
            "line": 4531,
            "description": "Asynchronously acquires the current heading.",
            "params": [
                {
                    "name": "successCallback",
                    "description": "The function to call when the heading\ndata is available",
                    "type": "Function"
                },
                {
                    "name": "errorCallback",
                    "description": "The function to call when there is an error\ngetting the heading data.",
                    "type": "Function"
                },
                {
                    "name": "options",
                    "description": "The options for getting the heading data (not used).",
                    "type": "CompassOptions"
                }
            ],
            "class": "PKObject"
        },
        {
            "file": "demo/merges/android/cordova.js",
            "line": 4555,
            "description": "Asynchronously acquires the heading repeatedly at a given interval.",
            "params": [
                {
                    "name": "successCallback",
                    "description": "The function to call each time the heading\ndata is available",
                    "type": "Function"
                },
                {
                    "name": "errorCallback",
                    "description": "The function to call when there is an error\ngetting the heading data.",
                    "type": "Function"
                },
                {
                    "name": "options",
                    "description": "The options for getting the heading data\nsuch as timeout and the frequency of the watch. For iOS, filter parameter\nspecifies to watch via a distance filter rather than time.",
                    "type": "HeadingOptions"
                }
            ],
            "class": "PKObject"
        },
        {
            "file": "demo/merges/android/cordova.js",
            "line": 4586,
            "description": "Clears the specified heading watch.",
            "params": [
                {
                    "name": "watchId",
                    "description": "The ID of the watch returned from #watchHeading.",
                    "type": "String"
                }
            ],
            "class": "PKObject"
        },
        {
            "file": "demo/merges/android/cordova.js",
            "line": 4801,
            "description": "Represents a group of Contacts.",
            "is_constructor": 1,
            "class": "PKObject"
        },
        {
            "file": "demo/merges/android/cordova.js",
            "line": 4806,
            "description": "Returns an array of Contacts matching the search criteria.",
            "params": [
                {
                    "name": "fields",
                    "description": "that should be searched"
                },
                {
                    "name": "successCB",
                    "description": "success callback"
                },
                {
                    "name": "errorCB",
                    "description": "error callback"
                },
                {
                    "name": "options",
                    "description": "that can be applied to contact searching",
                    "type": "ContactFindOptions"
                }
            ],
            "return": {
                "description": "array of Contacts matching search criteria"
            },
            "class": "PKObject"
        },
        {
            "file": "demo/merges/android/cordova.js",
            "line": 4830,
            "description": "This function creates a new contact, but it does not persist the contact\nto device storage. To persist the contact to device storage, invoke\ncontact.save().",
            "params": [
                {
                    "name": "properties",
                    "description": "an object whose properties will be examined to create a new Contact"
                }
            ],
            "return": {
                "description": "new Contact object"
            },
            "class": "PKObject"
        },
        {
            "file": "demo/merges/android/cordova.js",
            "line": 4881,
            "description": "This represents the mobile device, and provides properties for inspecting the model, version, UUID of the\nphone, etc.",
            "is_constructor": 1,
            "class": "PKObject"
        },
        {
            "file": "demo/merges/android/cordova.js",
            "line": 4914,
            "description": "Get device info",
            "params": [
                {
                    "name": "successCallback",
                    "description": "The function to call when the heading data is available",
                    "type": "Function"
                },
                {
                    "name": "errorCallback",
                    "description": "The function to call when there is an error getting the heading data. (OPTIONAL)",
                    "type": "Function"
                }
            ],
            "class": "PKObject"
        },
        {
            "file": "demo/merges/android/cordova.js",
            "line": 4945,
            "description": "Sends the given message through exec() to the Echo plugin, which sends it back to the successCallback.",
            "params": [
                {
                    "name": "successCallback",
                    "description": "invoked with a FileSystem object"
                },
                {
                    "name": "errorCallback",
                    "description": "invoked if error occurs retrieving file system"
                },
                {
                    "name": "message",
                    "description": "The string to be echoed."
                },
                {
                    "name": "forceAsync",
                    "description": "Whether to force an async return value (for testing native->js bridge)."
                }
            ],
            "class": "PKObject"
        },
        {
            "file": "demo/merges/android/cordova.js",
            "line": 5063,
            "description": "Asynchronously acquires the current position.",
            "params": [
                {
                    "name": "successCallback",
                    "description": "The function to call when the position data is available",
                    "type": "Function"
                },
                {
                    "name": "errorCallback",
                    "description": "The function to call when there is an error getting the heading position. (OPTIONAL)",
                    "type": "Function"
                },
                {
                    "name": "options",
                    "description": "The options for getting the position data. (OPTIONAL)",
                    "type": "PositionOptions"
                }
            ],
            "class": "PKObject"
        },
        {
            "file": "demo/merges/android/cordova.js",
            "line": 5137,
            "description": "Asynchronously watches the geolocation for changes to geolocation.  When a change occurs,\nthe successCallback is called with the new location.",
            "params": [
                {
                    "name": "successCallback",
                    "description": "The function to call each time the location data is available",
                    "type": "Function"
                },
                {
                    "name": "errorCallback",
                    "description": "The function to call when there is an error getting the location data. (OPTIONAL)",
                    "type": "Function"
                },
                {
                    "name": "options",
                    "description": "The options for getting the location data such as frequency. (OPTIONAL)",
                    "type": "PositionOptions"
                }
            ],
            "return": {
                "description": "String                       The watch id that must be passed to #clearWatch to stop watching."
            },
            "class": "PKObject"
        },
        {
            "file": "demo/merges/android/cordova.js",
            "line": 5188,
            "description": "Clears the specified heading watch.",
            "params": [
                {
                    "name": "id",
                    "description": "The ID of the watch returned from #watchPosition",
                    "type": "String"
                }
            ],
            "class": "PKObject"
        },
        {
            "file": "demo/merges/android/cordova.js",
            "line": 5228,
            "description": "Returns the string identifier for the client's current language.\nIt returns the language identifier string to the successCB callback with a\nproperties object as a parameter. If there is an error getting the language,\nthen the errorCB callback is invoked.",
            "params": [
                {
                    "name": "successCB",
                    "description": "",
                    "type": "Function"
                },
                {
                    "name": "errorCB",
                    "description": "",
                    "type": "Function"
                }
            ],
            "return": {
                "description": "Object.value : The language identifier",
                "type": "String"
            },
            "error": "GlobalizationError.UNKNOWN_ERROR\n\nExample\n   globalization.getPreferredLanguage(function (language) {alert('language:' + language.value + '\\n');},\n                               function () {});",
            "class": "PKObject"
        },
        {
            "file": "demo/merges/android/cordova.js",
            "line": 5250,
            "description": "Returns the string identifier for the client's current locale setting.\nIt returns the locale identifier string to the successCB callback with a\nproperties object as a parameter. If there is an error getting the locale,\nthen the errorCB callback is invoked.",
            "params": [
                {
                    "name": "successCB",
                    "description": "",
                    "type": "Function"
                },
                {
                    "name": "errorCB",
                    "description": "",
                    "type": "Function"
                }
            ],
            "return": {
                "description": "Object.value : The locale identifier",
                "type": "String"
            },
            "error": "GlobalizationError.UNKNOWN_ERROR\n\nExample\n   globalization.getLocaleName(function (locale) {alert('locale:' + locale.value + '\\n');},\n                               function () {});",
            "class": "PKObject"
        },
        {
            "file": "demo/merges/android/cordova.js",
            "line": 5273,
            "description": "Returns a date formatted as a string according to the client's user preferences and\ncalendar using the time zone of the client. It returns the formatted date string to the\nsuccessCB callback with a properties object as a parameter. If there is an error\nformatting the date, then the errorCB callback is invoked.\n\nThe defaults are: formatLenght=\"short\" and selector=\"date and time\"",
            "params": [
                {
                    "name": "date",
                    "description": "",
                    "type": "Date"
                },
                {
                    "name": "successCB",
                    "description": "",
                    "type": "Function"
                },
                {
                    "name": "errorCB",
                    "description": "",
                    "type": "Function"
                },
                {
                    "name": "options",
                    "description": "{optional}\n           formatLength {String}: 'short', 'medium', 'long', or 'full'\n           selector {String}: 'date', 'time', or 'date and time'",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "Object.value : The localized date string",
                "type": "String"
            },
            "error": "GlobalizationError.FORMATTING_ERROR\n\nExample\n   globalization.dateToString(new Date(),\n               function (date) {alert('date:' + date.value + '\\n');},\n               function (errorCode) {alert(errorCode);},\n               {formatLength:'short'});",
            "class": "PKObject"
        },
        {
            "file": "demo/merges/android/cordova.js",
            "line": 5305,
            "description": "Parses a date formatted as a string according to the client's user\npreferences and calendar using the time zone of the client and returns\nthe corresponding date object. It returns the date to the successCB\ncallback with a properties object as a parameter. If there is an error\nparsing the date string, then the errorCB callback is invoked.\n\nThe defaults are: formatLength=\"short\" and selector=\"date and time\"",
            "params": [
                {
                    "name": "dateString",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "successCB",
                    "description": "",
                    "type": "Function"
                },
                {
                    "name": "errorCB",
                    "description": "",
                    "type": "Function"
                },
                {
                    "name": "options",
                    "description": "{optional}\n           formatLength {String}: 'short', 'medium', 'long', or 'full'\n           selector {String}: 'date', 'time', or 'date and time'",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "Object.year : The four digit year\n           Object.month {Number}: The month from (0 - 11)\n           Object.day {Number}: The day from (1 - 31)\n           Object.hour {Number}: The hour from (0 - 23)\n           Object.minute {Number}: The minute from (0 - 59)\n           Object.second {Number}: The second from (0 - 59)\n           Object.millisecond {Number}: The milliseconds (from 0 - 999),\n                                       not available on all platforms",
                "type": "Number"
            },
            "error": "GlobalizationError.PARSING_ERROR\n\nExample\n   globalization.stringToDate('4/11/2011',\n               function (date) { alert('Month:' + date.month + '\\n' +\n                   'Day:' + date.day + '\\n' +\n                   'Year:' + date.year + '\\n');},\n               function (errorCode) {alert(errorCode);},\n               {selector:'date'});",
            "class": "PKObject"
        },
        {
            "file": "demo/merges/android/cordova.js",
            "line": 5346,
            "description": "Returns a pattern string for formatting and parsing dates according to the client's\nuser preferences. It returns the pattern to the successCB callback with a\nproperties object as a parameter. If there is an error obtaining the pattern,\nthen the errorCB callback is invoked.\n\nThe defaults are: formatLength=\"short\" and selector=\"date and time\"",
            "params": [
                {
                    "name": "successCB",
                    "description": "",
                    "type": "Function"
                },
                {
                    "name": "errorCB",
                    "description": "",
                    "type": "Function"
                },
                {
                    "name": "options",
                    "description": "{optional}\n           formatLength {String}: 'short', 'medium', 'long', or 'full'\n           selector {String}: 'date', 'time', or 'date and time'",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "Object.pattern : The date and time pattern for formatting and parsing dates.\n                                   The patterns follow Unicode Technical Standard #35\n                                   http://unicode.org/reports/tr35/tr35-4.html\n           Object.timezone {String}: The abbreviated name of the time zone on the client\n           Object.utc_offset {Number}: The current difference in seconds between the client's\n                                       time zone and coordinated universal time.\n           Object.dst_offset {Number}: The current daylight saving time offset in seconds\n                                       between the client's non-daylight saving's time zone\n                                       and the client's daylight saving's time zone.",
                "type": "String"
            },
            "error": "GlobalizationError.PATTERN_ERROR\n\nExample\n   globalization.getDatePattern(\n               function (date) {alert('pattern:' + date.pattern + '\\n');},\n               function () {},\n               {formatLength:'short'});",
            "class": "PKObject"
        },
        {
            "file": "demo/merges/android/cordova.js",
            "line": 5384,
            "description": "Returns an array of either the names of the months or days of the week\naccording to the client's user preferences and calendar. It returns the array of names to the\nsuccessCB callback with a properties object as a parameter. If there is an error obtaining the\nnames, then the errorCB callback is invoked.\n\nThe defaults are: type=\"wide\" and item=\"months\"",
            "params": [
                {
                    "name": "successCB",
                    "description": "",
                    "type": "Function"
                },
                {
                    "name": "errorCB",
                    "description": "",
                    "type": "Function"
                },
                {
                    "name": "options",
                    "description": "{optional}\n           type {String}: 'narrow' or 'wide'\n           item {String}: 'months', or 'days'",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "Object.value }: The array of names starting from either\n                                       the first month in the year or the\n                                       first day of the week.",
                "type": "ArrayString"
            },
            "error": "GlobalizationError.UNKNOWN_ERROR\n\nExample\n   globalization.getDateNames(function (names) {\n       for(var i = 0; i < names.value.length; i++) {\n           alert('Month:' + names.value[i] + '\\n');}},\n       function () {});",
            "class": "PKObject"
        },
        {
            "file": "demo/merges/android/cordova.js",
            "line": 5414,
            "description": "Returns whether daylight savings time is in effect for a given date using the client's\ntime zone and calendar. It returns whether or not daylight savings time is in effect\nto the successCB callback with a properties object as a parameter. If there is an error\nreading the date, then the errorCB callback is invoked.",
            "params": [
                {
                    "name": "date",
                    "description": "",
                    "type": "Date"
                },
                {
                    "name": "successCB",
                    "description": "",
                    "type": "Function"
                },
                {
                    "name": "errorCB",
                    "description": "",
                    "type": "Function"
                }
            ],
            "return": {
                "description": "Object.dst : The value \"true\" indicates that daylight savings time is\n                               in effect for the given date and \"false\" indicate that it is not.",
                "type": "Boolean"
            },
            "error": "GlobalizationError.UNKNOWN_ERROR\n\nExample\n   globalization.isDayLightSavingsTime(new Date(),\n               function (date) {alert('dst:' + date.dst + '\\n');}\n               function () {});",
            "class": "PKObject"
        },
        {
            "file": "demo/merges/android/cordova.js",
            "line": 5440,
            "description": "Returns the first day of the week according to the client's user preferences and calendar.\nThe days of the week are numbered starting from 1 where 1 is considered to be Sunday.\nIt returns the day to the successCB callback with a properties object as a parameter.\nIf there is an error obtaining the pattern, then the errorCB callback is invoked.",
            "params": [
                {
                    "name": "successCB",
                    "description": "",
                    "type": "Function"
                },
                {
                    "name": "errorCB",
                    "description": "",
                    "type": "Function"
                }
            ],
            "return": {
                "description": "Object.value : The number of the first day of the week.",
                "type": "Number"
            },
            "error": "GlobalizationError.UNKNOWN_ERROR\n\nExample\n   globalization.getFirstDayOfWeek(function (day)\n               { alert('Day:' + day.value + '\\n');},\n               function () {});",
            "class": "PKObject"
        },
        {
            "file": "demo/merges/android/cordova.js",
            "line": 5464,
            "description": "Returns a number formatted as a string according to the client's user preferences.\nIt returns the formatted number string to the successCB callback with a properties object as a\nparameter. If there is an error formatting the number, then the errorCB callback is invoked.\n\nThe defaults are: type=\"decimal\"",
            "params": [
                {
                    "name": "number",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "successCB",
                    "description": "",
                    "type": "Function"
                },
                {
                    "name": "errorCB",
                    "description": "",
                    "type": "Function"
                },
                {
                    "name": "options",
                    "description": "{optional}\n           type {String}: 'decimal', \"percent\", or 'currency'",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "Object.value : The formatted number string.",
                "type": "String"
            },
            "error": "GlobalizationError.FORMATTING_ERROR\n\nExample\n   globalization.numberToString(3.25,\n               function (number) {alert('number:' + number.value + '\\n');},\n               function () {},\n               {type:'decimal'});",
            "class": "PKObject"
        },
        {
            "file": "demo/merges/android/cordova.js",
            "line": 5492,
            "description": "Parses a number formatted as a string according to the client's user preferences and\nreturns the corresponding number. It returns the number to the successCB callback with a\nproperties object as a parameter. If there is an error parsing the number string, then\nthe errorCB callback is invoked.\n\nThe defaults are: type=\"decimal\"",
            "params": [
                {
                    "name": "numberString",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "successCB",
                    "description": "",
                    "type": "Function"
                },
                {
                    "name": "errorCB",
                    "description": "",
                    "type": "Function"
                },
                {
                    "name": "options",
                    "description": "{optional}\n           type {String}: 'decimal', \"percent\", or 'currency'",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "Object.value : The parsed number.",
                "type": "Number"
            },
            "error": "GlobalizationError.PARSING_ERROR\n\nExample\n   globalization.stringToNumber('1234.56',\n               function (number) {alert('Number:' + number.value + '\\n');},\n               function () { alert('Error parsing number');});",
            "class": "PKObject"
        },
        {
            "file": "demo/merges/android/cordova.js",
            "line": 5520,
            "description": "Returns a pattern string for formatting and parsing numbers according to the client's user\npreferences. It returns the pattern to the successCB callback with a properties object as a\nparameter. If there is an error obtaining the pattern, then the errorCB callback is invoked.\n\nThe defaults are: type=\"decimal\"",
            "params": [
                {
                    "name": "successCB",
                    "description": "",
                    "type": "Function"
                },
                {
                    "name": "errorCB",
                    "description": "",
                    "type": "Function"
                },
                {
                    "name": "options",
                    "description": "{optional}\n           type {String}: 'decimal', \"percent\", or 'currency'",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "Object.pattern : The number pattern for formatting and parsing numbers.\n                                   The patterns follow Unicode Technical Standard #35.\n                                   http://unicode.org/reports/tr35/tr35-4.html\n           Object.symbol {String}: The symbol to be used when formatting and parsing\n                                   e.g., percent or currency symbol.\n           Object.fraction {Number}: The number of fractional digits to use when parsing and\n                                   formatting numbers.\n           Object.rounding {Number}: The rounding increment to use when parsing and formatting.\n           Object.positive {String}: The symbol to use for positive numbers when parsing and formatting.\n           Object.negative: {String}: The symbol to use for negative numbers when parsing and formatting.\n           Object.decimal: {String}: The decimal symbol to use for parsing and formatting.\n           Object.grouping: {String}: The grouping symbol to use for parsing and formatting.",
                "type": "String"
            },
            "error": "GlobalizationError.PATTERN_ERROR\n\nExample\n   globalization.getNumberPattern(\n               function (pattern) {alert('Pattern:' + pattern.pattern + '\\n');},\n               function () {});",
            "class": "PKObject"
        },
        {
            "file": "demo/merges/android/cordova.js",
            "line": 5557,
            "description": "Returns a pattern string for formatting and parsing currency values according to the client's\nuser preferences and ISO 4217 currency code. It returns the pattern to the successCB callback with a\nproperties object as a parameter. If there is an error obtaining the pattern, then the errorCB\ncallback is invoked.",
            "params": [
                {
                    "name": "currencyCode",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "successCB",
                    "description": "",
                    "type": "Function"
                },
                {
                    "name": "errorCB",
                    "description": "",
                    "type": "Function"
                }
            ],
            "return": {
                "description": "Object.pattern : The currency pattern for formatting and parsing currency values.\n                                   The patterns follow Unicode Technical Standard #35\n                                   http://unicode.org/reports/tr35/tr35-4.html\n           Object.code {String}: The ISO 4217 currency code for the pattern.\n           Object.fraction {Number}: The number of fractional digits to use when parsing and\n                                   formatting currency.\n           Object.rounding {Number}: The rounding increment to use when parsing and formatting.\n           Object.decimal: {String}: The decimal symbol to use for parsing and formatting.\n           Object.grouping: {String}: The grouping symbol to use for parsing and formatting.",
                "type": "String"
            },
            "error": "GlobalizationError.FORMATTING_ERROR\n\nExample\n   globalization.getCurrencyPattern('EUR',\n               function (currency) {alert('Pattern:' + currency.pattern + '\\n');}\n               function () {});",
            "class": "PKObject"
        },
        {
            "file": "demo/merges/android/cordova.js",
            "line": 5650,
            "description": "Logging levels",
            "class": "PKObject"
        },
        {
            "file": "demo/merges/android/cordova.js",
            "line": 5676,
            "description": "Getter/Setter for the logging level\n\nReturns the current logging level.\n\nWhen a value is passed, sets the logging level to that value.\nThe values should be one of the following constants:\n   logger.LOG\n   logger.ERROR\n   logger.WARN\n   logger.INFO\n   logger.DEBUG\n\nThe value used determines which messages get printed.  The logging\nvalues above are in order, and only messages logged at the logging\nlevel or above will actually be displayed to the user.  E.g., the\ndefault level is WARN, so only messages logged with LOG, ERROR, or\nWARN will be displayed; INFO and DEBUG messages will be ignored.",
            "class": "PKObject"
        },
        {
            "file": "demo/merges/android/cordova.js",
            "line": 5706,
            "description": "Getter/Setter for the useConsole functionality\n\nWhen useConsole is true, the logger will log via the\nbrowser 'console' object.  Otherwise, it will use the\nnative Logger plugin.",
            "class": "PKObject"
        },
        {
            "file": "demo/merges/android/cordova.js",
            "line": 5735,
            "description": "Logs a message at the LOG level.\n\nParameters passed after message are used applied to\nthe message with utils.format()",
            "class": "PKObject"
        },
        {
            "file": "demo/merges/android/cordova.js",
            "line": 5743,
            "description": "Logs a message at the ERROR level.\n\nParameters passed after message are used applied to\nthe message with utils.format()",
            "class": "PKObject"
        },
        {
            "file": "demo/merges/android/cordova.js",
            "line": 5751,
            "description": "Logs a message at the WARN level.\n\nParameters passed after message are used applied to\nthe message with utils.format()",
            "class": "PKObject"
        },
        {
            "file": "demo/merges/android/cordova.js",
            "line": 5759,
            "description": "Logs a message at the INFO level.\n\nParameters passed after message are used applied to\nthe message with utils.format()",
            "class": "PKObject"
        },
        {
            "file": "demo/merges/android/cordova.js",
            "line": 5767,
            "description": "Logs a message at the DEBUG level.\n\nParameters passed after message are used applied to\nthe message with utils.format()",
            "class": "PKObject"
        },
        {
            "file": "demo/merges/android/cordova.js",
            "line": 5781,
            "description": "Logs a message at the specified level.\n\nParameters passed after message are used applied to\nthe message with utils.format()",
            "class": "PKObject"
        },
        {
            "file": "demo/merges/android/cordova.js",
            "line": 5886,
            "description": "Get connection info",
            "params": [
                {
                    "name": "successCallback",
                    "description": "The function to call when the Connection data is available",
                    "type": "Function"
                },
                {
                    "name": "errorCallback",
                    "description": "The function to call when there is an error getting the Connection data. (OPTIONAL)",
                    "type": "Function"
                }
            ],
            "class": "PKObject"
        },
        {
            "file": "demo/merges/android/cordova.js",
            "line": 5954,
            "description": "Provides access to notifications on the device.",
            "class": "PKObject"
        },
        {
            "file": "demo/merges/android/cordova.js",
            "line": 5960,
            "description": "Open a native alert dialog, with a customizable title and button text.",
            "params": [
                {
                    "name": "message",
                    "description": "Message to print in the body of the alert",
                    "type": "String"
                },
                {
                    "name": "completeCallback",
                    "description": "The callback that is called when user clicks on a button.",
                    "type": "Function"
                },
                {
                    "name": "title",
                    "description": "Title of the alert dialog (default: Alert)",
                    "type": "String"
                },
                {
                    "name": "buttonLabel",
                    "description": "Label of the close button (default: OK)",
                    "type": "String"
                }
            ],
            "class": "PKObject"
        },
        {
            "file": "demo/merges/android/cordova.js",
            "line": 5974,
            "description": "Open a native confirm dialog, with a customizable title and button text.\nThe result that the user selects is returned to the result callback.",
            "params": [
                {
                    "name": "message",
                    "description": "Message to print in the body of the alert",
                    "type": "String"
                },
                {
                    "name": "resultCallback",
                    "description": "The callback that is called when user clicks on a button.",
                    "type": "Function"
                },
                {
                    "name": "title",
                    "description": "Title of the alert dialog (default: Confirm)",
                    "type": "String"
                },
                {
                    "name": "buttonLabels",
                    "description": "Comma separated list of the labels of the buttons (default: 'OK,Cancel')",
                    "type": "String"
                }
            ],
            "class": "PKObject"
        },
        {
            "file": "demo/merges/android/cordova.js",
            "line": 5989,
            "description": "Causes the device to vibrate.",
            "params": [
                {
                    "name": "mills",
                    "description": "The number of milliseconds to vibrate for.",
                    "type": "Integer"
                }
            ],
            "class": "PKObject"
        },
        {
            "file": "demo/merges/android/cordova.js",
            "line": 5998,
            "description": "Causes the device to beep.\nOn Android, the default notification ringtone is played \"count\" times.",
            "params": [
                {
                    "name": "count",
                    "description": "The number of beeps.",
                    "type": "Integer"
                }
            ],
            "class": "PKObject"
        },
        {
            "file": "demo/merges/android/cordova.js",
            "line": 6030,
            "description": "Request a file system in which to store application data.",
            "params": [
                {
                    "name": "type",
                    "description": "local file system type"
                },
                {
                    "name": "size",
                    "description": "indicates how much storage space, in bytes, the application expects to need"
                },
                {
                    "name": "successCallback",
                    "description": "invoked with a FileSystem object"
                },
                {
                    "name": "errorCallback",
                    "description": "invoked if error occurs retrieving file system"
                }
            ],
            "class": "PKObject"
        },
        {
            "file": "demo/merges/android/cordova.js",
            "line": 6077,
            "description": "Look up file system Entry referred to by local URI.",
            "params": [
                {
                    "name": "uri",
                    "description": "URI referring to a local file or directory",
                    "type": "DOMString"
                },
                {
                    "name": "successCallback",
                    "description": "invoked with Entry object corresponding to URI"
                },
                {
                    "name": "errorCallback",
                    "description": "invoked if error occurs retrieving file system entry"
                }
            ],
            "class": "PKObject"
        },
        {
            "file": "demo/merges/android/cordova.js",
            "line": 6163,
            "description": "Defines a property getter / setter for obj[key].",
            "class": "PKObject"
        },
        {
            "file": "demo/merges/android/cordova.js",
            "line": 6184,
            "description": "Defines a property getter for obj[key].",
            "class": "PKObject"
        },
        {
            "file": "demo/merges/android/cordova.js",
            "line": 6202,
            "description": "Returns whether the item was found in the array.",
            "class": "PKObject"
        },
        {
            "file": "demo/merges/android/cordova.js",
            "line": 6217,
            "description": "Returns an indication of whether the argument is an array or not",
            "class": "PKObject"
        },
        {
            "file": "demo/merges/android/cordova.js",
            "line": 6224,
            "description": "Returns an indication of whether the argument is a Date or not",
            "class": "PKObject"
        },
        {
            "file": "demo/merges/android/cordova.js",
            "line": 6231,
            "description": "Does a deep clone of the object.",
            "class": "PKObject"
        },
        {
            "file": "demo/merges/android/cordova.js",
            "line": 6258,
            "description": "Returns a wrapped version of the function",
            "class": "PKObject"
        },
        {
            "file": "demo/merges/android/cordova.js",
            "line": 6273,
            "description": "Create a UUID",
            "class": "PKObject"
        },
        {
            "file": "demo/merges/android/cordova.js",
            "line": 6284,
            "description": "Extends a child object from a parent object using classical inheritance\npattern.",
            "class": "PKObject"
        },
        {
            "file": "demo/merges/android/cordova.js",
            "line": 6300,
            "description": "Alerts a message in any available way: alert or console.log.",
            "class": "PKObject"
        },
        {
            "file": "demo/merges/android/cordova.js",
            "line": 6311,
            "description": "Formats a string and arguments following it ala sprintf()\n\nsee utils.vformat() for more information",
            "class": "PKObject"
        },
        {
            "file": "demo/merges/android/cordova.js",
            "line": 6321,
            "description": "Formats a string and arguments following it ala vsprintf()\n\nformat chars:\n  %j - format arg as JSON\n  %o - format arg as JSON\n  %c - format arg as ''\n  %% - replace with '%'\nany other char following % will format it's\narg via toString().\n\nfor rationale, see FireBug's Console API:\n   http://getfirebug.com/wiki/index.php/Console_API",
            "class": "PKObject"
        },
        {
            "file": "demo/merges/android/cordova.js",
            "line": 6421,
            "description": "Create all cordova objects once page has fully loaded and native side is ready.",
            "class": "PKObject"
        },
        {
            "file": "demo/merges/ios/cordova.js",
            "line": 98,
            "description": "Listen for DOMContentLoaded and notify our channel subscribers.",
            "class": "PKObject"
        },
        {
            "file": "demo/merges/ios/cordova.js",
            "line": 108,
            "description": "Intercept calls to addEventListener + removeEventListener and handle deviceready,\nresume, and pause events.",
            "class": "PKObject"
        },
        {
            "file": "demo/merges/ios/cordova.js",
            "line": 117,
            "description": "Houses custom event handlers to intercept on document + window event listeners.",
            "class": "PKObject"
        },
        {
            "file": "demo/merges/ios/cordova.js",
            "line": 183,
            "description": "Methods to add/remove your own addEventListener hijacking on document + window.",
            "class": "PKObject"
        },
        {
            "file": "demo/merges/ios/cordova.js",
            "line": 201,
            "description": "Retrieve original event handlers that were replaced by Cordova",
            "return": {
                "description": "object"
            },
            "class": "PKObject"
        },
        {
            "file": "demo/merges/ios/cordova.js",
            "line": 210,
            "description": "Method to fire event from native code\nbNoDetach is required for events which cause an exception which needs to be caught in native code",
            "class": "PKObject"
        },
        {
            "file": "demo/merges/ios/cordova.js",
            "line": 240,
            "description": "Plugin callback mechanism.",
            "class": "PKObject"
        },
        {
            "file": "demo/merges/ios/cordova.js",
            "line": 260,
            "description": "Called by native code when returning successful result from an action.",
            "class": "PKObject"
        },
        {
            "file": "demo/merges/ios/cordova.js",
            "line": 271,
            "description": "Called by native code when returning error result from an action.",
            "class": "PKObject"
        },
        {
            "file": "demo/merges/ios/cordova.js",
            "line": 284,
            "description": "Called by native code when returning the result from an action.",
            "class": "PKObject"
        },
        {
            "file": "demo/merges/ios/cordova.js",
            "line": 462,
            "description": "Merge properties from one object onto another recursively.  Properties from\nthe src object will overwrite existing target property.",
            "params": [
                {
                    "name": "target",
                    "description": "Object to merge properties into."
                },
                {
                    "name": "src",
                    "description": "Object to merge properties from."
                }
            ],
            "class": "PKObject"
        },
        {
            "file": "demo/merges/ios/cordova.js",
            "line": 507,
            "description": "Custom pub-sub \"channel\" that can have functions subscribed to it\nThis object is used to define and control firing of events for\ncordova initialization, as well as for custom events thereafter.\n\nThe order of events during page load and Cordova startup is as follows:\n\nonDOMContentLoaded*         Internal event that is received when the web page is loaded and parsed.\nonNativeReady*              Internal event that indicates the Cordova native side is ready.\nonCordovaReady*             Internal event fired when all Cordova JavaScript objects have been created.\nonCordovaInfoReady*         Internal event fired when device properties are available.\nonCordovaConnectionReady*   Internal event fired when the connection property has been set.\nonDeviceReady*              User event fired to indicate that Cordova is ready\nonResume                    User event fired to indicate a start/resume lifecycle event\nonPause                     User event fired to indicate a pause lifecycle event\nonDestroy*                  Internal event fired when app is being destroyed (User should use window.onunload event, not this one).\n\nThe events marked with an * are sticky. Once they have fired, they will stay in the fired state.\nAll listeners that subscribe after the event is fired will be executed right away.\n\nThe only Cordova events that user code should register for are:\n     deviceready           Cordova native code is initialized and Cordova APIs can be called from JavaScript\n     pause                 App has moved to background\n     resume                App has returned to foreground\n\nListeners can be registered as:\n     document.addEventListener(\"deviceready\", myDeviceReadyListener, false);\n     document.addEventListener(\"resume\", myResumeListener, false);\n     document.addEventListener(\"pause\", myPauseListener, false);\n\nThe DOM lifecycle events should be used for saving and restoring state\n     window.onload\n     window.onunload",
            "class": "PKObject"
        },
        {
            "file": "demo/merges/ios/cordova.js",
            "line": 543,
            "description": "Channel",
            "is_constructor": 1,
            "params": [
                {
                    "name": "type",
                    "description": "String the channel name"
                }
            ],
            "class": "PKObject"
        },
        {
            "file": "demo/merges/ios/cordova.js",
            "line": 563,
            "description": "Calls the provided function only after all of the channels specified\nhave been fired. All channels must be sticky channels.",
            "class": "PKObject"
        },
        {
            "file": "demo/merges/ios/cordova.js",
            "line": 588,
            "description": "cordova Channels that must fire before \"deviceready\" is fired.",
            "class": "PKObject"
        },
        {
            "file": "demo/merges/ios/cordova.js",
            "line": 594,
            "description": "Indicate that a feature needs to be initialized before it is ready to be used.\nThis holds up Cordova's \"deviceready\" event until the feature has been initialized\nand Cordova.initComplete(feature) is called.",
            "params": [
                {
                    "name": "feature",
                    "description": "The unique feature name",
                    "type": "String"
                }
            ],
            "class": "PKObject"
        },
        {
            "file": "demo/merges/ios/cordova.js",
            "line": 609,
            "description": "Indicate that initialization code has completed and the feature is ready to be used.",
            "params": [
                {
                    "name": "feature",
                    "description": "The unique feature name",
                    "type": "String"
                }
            ],
            "class": "PKObject"
        },
        {
            "file": "demo/merges/ios/cordova.js",
            "line": 626,
            "description": "Subscribes the given function to the channel. Any time that\nChannel.fire is called so too will the function.\nOptionally specify an execution context for the function\nand a guid that can be used to stop subscribing to the channel.\nReturns the guid.",
            "class": "PKObject"
        },
        {
            "file": "demo/merges/ios/cordova.js",
            "line": 662,
            "description": "Unsubscribes the function with the given guid from the channel.",
            "class": "PKObject"
        },
        {
            "file": "demo/merges/ios/cordova.js",
            "line": 680,
            "description": "Calls all functions subscribed to this channel.",
            "class": "PKObject"
        },
        {
            "file": "demo/merges/ios/cordova.js",
            "line": 780,
            "description": "Creates a gap bridge iframe used to notify the native code about queued\ncommands.",
            "access": "private",
            "tagname": "",
            "class": "PKObject"
        },
        {
            "file": "demo/merges/ios/cordova.js",
            "line": 1138,
            "description": "Gets a picture from source defined by \"options.sourceType\", and returns the\nimage as defined by the \"options.destinationType\" option.\n\nThe defaults are sourceType=CAMERA and destinationType=FILE_URI.",
            "params": [
                {
                    "name": "successCallback",
                    "description": "",
                    "type": "Function"
                },
                {
                    "name": "errorCallback",
                    "description": "",
                    "type": "Function"
                },
                {
                    "name": "options",
                    "description": "",
                    "type": "Object"
                }
            ],
            "class": "PKObject"
        },
        {
            "file": "demo/merges/ios/cordova.js",
            "line": 1219,
            "description": "A handle to an image picker popover.",
            "class": "PKObject"
        },
        {
            "file": "demo/merges/ios/cordova.js",
            "line": 1238,
            "description": "Encapsulates options for iOS Popover image picker",
            "class": "PKObject"
        },
        {
            "file": "demo/merges/ios/cordova.js",
            "line": 1258,
            "description": "Encapsulates all audio capture operation configuration options.",
            "class": "PKObject"
        },
        {
            "file": "demo/merges/ios/cordova.js",
            "line": 1277,
            "description": "The CaptureError interface encapsulates all errors in the Capture API.",
            "class": "PKObject"
        },
        {
            "file": "demo/merges/ios/cordova.js",
            "line": 1302,
            "description": "Encapsulates all image capture operation configuration options.",
            "class": "PKObject"
        },
        {
            "file": "demo/merges/ios/cordova.js",
            "line": 1319,
            "description": "Encapsulates all video capture operation configuration options.",
            "class": "PKObject"
        },
        {
            "file": "demo/merges/ios/cordova.js",
            "line": 1338,
            "description": "CompassError.\nAn error code assigned by an implementation when an error has occurred",
            "is_constructor": 1,
            "class": "PKObject"
        },
        {
            "file": "demo/merges/ios/cordova.js",
            "line": 1371,
            "description": "Encapsulates a set of parameters that the capture device supports.",
            "class": "PKObject"
        },
        {
            "file": "demo/merges/ios/cordova.js",
            "line": 1392,
            "description": "Network status",
            "class": "PKObject"
        },
        {
            "file": "demo/merges/ios/cordova.js",
            "line": 1416,
            "description": "Converts primitives into Complex Object\nCurrently only used for Date fields",
            "class": "PKObject"
        },
        {
            "file": "demo/merges/ios/cordova.js",
            "line": 1430,
            "description": "Converts Complex objects into primitives\nOnly conversion at present is for Dates.",
            "class": "PKObject"
        },
        {
            "file": "demo/merges/ios/cordova.js",
            "line": 1454,
            "description": "Contains information about a single contact.",
            "is_constructor": 1,
            "params": [
                {
                    "name": "id",
                    "description": "unique identifier",
                    "type": "DOMString"
                },
                {
                    "name": "displayName",
                    "description": "",
                    "type": "DOMString"
                },
                {
                    "name": "name",
                    "description": "",
                    "type": "ContactName"
                },
                {
                    "name": "nickname",
                    "description": "",
                    "type": "DOMString"
                },
                {
                    "name": "phoneNumbers",
                    "description": "array of phone numbers",
                    "type": "Array.<ContactField>"
                },
                {
                    "name": "emails",
                    "description": "array of email addresses",
                    "type": "Array.<ContactField>"
                },
                {
                    "name": "addresses",
                    "description": "array of addresses",
                    "type": "Array.<ContactAddress>"
                },
                {
                    "name": "ims",
                    "description": "instant messaging user ids",
                    "type": "Array.<ContactField>"
                },
                {
                    "name": "organizations",
                    "description": "",
                    "type": "Array.<ContactOrganization>"
                },
                {
                    "name": "birthday",
                    "description": "contact's birthday",
                    "type": "DOMString"
                },
                {
                    "name": "note",
                    "description": "user notes about contact",
                    "type": "DOMString"
                },
                {
                    "name": "photos",
                    "description": "",
                    "type": "Array.<ContactField>"
                },
                {
                    "name": "categories",
                    "description": "",
                    "type": "Array.<ContactField>"
                },
                {
                    "name": "urls",
                    "description": "contact's web sites",
                    "type": "Array.<ContactField>"
                }
            ],
            "class": "PKObject"
        },
        {
            "file": "demo/merges/ios/cordova.js",
            "line": 1491,
            "description": "Removes contact from device storage.",
            "params": [
                {
                    "name": "successCB",
                    "description": "success callback"
                },
                {
                    "name": "errorCB",
                    "description": "error callback"
                }
            ],
            "class": "PKObject"
        },
        {
            "file": "demo/merges/ios/cordova.js",
            "line": 1509,
            "description": "Creates a deep copy of this Contact.\nWith the contact ID set to null.",
            "return": {
                "description": "copy of this Contact"
            },
            "class": "PKObject"
        },
        {
            "file": "demo/merges/ios/cordova.js",
            "line": 1539,
            "description": "Persists contact to device storage.",
            "params": [
                {
                    "name": "successCB",
                    "description": "success callback"
                },
                {
                    "name": "errorCB",
                    "description": "error callback"
                }
            ],
            "class": "PKObject"
        },
        {
            "file": "demo/merges/ios/cordova.js",
            "line": 1573,
            "description": "Contact address.",
            "is_constructor": 1,
            "params": [
                {
                    "name": "id",
                    "description": "unique identifier, should only be set by native code",
                    "type": "DOMString"
                },
                {
                    "name": "formatted",
                    "description": "// NOTE: not a W3C standard"
                },
                {
                    "name": "streetAddress",
                    "description": ""
                },
                {
                    "name": "locality",
                    "description": ""
                },
                {
                    "name": "region",
                    "description": ""
                },
                {
                    "name": "postalCode",
                    "description": ""
                },
                {
                    "name": "country",
                    "description": ""
                }
            ],
            "class": "PKObject"
        },
        {
            "file": "demo/merges/ios/cordova.js",
            "line": 1604,
            "description": "ContactError.\nAn error code assigned by an implementation when an error has occurred",
            "is_constructor": 1,
            "class": "PKObject"
        },
        {
            "file": "demo/merges/ios/cordova.js",
            "line": 1613,
            "description": "Error codes",
            "class": "PKObject"
        },
        {
            "file": "demo/merges/ios/cordova.js",
            "line": 1631,
            "description": "Generic contact field.",
            "is_constructor": 1,
            "params": [
                {
                    "name": "id",
                    "description": "unique identifier, should only be set by native code // NOTE: not a W3C standard",
                    "type": "DOMString"
                },
                {
                    "name": "type",
                    "description": ""
                },
                {
                    "name": "value",
                    "description": ""
                },
                {
                    "name": "pref",
                    "description": ""
                }
            ],
            "class": "PKObject"
        },
        {
            "file": "demo/merges/ios/cordova.js",
            "line": 1653,
            "description": "ContactFindOptions.",
            "is_constructor": 1,
            "params": [
                {
                    "name": "filter",
                    "description": "used to match contacts against"
                },
                {
                    "name": "multiple",
                    "description": "boolean used to determine if more than one contact should be returned"
                }
            ],
            "class": "PKObject"
        },
        {
            "file": "demo/merges/ios/cordova.js",
            "line": 1672,
            "description": "Contact name.",
            "is_constructor": 1,
            "params": [
                {
                    "name": "formatted",
                    "description": "// NOTE: not part of W3C standard"
                },
                {
                    "name": "familyName",
                    "description": ""
                },
                {
                    "name": "givenName",
                    "description": ""
                },
                {
                    "name": "middle",
                    "description": ""
                },
                {
                    "name": "prefix",
                    "description": ""
                },
                {
                    "name": "suffix",
                    "description": ""
                }
            ],
            "class": "PKObject"
        },
        {
            "file": "demo/merges/ios/cordova.js",
            "line": 1698,
            "description": "Contact organization.",
            "is_constructor": 1,
            "params": [
                {
                    "name": "id",
                    "description": "unique identifier, should only be set by native code // NOTE: not a W3C standard",
                    "type": "DOMString"
                },
                {
                    "name": "name",
                    "description": ""
                },
                {
                    "name": "dept",
                    "description": ""
                },
                {
                    "name": "title",
                    "description": ""
                },
                {
                    "name": "startDate",
                    "description": ""
                },
                {
                    "name": "endDate",
                    "description": ""
                },
                {
                    "name": "location",
                    "description": ""
                },
                {
                    "name": "desc",
                    "description": ""
                }
            ],
            "class": "PKObject"
        },
        {
            "file": "demo/merges/ios/cordova.js",
            "line": 1727,
            "description": "This class contains position information.",
            "params": [
                {
                    "name": "lat",
                    "description": "",
                    "type": "Object"
                },
                {
                    "name": "lng",
                    "description": "",
                    "type": "Object"
                },
                {
                    "name": "alt",
                    "description": "",
                    "type": "Object"
                },
                {
                    "name": "acc",
                    "description": "",
                    "type": "Object"
                },
                {
                    "name": "head",
                    "description": "",
                    "type": "Object"
                },
                {
                    "name": "vel",
                    "description": "",
                    "type": "Object"
                },
                {
                    "name": "altacc",
                    "description": "",
                    "type": "Object"
                }
            ],
            "is_constructor": 1,
            "class": "PKObject"
        },
        {
            "file": "demo/merges/ios/cordova.js",
            "line": 1739,
            "description": "The latitude of the position.",
            "class": "PKObject"
        },
        {
            "file": "demo/merges/ios/cordova.js",
            "line": 1743,
            "description": "The longitude of the position,",
            "class": "PKObject"
        },
        {
            "file": "demo/merges/ios/cordova.js",
            "line": 1747,
            "description": "The accuracy of the position.",
            "class": "PKObject"
        },
        {
            "file": "demo/merges/ios/cordova.js",
            "line": 1751,
            "description": "The altitude of the position.",
            "class": "PKObject"
        },
        {
            "file": "demo/merges/ios/cordova.js",
            "line": 1755,
            "description": "The direction the device is moving at the position.",
            "class": "PKObject"
        },
        {
            "file": "demo/merges/ios/cordova.js",
            "line": 1759,
            "description": "The velocity with which the device is moving at the position.",
            "class": "PKObject"
        },
        {
            "file": "demo/merges/ios/cordova.js",
            "line": 1768,
            "description": "The altitude accuracy of the position.",
            "class": "PKObject"
        },
        {
            "file": "demo/merges/ios/cordova.js",
            "line": 1788,
            "description": "An interface representing a directory on the file system.\n\n{boolean} isFile always false (readonly)\n{boolean} isDirectory always true (readonly)\n{DOMString} name of the directory, excluding the path leading to it (readonly)\n{DOMString} fullPath the absolute full path to the directory (readonly)\nTODO: implement this!!! {FileSystem} filesystem on which the directory resides (readonly)",
            "class": "PKObject"
        },
        {
            "file": "demo/merges/ios/cordova.js",
            "line": 1803,
            "description": "Creates a new DirectoryReader to read entries from this directory",
            "class": "PKObject"
        },
        {
            "file": "demo/merges/ios/cordova.js",
            "line": 1810,
            "description": "Creates or looks up a directory",
            "params": [
                {
                    "name": "path",
                    "description": "either a relative or absolute path from this directory in which to look up or create a directory",
                    "type": "DOMString"
                },
                {
                    "name": "options",
                    "description": "to create or exclusively create the directory",
                    "type": "Flags"
                },
                {
                    "name": "successCallback",
                    "description": "is called with the new entry",
                    "type": "Function"
                },
                {
                    "name": "errorCallback",
                    "description": "is called with a FileError",
                    "type": "Function"
                }
            ],
            "class": "PKObject"
        },
        {
            "file": "demo/merges/ios/cordova.js",
            "line": 1830,
            "description": "Deletes a directory and all of it's contents",
            "params": [
                {
                    "name": "successCallback",
                    "description": "is called with no parameters",
                    "type": "Function"
                },
                {
                    "name": "errorCallback",
                    "description": "is called with a FileError",
                    "type": "Function"
                }
            ],
            "class": "PKObject"
        },
        {
            "file": "demo/merges/ios/cordova.js",
            "line": 1844,
            "description": "Creates or looks up a file",
            "params": [
                {
                    "name": "path",
                    "description": "either a relative or absolute path from this directory in which to look up or create a file",
                    "type": "DOMString"
                },
                {
                    "name": "options",
                    "description": "to create or exclusively create the file",
                    "type": "Flags"
                },
                {
                    "name": "successCallback",
                    "description": "is called with the new entry",
                    "type": "Function"
                },
                {
                    "name": "errorCallback",
                    "description": "is called with a FileError",
                    "type": "Function"
                }
            ],
            "class": "PKObject"
        },
        {
            "file": "demo/merges/ios/cordova.js",
            "line": 1875,
            "description": "An interface that lists the files and directories in a directory.",
            "class": "PKObject"
        },
        {
            "file": "demo/merges/ios/cordova.js",
            "line": 1882,
            "description": "Returns a list of entries from a directory.",
            "params": [
                {
                    "name": "successCallback",
                    "description": "is called with a list of entries",
                    "type": "Function"
                },
                {
                    "name": "errorCallback",
                    "description": "is called with a FileError",
                    "type": "Function"
                }
            ],
            "class": "PKObject"
        },
        {
            "file": "demo/merges/ios/cordova.js",
            "line": 1925,
            "description": "Represents a file or directory on the local file system.",
            "params": [
                {
                    "name": "isFile!~YUIDOC_LINE~!",
                    "description": "true if Entry is a file (readonly)",
                    "type": "Boolean"
                },
                {
                    "name": "isDirectory!~YUIDOC_LINE~!",
                    "description": "true if Entry is a directory (readonly)",
                    "type": "Boolean"
                },
                {
                    "name": "name!~YUIDOC_LINE~!",
                    "description": "name of the file or directory, excluding the path\n           leading to it (readonly)",
                    "type": "DOMString"
                },
                {
                    "name": "fullPath!~YUIDOC_LINE~!",
                    "description": "the absolute full path to the file or directory\n           (readonly)",
                    "type": "DOMString"
                }
            ],
            "class": "PKObject"
        },
        {
            "file": "demo/merges/ios/cordova.js",
            "line": 1947,
            "description": "Look up the metadata of the entry.",
            "params": [
                {
                    "name": "successCallback!~YUIDOC_LINE~!",
                    "description": "is called with a Metadata object",
                    "type": "Function"
                },
                {
                    "name": "errorCallback!~YUIDOC_LINE~!",
                    "description": "is called with a FileError",
                    "type": "Function"
                }
            ],
            "class": "PKObject"
        },
        {
            "file": "demo/merges/ios/cordova.js",
            "line": 1968,
            "description": "Set the metadata of the entry.",
            "params": [
                {
                    "name": "successCallback!~YUIDOC_LINE~!",
                    "description": "is called with a Metadata object",
                    "type": "Function"
                },
                {
                    "name": "errorCallback!~YUIDOC_LINE~!",
                    "description": "is called with a FileError",
                    "type": "Function"
                },
                {
                    "name": "metadataObject!~YUIDOC_LINE~!",
                    "description": "keys and values to set",
                    "type": "Object"
                }
            ],
            "class": "PKObject"
        },
        {
            "file": "demo/merges/ios/cordova.js",
            "line": 1983,
            "description": "Move a file or directory to a new location.",
            "params": [
                {
                    "name": "parent!~YUIDOC_LINE~!",
                    "description": "the directory to which to move this entry",
                    "type": "DirectoryEntry"
                },
                {
                    "name": "newName!~YUIDOC_LINE~!",
                    "description": "new name of the entry, defaults to the current name",
                    "type": "DOMString"
                },
                {
                    "name": "successCallback!~YUIDOC_LINE~!",
                    "description": "called with the new DirectoryEntry object",
                    "type": "Function"
                },
                {
                    "name": "errorCallback!~YUIDOC_LINE~!",
                    "description": "called with a FileError",
                    "type": "Function"
                }
            ],
            "class": "PKObject"
        },
        {
            "file": "demo/merges/ios/cordova.js",
            "line": 2022,
            "description": "Copy a directory to a different location.",
            "params": [
                {
                    "name": "parent!~YUIDOC_LINE~!",
                    "description": "the directory to which to copy the entry",
                    "type": "DirectoryEntry"
                },
                {
                    "name": "newName!~YUIDOC_LINE~!",
                    "description": "new name of the entry, defaults to the current name",
                    "type": "DOMString"
                },
                {
                    "name": "successCallback!~YUIDOC_LINE~!",
                    "description": "called with the new Entry object",
                    "type": "Function"
                },
                {
                    "name": "errorCallback!~YUIDOC_LINE~!",
                    "description": "called with a FileError",
                    "type": "Function"
                }
            ],
            "class": "PKObject"
        },
        {
            "file": "demo/merges/ios/cordova.js",
            "line": 2063,
            "description": "Return a URL that can be used to identify this entry.",
            "class": "PKObject"
        },
        {
            "file": "demo/merges/ios/cordova.js",
            "line": 2071,
            "description": "Returns a URI that can be used to identify this entry.",
            "params": [
                {
                    "name": "mimeType",
                    "description": "for a FileEntry, the mime type to be used to interpret the file, when loaded through this URI.",
                    "type": "DOMString"
                }
            ],
            "return": {
                "description": "uri"
            },
            "class": "PKObject"
        },
        {
            "file": "demo/merges/ios/cordova.js",
            "line": 2083,
            "description": "Remove a file or directory. It is an error to attempt to delete a\ndirectory that is not empty. It is an error to attempt to delete a\nroot directory of a file system.",
            "params": [
                {
                    "name": "successCallback",
                    "description": "called with no parameters",
                    "type": "Function"
                },
                {
                    "name": "errorCallback",
                    "description": "called with a FileError",
                    "type": "Function"
                }
            ],
            "class": "PKObject"
        },
        {
            "file": "demo/merges/ios/cordova.js",
            "line": 2099,
            "description": "Look up the parent DirectoryEntry of this entry.",
            "params": [
                {
                    "name": "successCallback",
                    "description": "called with the parent DirectoryEntry object",
                    "type": "Function"
                },
                {
                    "name": "errorCallback",
                    "description": "called with a FileError",
                    "type": "Function"
                }
            ],
            "class": "PKObject"
        },
        {
            "file": "demo/merges/ios/cordova.js",
            "line": 2125,
            "description": "Constructor.\nname {DOMString} name of the file, without path information\nfullPath {DOMString} the full path of the file, including the name\ntype {DOMString} mime type\nlastModifiedDate {Date} last modified date\nsize {Number} size of the file in bytes",
            "class": "PKObject"
        },
        {
            "file": "demo/merges/ios/cordova.js",
            "line": 2146,
            "description": "Returns a \"slice\" of the file. Since Cordova Files don't contain the actual\ncontent, this really returns a File with adjusted start and end.\nSlices of slices are supported.\nstart {Number} The index at which to start the slice (inclusive).\nend {Number} The index at which to end the slice (exclusive).",
            "class": "PKObject"
        },
        {
            "file": "demo/merges/ios/cordova.js",
            "line": 2194,
            "description": "An interface representing a file on the file system.\n\n{boolean} isFile always true (readonly)\n{boolean} isDirectory always false (readonly)\n{DOMString} name of the file, excluding the path leading to it (readonly)\n{DOMString} fullPath the absolute full path to the file (readonly)\n{FileSystem} filesystem on which the file resides (readonly)",
            "class": "PKObject"
        },
        {
            "file": "demo/merges/ios/cordova.js",
            "line": 2209,
            "description": "Creates a new FileWriter associated with the file that this FileEntry represents.",
            "params": [
                {
                    "name": "successCallback",
                    "description": "is called with the new FileWriter",
                    "type": "Function"
                },
                {
                    "name": "errorCallback",
                    "description": "is called with a FileError",
                    "type": "Function"
                }
            ],
            "class": "PKObject"
        },
        {
            "file": "demo/merges/ios/cordova.js",
            "line": 2227,
            "description": "Returns a File that represents the current state of the file that this FileEntry represents.",
            "params": [
                {
                    "name": "successCallback",
                    "description": "is called with the new File object",
                    "type": "Function"
                },
                {
                    "name": "errorCallback",
                    "description": "is called with a FileError",
                    "type": "Function"
                }
            ],
            "class": "PKObject"
        },
        {
            "file": "demo/merges/ios/cordova.js",
            "line": 2252,
            "description": "FileError",
            "class": "PKObject"
        },
        {
            "file": "demo/merges/ios/cordova.js",
            "line": 2291,
            "description": "This class reads the mobile device file system.\n\nFor Android:\n     The root directory is the root of the file system.\n     To read from the SD card, the file name is \"sdcard/my_file.txt\"",
            "is_constructor": 1,
            "class": "PKObject"
        },
        {
            "file": "demo/merges/ios/cordova.js",
            "line": 2362,
            "description": "Abort reading file.",
            "class": "PKObject"
        },
        {
            "file": "demo/merges/ios/cordova.js",
            "line": 2387,
            "description": "Read text file.",
            "params": [
                {
                    "name": "file",
                    "description": "File object containing file properties",
                    "type": "File"
                },
                {
                    "name": "encoding",
                    "description": "[Optional] (see http://www.iana.org/assignments/character-sets)"
                }
            ],
            "class": "PKObject"
        },
        {
            "file": "demo/merges/ios/cordova.js",
            "line": 2464,
            "description": "Read file and return data as a base64 encoded data url.\nA data url is of the form:\n     data:[<mediatype>][;base64],<data>",
            "params": [
                {
                    "name": "file",
                    "description": "File object containing file properties",
                    "type": "File"
                }
            ],
            "class": "PKObject"
        },
        {
            "file": "demo/merges/ios/cordova.js",
            "line": 2538,
            "description": "Read file and return data as a binary data.",
            "params": [
                {
                    "name": "file",
                    "description": "File object containing file properties",
                    "type": "File"
                }
            ],
            "class": "PKObject"
        },
        {
            "file": "demo/merges/ios/cordova.js",
            "line": 2552,
            "description": "Read file and return data as a binary data.",
            "params": [
                {
                    "name": "file",
                    "description": "File object containing file properties",
                    "type": "File"
                }
            ],
            "class": "PKObject"
        },
        {
            "file": "demo/merges/ios/cordova.js",
            "line": 2575,
            "description": "An interface representing a file system",
            "is_constructor": 1,
            "class": "PKObject"
        },
        {
            "file": "demo/merges/ios/cordova.js",
            "line": 2611,
            "description": "FileTransfer uploads a file to a remote server.",
            "is_constructor": 1,
            "class": "PKObject"
        },
        {
            "file": "demo/merges/ios/cordova.js",
            "line": 2620,
            "description": "Given an absolute file path, uploads a file on the device to a remote server\nusing a multipart HTTP request.",
            "params": [
                {
                    "name": "filePath",
                    "description": "Full path of the file on the device",
                    "type": "String"
                },
                {
                    "name": "server",
                    "description": "URL of the server to receive the file",
                    "type": "String"
                },
                {
                    "name": "successCallback",
                    "description": "(Function}  Callback to be invoked when upload has completed"
                },
                {
                    "name": "errorCallback",
                    "description": "Callback to be invoked upon error",
                    "type": "Function"
                },
                {
                    "name": "options",
                    "description": "Optional parameters such as file name and mimetype",
                    "type": "FileUploadOptions"
                },
                {
                    "name": "trustAllHosts",
                    "description": "Optional trust all hosts (e.g. for self-signed certs), defaults to false",
                    "type": "Boolean"
                }
            ],
            "class": "PKObject"
        },
        {
            "file": "demo/merges/ios/cordova.js",
            "line": 2673,
            "description": "Downloads a file form a given URL and saves it to the specified directory.",
            "params": [
                {
                    "name": "source",
                    "description": "URL of the server to receive the file",
                    "type": "String"
                },
                {
                    "name": "target",
                    "description": "Full path of the file on the device",
                    "type": "String"
                },
                {
                    "name": "successCallback",
                    "description": "(Function}  Callback to be invoked when upload has completed"
                },
                {
                    "name": "errorCallback",
                    "description": "Callback to be invoked upon error",
                    "type": "Function"
                },
                {
                    "name": "trustAllHosts",
                    "description": "Optional trust all hosts (e.g. for self-signed certs), defaults to false",
                    "type": "Boolean"
                }
            ],
            "class": "PKObject"
        },
        {
            "file": "demo/merges/ios/cordova.js",
            "line": 2713,
            "description": "Aborts the ongoing file transfer on this object",
            "params": [
                {
                    "name": "successCallback",
                    "description": "Callback to be invoked upon success",
                    "type": "Function"
                },
                {
                    "name": "errorCallback",
                    "description": "Callback to be invoked upon error",
                    "type": "Function"
                }
            ],
            "class": "PKObject"
        },
        {
            "file": "demo/merges/ios/cordova.js",
            "line": 2729,
            "description": "FileTransferError",
            "is_constructor": 1,
            "class": "PKObject"
        },
        {
            "file": "demo/merges/ios/cordova.js",
            "line": 2753,
            "description": "Options to customize the HTTP request used to upload files.",
            "is_constructor": 1,
            "params": [
                {
                    "name": "fileKey",
                    "description": "Name of file request parameter.",
                    "type": "String"
                },
                {
                    "name": "fileName",
                    "description": "Filename to be used by the server. Defaults to image.jpg.",
                    "type": "String"
                },
                {
                    "name": "mimeType",
                    "description": "Mimetype of the uploaded file. Defaults to image/jpeg.",
                    "type": "String"
                },
                {
                    "name": "params",
                    "description": "Object with key: value params to send to the server.",
                    "type": "Object"
                },
                {
                    "name": "headers",
                    "description": "Keys are header names, values are header values. Multiple\n                          headers of the same name are not supported.",
                    "type": "Object"
                }
            ],
            "class": "PKObject"
        },
        {
            "file": "demo/merges/ios/cordova.js",
            "line": 2778,
            "description": "FileUploadResult",
            "is_constructor": 1,
            "class": "PKObject"
        },
        {
            "file": "demo/merges/ios/cordova.js",
            "line": 2799,
            "description": "This class writes to the mobile device file system.\n\nFor Android:\n     The root directory is the root of the file system.\n     To write to the SD card, the file name is \"sdcard/my_file.txt\"",
            "is_constructor": 1,
            "params": [
                {
                    "name": "file",
                    "description": "File object containing file properties",
                    "type": "File"
                },
                {
                    "name": "append",
                    "description": "if true write to the end of the file, otherwise overwrite the file"
                }
            ],
            "class": "PKObject"
        },
        {
            "file": "demo/merges/ios/cordova.js",
            "line": 2841,
            "description": "Abort writing file.",
            "class": "PKObject"
        },
        {
            "file": "demo/merges/ios/cordova.js",
            "line": 2866,
            "description": "Writes data to the file",
            "params": [
                {
                    "name": "text",
                    "description": "to be written"
                }
            ],
            "class": "PKObject"
        },
        {
            "file": "demo/merges/ios/cordova.js",
            "line": 2940,
            "description": "Moves the file pointer to the location specified.\n\nIf the offset is a negative number the position of the file\npointer is rewound.  If the offset is greater than the file\nsize the position is set to the end of the file.",
            "params": [
                {
                    "name": "offset",
                    "description": "is the location to move the file pointer to."
                }
            ],
            "class": "PKObject"
        },
        {
            "file": "demo/merges/ios/cordova.js",
            "line": 2975,
            "description": "Truncates the file to the size specified.",
            "params": [
                {
                    "name": "size",
                    "description": "to chop the file at."
                }
            ],
            "class": "PKObject"
        },
        {
            "file": "demo/merges/ios/cordova.js",
            "line": 3054,
            "description": "Supplies arguments to methods that lookup or create files and directories.",
            "params": [
                {
                    "name": "create!~YUIDOC_LINE~!",
                    "description": "file or directory if it doesn't exist",
                    "type": "Boolean"
                },
                {
                    "name": "exclusive!~YUIDOC_LINE~!",
                    "description": "used with create; if true the command will fail if\n           target path exists",
                    "type": "Boolean"
                }
            ],
            "class": "PKObject"
        },
        {
            "file": "demo/merges/ios/cordova.js",
            "line": 3076,
            "description": "Globalization error object",
            "is_constructor": 1,
            "params": [
                {
                    "name": "code",
                    "description": ""
                },
                {
                    "name": "message",
                    "description": ""
                }
            ],
            "class": "PKObject"
        },
        {
            "file": "demo/merges/ios/cordova.js",
            "line": 3150,
            "description": "Represents a local file system.",
            "class": "PKObject"
        },
        {
            "file": "demo/merges/ios/cordova.js",
            "line": 3173,
            "description": "This class provides access to the device media, interfaces to both sound and video",
            "is_constructor": 1,
            "params": [
                {
                    "name": "src",
                    "description": "The file name or url to play"
                },
                {
                    "name": "successCallback",
                    "description": "The callback to be called when the file is done playing or recording.\n                                 successCallback()"
                },
                {
                    "name": "errorCallback",
                    "description": "The callback to be called if there is an error.\n                                 errorCallback(int errorCode) - OPTIONAL"
                },
                {
                    "name": "statusCallback",
                    "description": "The callback to be called when media status has changed.\n                                 statusCallback(int statusCode) - OPTIONAL"
                }
            ],
            "class": "PKObject"
        },
        {
            "file": "demo/merges/ios/cordova.js",
            "line": 3217,
            "description": "Start or resume playing audio file.",
            "class": "PKObject"
        },
        {
            "file": "demo/merges/ios/cordova.js",
            "line": 3224,
            "description": "Stop playing audio file.",
            "class": "PKObject"
        },
        {
            "file": "demo/merges/ios/cordova.js",
            "line": 3234,
            "description": "Seek or jump to a new time in the track..",
            "class": "PKObject"
        },
        {
            "file": "demo/merges/ios/cordova.js",
            "line": 3244,
            "description": "Pause playing audio file.",
            "class": "PKObject"
        },
        {
            "file": "demo/merges/ios/cordova.js",
            "line": 3251,
            "description": "Get duration of an audio file.\nThe duration is only set for audio that is playing, paused or stopped.",
            "return": {
                "description": "duration or -1 if not known."
            },
            "class": "PKObject"
        },
        {
            "file": "demo/merges/ios/cordova.js",
            "line": 3261,
            "description": "Get position of audio.",
            "class": "PKObject"
        },
        {
            "file": "demo/merges/ios/cordova.js",
            "line": 3272,
            "description": "Start recording audio file.",
            "class": "PKObject"
        },
        {
            "file": "demo/merges/ios/cordova.js",
            "line": 3279,
            "description": "Stop recording audio file.",
            "class": "PKObject"
        },
        {
            "file": "demo/merges/ios/cordova.js",
            "line": 3286,
            "description": "Release the resources.",
            "class": "PKObject"
        },
        {
            "file": "demo/merges/ios/cordova.js",
            "line": 3293,
            "description": "Adjust the volume.",
            "class": "PKObject"
        },
        {
            "file": "demo/merges/ios/cordova.js",
            "line": 3300,
            "description": "Audio has status update.\nPRIVATE",
            "params": [
                {
                    "name": "id",
                    "description": "The media object id (string)"
                },
                {
                    "name": "msgType",
                    "description": "The 'type' of update this is"
                },
                {
                    "name": "value",
                    "description": "Use of value is determined by the msgType"
                }
            ],
            "class": "PKObject"
        },
        {
            "file": "demo/merges/ios/cordova.js",
            "line": 3347,
            "description": "This class contains information about any Media errors.",
            "class": "PKObject"
        },
        {
            "file": "demo/merges/ios/cordova.js",
            "line": 3391,
            "description": "Represents a single file.\n\nname {DOMString} name of the file, without path information\nfullPath {DOMString} the full path of the file, including the name\ntype {DOMString} mime type\nlastModifiedDate {Date} last modified date\nsize {Number} size of the file in bytes",
            "class": "PKObject"
        },
        {
            "file": "demo/merges/ios/cordova.js",
            "line": 3406,
            "description": "Request capture format data for a specific file and type",
            "params": [
                {
                    "name": "successCB",
                    "description": "",
                    "type": "Function"
                },
                {
                    "name": "errorCB",
                    "description": "",
                    "type": "Function"
                }
            ],
            "class": "PKObject"
        },
        {
            "file": "demo/merges/ios/cordova.js",
            "line": 3427,
            "description": "MediaFileData encapsulates format information of a media file.",
            "params": [
                {
                    "name": "codecs",
                    "description": "",
                    "type": "DOMString"
                },
                {
                    "name": "bitrate",
                    "description": "",
                    "type": "Long"
                },
                {
                    "name": "height",
                    "description": "",
                    "type": "Long"
                },
                {
                    "name": "width",
                    "description": "",
                    "type": "Long"
                },
                {
                    "name": "duration",
                    "description": "",
                    "type": "Float"
                }
            ],
            "class": "PKObject"
        },
        {
            "file": "demo/merges/ios/cordova.js",
            "line": 3451,
            "description": "Information about the state of the file or directory\n\n{Date} modificationTime (readonly)",
            "class": "PKObject"
        },
        {
            "file": "demo/merges/ios/cordova.js",
            "line": 3485,
            "description": "Position error object",
            "is_constructor": 1,
            "params": [
                {
                    "name": "code",
                    "description": ""
                },
                {
                    "name": "message",
                    "description": ""
                }
            ],
            "class": "PKObject"
        },
        {
            "file": "demo/merges/ios/cordova.js",
            "line": 3560,
            "description": "This class provides access to device accelerometer data.",
            "is_constructor": 1,
            "class": "PKObject"
        },
        {
            "file": "demo/merges/ios/cordova.js",
            "line": 3621,
            "description": "Asynchronously acquires the current acceleration.",
            "params": [
                {
                    "name": "successCallback",
                    "description": "The function to call when the acceleration data is available",
                    "type": "Function"
                },
                {
                    "name": "errorCallback",
                    "description": "The function to call when there is an error getting the acceleration data. (OPTIONAL)",
                    "type": "Function"
                },
                {
                    "name": "options",
                    "description": "The options for getting the accelerometer data such as timeout. (OPTIONAL)",
                    "type": "AccelerationOptions"
                }
            ],
            "class": "PKObject"
        },
        {
            "file": "demo/merges/ios/cordova.js",
            "line": 3649,
            "description": "Asynchronously acquires the acceleration repeatedly at a given interval.",
            "params": [
                {
                    "name": "successCallback",
                    "description": "The function to call each time the acceleration data is available",
                    "type": "Function"
                },
                {
                    "name": "errorCallback",
                    "description": "The function to call when there is an error getting the acceleration data. (OPTIONAL)",
                    "type": "Function"
                },
                {
                    "name": "options",
                    "description": "The options for getting the accelerometer data such as timeout. (OPTIONAL)",
                    "type": "AccelerationOptions"
                }
            ],
            "return": {
                "description": "String                       The watch id that must be passed to #clearWatch to stop watching."
            },
            "class": "PKObject"
        },
        {
            "file": "demo/merges/ios/cordova.js",
            "line": 3693,
            "description": "Clears the specified accelerometer watch.",
            "params": [
                {
                    "name": "id",
                    "description": "The id of the watch returned from #watchAcceleration.",
                    "type": "String"
                }
            ],
            "class": "PKObject"
        },
        {
            "file": "demo/merges/ios/cordova.js",
            "line": 3726,
            "description": "This class contains information about the current battery status.",
            "is_constructor": 1,
            "class": "PKObject"
        },
        {
            "file": "demo/merges/ios/cordova.js",
            "line": 3752,
            "description": "Event handlers for when callbacks get registered for the battery.\nKeep track of how many handlers we have so we can start and stop the native battery listener\nappropriately (and hopefully save on battery life!).",
            "class": "PKObject"
        },
        {
            "file": "demo/merges/ios/cordova.js",
            "line": 3766,
            "description": "Callback for battery status",
            "params": [
                {
                    "name": "info",
                    "description": "keys: level, isPlugged",
                    "type": "Object"
                }
            ],
            "class": "PKObject"
        },
        {
            "file": "demo/merges/ios/cordova.js",
            "line": 3794,
            "description": "Error callback for battery start",
            "class": "PKObject"
        },
        {
            "file": "demo/merges/ios/cordova.js",
            "line": 3835,
            "description": "Launches a capture of different types.",
            "params": [
                {
                    "name": "(DOMString}",
                    "description": "type"
                },
                {
                    "name": "successCB",
                    "description": "",
                    "type": "Function"
                },
                {
                    "name": "errorCB",
                    "description": "",
                    "type": "Function"
                },
                {
                    "name": "options",
                    "description": "",
                    "type": "CaptureVideoOptions"
                }
            ],
            "class": "PKObject"
        },
        {
            "file": "demo/merges/ios/cordova.js",
            "line": 3860,
            "description": "The Capture interface exposes an interface to the camera and microphone of the hosting device.",
            "class": "PKObject"
        },
        {
            "file": "demo/merges/ios/cordova.js",
            "line": 3869,
            "description": "Launch audio recorder application for recording audio clip(s).",
            "params": [
                {
                    "name": "successCB",
                    "description": "",
                    "type": "Function"
                },
                {
                    "name": "errorCB",
                    "description": "",
                    "type": "Function"
                },
                {
                    "name": "options",
                    "description": "",
                    "type": "CaptureAudioOptions"
                }
            ],
            "class": "PKObject"
        },
        {
            "file": "demo/merges/ios/cordova.js",
            "line": 3880,
            "description": "Launch camera application for taking image(s).",
            "params": [
                {
                    "name": "successCB",
                    "description": "",
                    "type": "Function"
                },
                {
                    "name": "errorCB",
                    "description": "",
                    "type": "Function"
                },
                {
                    "name": "options",
                    "description": "",
                    "type": "CaptureImageOptions"
                }
            ],
            "class": "PKObject"
        },
        {
            "file": "demo/merges/ios/cordova.js",
            "line": 3891,
            "description": "Launch device camera application for recording video(s).",
            "params": [
                {
                    "name": "successCB",
                    "description": "",
                    "type": "Function"
                },
                {
                    "name": "errorCB",
                    "description": "",
                    "type": "Function"
                },
                {
                    "name": "options",
                    "description": "",
                    "type": "CaptureVideoOptions"
                }
            ],
            "class": "PKObject"
        },
        {
            "file": "demo/merges/ios/cordova.js",
            "line": 3933,
            "description": "Asynchronously acquires the current heading.",
            "params": [
                {
                    "name": "successCallback",
                    "description": "The function to call when the heading\ndata is available",
                    "type": "Function"
                },
                {
                    "name": "errorCallback",
                    "description": "The function to call when there is an error\ngetting the heading data.",
                    "type": "Function"
                },
                {
                    "name": "options",
                    "description": "The options for getting the heading data (not used).",
                    "type": "CompassOptions"
                }
            ],
            "class": "PKObject"
        },
        {
            "file": "demo/merges/ios/cordova.js",
            "line": 3957,
            "description": "Asynchronously acquires the heading repeatedly at a given interval.",
            "params": [
                {
                    "name": "successCallback",
                    "description": "The function to call each time the heading\ndata is available",
                    "type": "Function"
                },
                {
                    "name": "errorCallback",
                    "description": "The function to call when there is an error\ngetting the heading data.",
                    "type": "Function"
                },
                {
                    "name": "options",
                    "description": "The options for getting the heading data\nsuch as timeout and the frequency of the watch. For iOS, filter parameter\nspecifies to watch via a distance filter rather than time.",
                    "type": "HeadingOptions"
                }
            ],
            "class": "PKObject"
        },
        {
            "file": "demo/merges/ios/cordova.js",
            "line": 3988,
            "description": "Clears the specified heading watch.",
            "params": [
                {
                    "name": "watchId",
                    "description": "The ID of the watch returned from #watchHeading.",
                    "type": "String"
                }
            ],
            "class": "PKObject"
        },
        {
            "file": "demo/merges/ios/cordova.js",
            "line": 4203,
            "description": "Represents a group of Contacts.",
            "is_constructor": 1,
            "class": "PKObject"
        },
        {
            "file": "demo/merges/ios/cordova.js",
            "line": 4208,
            "description": "Returns an array of Contacts matching the search criteria.",
            "params": [
                {
                    "name": "fields",
                    "description": "that should be searched"
                },
                {
                    "name": "successCB",
                    "description": "success callback"
                },
                {
                    "name": "errorCB",
                    "description": "error callback"
                },
                {
                    "name": "options",
                    "description": "that can be applied to contact searching",
                    "type": "ContactFindOptions"
                }
            ],
            "return": {
                "description": "array of Contacts matching search criteria"
            },
            "class": "PKObject"
        },
        {
            "file": "demo/merges/ios/cordova.js",
            "line": 4232,
            "description": "This function creates a new contact, but it does not persist the contact\nto device storage. To persist the contact to device storage, invoke\ncontact.save().",
            "params": [
                {
                    "name": "properties",
                    "description": "an object whose properties will be examined to create a new Contact"
                }
            ],
            "return": {
                "description": "new Contact object"
            },
            "class": "PKObject"
        },
        {
            "file": "demo/merges/ios/cordova.js",
            "line": 4283,
            "description": "This represents the mobile device, and provides properties for inspecting the model, version, UUID of the\nphone, etc.",
            "is_constructor": 1,
            "class": "PKObject"
        },
        {
            "file": "demo/merges/ios/cordova.js",
            "line": 4316,
            "description": "Get device info",
            "params": [
                {
                    "name": "successCallback",
                    "description": "The function to call when the heading data is available",
                    "type": "Function"
                },
                {
                    "name": "errorCallback",
                    "description": "The function to call when there is an error getting the heading data. (OPTIONAL)",
                    "type": "Function"
                }
            ],
            "class": "PKObject"
        },
        {
            "file": "demo/merges/ios/cordova.js",
            "line": 4346,
            "description": "Sends the given message through exec() to the Echo plugin, which sends it back to the successCallback.",
            "params": [
                {
                    "name": "successCallback",
                    "description": "invoked with a FileSystem object"
                },
                {
                    "name": "errorCallback",
                    "description": "invoked if error occurs retrieving file system"
                },
                {
                    "name": "message",
                    "description": "The string to be echoed."
                },
                {
                    "name": "forceAsync",
                    "description": "Whether to force an async return value (for testing native->js bridge)."
                }
            ],
            "class": "PKObject"
        },
        {
            "file": "demo/merges/ios/cordova.js",
            "line": 4465,
            "description": "Asynchronously acquires the current position.",
            "params": [
                {
                    "name": "successCallback",
                    "description": "The function to call when the position data is available",
                    "type": "Function"
                },
                {
                    "name": "errorCallback",
                    "description": "The function to call when there is an error getting the heading position. (OPTIONAL)",
                    "type": "Function"
                },
                {
                    "name": "options",
                    "description": "The options for getting the position data. (OPTIONAL)",
                    "type": "PositionOptions"
                }
            ],
            "class": "PKObject"
        },
        {
            "file": "demo/merges/ios/cordova.js",
            "line": 4539,
            "description": "Asynchronously watches the geolocation for changes to geolocation.  When a change occurs,\nthe successCallback is called with the new location.",
            "params": [
                {
                    "name": "successCallback",
                    "description": "The function to call each time the location data is available",
                    "type": "Function"
                },
                {
                    "name": "errorCallback",
                    "description": "The function to call when there is an error getting the location data. (OPTIONAL)",
                    "type": "Function"
                },
                {
                    "name": "options",
                    "description": "The options for getting the location data such as frequency. (OPTIONAL)",
                    "type": "PositionOptions"
                }
            ],
            "return": {
                "description": "String                       The watch id that must be passed to #clearWatch to stop watching."
            },
            "class": "PKObject"
        },
        {
            "file": "demo/merges/ios/cordova.js",
            "line": 4590,
            "description": "Clears the specified heading watch.",
            "params": [
                {
                    "name": "id",
                    "description": "The ID of the watch returned from #watchPosition",
                    "type": "String"
                }
            ],
            "class": "PKObject"
        },
        {
            "file": "demo/merges/ios/cordova.js",
            "line": 4630,
            "description": "Returns the string identifier for the client's current language.\nIt returns the language identifier string to the successCB callback with a\nproperties object as a parameter. If there is an error getting the language,\nthen the errorCB callback is invoked.",
            "params": [
                {
                    "name": "successCB",
                    "description": "",
                    "type": "Function"
                },
                {
                    "name": "errorCB",
                    "description": "",
                    "type": "Function"
                }
            ],
            "return": {
                "description": "Object.value : The language identifier",
                "type": "String"
            },
            "error": "GlobalizationError.UNKNOWN_ERROR\n\nExample\n   globalization.getPreferredLanguage(function (language) {alert('language:' + language.value + '\\n');},\n                               function () {});",
            "class": "PKObject"
        },
        {
            "file": "demo/merges/ios/cordova.js",
            "line": 4652,
            "description": "Returns the string identifier for the client's current locale setting.\nIt returns the locale identifier string to the successCB callback with a\nproperties object as a parameter. If there is an error getting the locale,\nthen the errorCB callback is invoked.",
            "params": [
                {
                    "name": "successCB",
                    "description": "",
                    "type": "Function"
                },
                {
                    "name": "errorCB",
                    "description": "",
                    "type": "Function"
                }
            ],
            "return": {
                "description": "Object.value : The locale identifier",
                "type": "String"
            },
            "error": "GlobalizationError.UNKNOWN_ERROR\n\nExample\n   globalization.getLocaleName(function (locale) {alert('locale:' + locale.value + '\\n');},\n                               function () {});",
            "class": "PKObject"
        },
        {
            "file": "demo/merges/ios/cordova.js",
            "line": 4675,
            "description": "Returns a date formatted as a string according to the client's user preferences and\ncalendar using the time zone of the client. It returns the formatted date string to the\nsuccessCB callback with a properties object as a parameter. If there is an error\nformatting the date, then the errorCB callback is invoked.\n\nThe defaults are: formatLenght=\"short\" and selector=\"date and time\"",
            "params": [
                {
                    "name": "date",
                    "description": "",
                    "type": "Date"
                },
                {
                    "name": "successCB",
                    "description": "",
                    "type": "Function"
                },
                {
                    "name": "errorCB",
                    "description": "",
                    "type": "Function"
                },
                {
                    "name": "options",
                    "description": "{optional}\n           formatLength {String}: 'short', 'medium', 'long', or 'full'\n           selector {String}: 'date', 'time', or 'date and time'",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "Object.value : The localized date string",
                "type": "String"
            },
            "error": "GlobalizationError.FORMATTING_ERROR\n\nExample\n   globalization.dateToString(new Date(),\n               function (date) {alert('date:' + date.value + '\\n');},\n               function (errorCode) {alert(errorCode);},\n               {formatLength:'short'});",
            "class": "PKObject"
        },
        {
            "file": "demo/merges/ios/cordova.js",
            "line": 4707,
            "description": "Parses a date formatted as a string according to the client's user\npreferences and calendar using the time zone of the client and returns\nthe corresponding date object. It returns the date to the successCB\ncallback with a properties object as a parameter. If there is an error\nparsing the date string, then the errorCB callback is invoked.\n\nThe defaults are: formatLength=\"short\" and selector=\"date and time\"",
            "params": [
                {
                    "name": "dateString",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "successCB",
                    "description": "",
                    "type": "Function"
                },
                {
                    "name": "errorCB",
                    "description": "",
                    "type": "Function"
                },
                {
                    "name": "options",
                    "description": "{optional}\n           formatLength {String}: 'short', 'medium', 'long', or 'full'\n           selector {String}: 'date', 'time', or 'date and time'",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "Object.year : The four digit year\n           Object.month {Number}: The month from (0 - 11)\n           Object.day {Number}: The day from (1 - 31)\n           Object.hour {Number}: The hour from (0 - 23)\n           Object.minute {Number}: The minute from (0 - 59)\n           Object.second {Number}: The second from (0 - 59)\n           Object.millisecond {Number}: The milliseconds (from 0 - 999),\n                                       not available on all platforms",
                "type": "Number"
            },
            "error": "GlobalizationError.PARSING_ERROR\n\nExample\n   globalization.stringToDate('4/11/2011',\n               function (date) { alert('Month:' + date.month + '\\n' +\n                   'Day:' + date.day + '\\n' +\n                   'Year:' + date.year + '\\n');},\n               function (errorCode) {alert(errorCode);},\n               {selector:'date'});",
            "class": "PKObject"
        },
        {
            "file": "demo/merges/ios/cordova.js",
            "line": 4748,
            "description": "Returns a pattern string for formatting and parsing dates according to the client's\nuser preferences. It returns the pattern to the successCB callback with a\nproperties object as a parameter. If there is an error obtaining the pattern,\nthen the errorCB callback is invoked.\n\nThe defaults are: formatLength=\"short\" and selector=\"date and time\"",
            "params": [
                {
                    "name": "successCB",
                    "description": "",
                    "type": "Function"
                },
                {
                    "name": "errorCB",
                    "description": "",
                    "type": "Function"
                },
                {
                    "name": "options",
                    "description": "{optional}\n           formatLength {String}: 'short', 'medium', 'long', or 'full'\n           selector {String}: 'date', 'time', or 'date and time'",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "Object.pattern : The date and time pattern for formatting and parsing dates.\n                                   The patterns follow Unicode Technical Standard #35\n                                   http://unicode.org/reports/tr35/tr35-4.html\n           Object.timezone {String}: The abbreviated name of the time zone on the client\n           Object.utc_offset {Number}: The current difference in seconds between the client's\n                                       time zone and coordinated universal time.\n           Object.dst_offset {Number}: The current daylight saving time offset in seconds\n                                       between the client's non-daylight saving's time zone\n                                       and the client's daylight saving's time zone.",
                "type": "String"
            },
            "error": "GlobalizationError.PATTERN_ERROR\n\nExample\n   globalization.getDatePattern(\n               function (date) {alert('pattern:' + date.pattern + '\\n');},\n               function () {},\n               {formatLength:'short'});",
            "class": "PKObject"
        },
        {
            "file": "demo/merges/ios/cordova.js",
            "line": 4786,
            "description": "Returns an array of either the names of the months or days of the week\naccording to the client's user preferences and calendar. It returns the array of names to the\nsuccessCB callback with a properties object as a parameter. If there is an error obtaining the\nnames, then the errorCB callback is invoked.\n\nThe defaults are: type=\"wide\" and item=\"months\"",
            "params": [
                {
                    "name": "successCB",
                    "description": "",
                    "type": "Function"
                },
                {
                    "name": "errorCB",
                    "description": "",
                    "type": "Function"
                },
                {
                    "name": "options",
                    "description": "{optional}\n           type {String}: 'narrow' or 'wide'\n           item {String}: 'months', or 'days'",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "Object.value }: The array of names starting from either\n                                       the first month in the year or the\n                                       first day of the week.",
                "type": "ArrayString"
            },
            "error": "GlobalizationError.UNKNOWN_ERROR\n\nExample\n   globalization.getDateNames(function (names) {\n       for(var i = 0; i < names.value.length; i++) {\n           alert('Month:' + names.value[i] + '\\n');}},\n       function () {});",
            "class": "PKObject"
        },
        {
            "file": "demo/merges/ios/cordova.js",
            "line": 4816,
            "description": "Returns whether daylight savings time is in effect for a given date using the client's\ntime zone and calendar. It returns whether or not daylight savings time is in effect\nto the successCB callback with a properties object as a parameter. If there is an error\nreading the date, then the errorCB callback is invoked.",
            "params": [
                {
                    "name": "date",
                    "description": "",
                    "type": "Date"
                },
                {
                    "name": "successCB",
                    "description": "",
                    "type": "Function"
                },
                {
                    "name": "errorCB",
                    "description": "",
                    "type": "Function"
                }
            ],
            "return": {
                "description": "Object.dst : The value \"true\" indicates that daylight savings time is\n                               in effect for the given date and \"false\" indicate that it is not.",
                "type": "Boolean"
            },
            "error": "GlobalizationError.UNKNOWN_ERROR\n\nExample\n   globalization.isDayLightSavingsTime(new Date(),\n               function (date) {alert('dst:' + date.dst + '\\n');}\n               function () {});",
            "class": "PKObject"
        },
        {
            "file": "demo/merges/ios/cordova.js",
            "line": 4842,
            "description": "Returns the first day of the week according to the client's user preferences and calendar.\nThe days of the week are numbered starting from 1 where 1 is considered to be Sunday.\nIt returns the day to the successCB callback with a properties object as a parameter.\nIf there is an error obtaining the pattern, then the errorCB callback is invoked.",
            "params": [
                {
                    "name": "successCB",
                    "description": "",
                    "type": "Function"
                },
                {
                    "name": "errorCB",
                    "description": "",
                    "type": "Function"
                }
            ],
            "return": {
                "description": "Object.value : The number of the first day of the week.",
                "type": "Number"
            },
            "error": "GlobalizationError.UNKNOWN_ERROR\n\nExample\n   globalization.getFirstDayOfWeek(function (day)\n               { alert('Day:' + day.value + '\\n');},\n               function () {});",
            "class": "PKObject"
        },
        {
            "file": "demo/merges/ios/cordova.js",
            "line": 4866,
            "description": "Returns a number formatted as a string according to the client's user preferences.\nIt returns the formatted number string to the successCB callback with a properties object as a\nparameter. If there is an error formatting the number, then the errorCB callback is invoked.\n\nThe defaults are: type=\"decimal\"",
            "params": [
                {
                    "name": "number",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "successCB",
                    "description": "",
                    "type": "Function"
                },
                {
                    "name": "errorCB",
                    "description": "",
                    "type": "Function"
                },
                {
                    "name": "options",
                    "description": "{optional}\n           type {String}: 'decimal', \"percent\", or 'currency'",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "Object.value : The formatted number string.",
                "type": "String"
            },
            "error": "GlobalizationError.FORMATTING_ERROR\n\nExample\n   globalization.numberToString(3.25,\n               function (number) {alert('number:' + number.value + '\\n');},\n               function () {},\n               {type:'decimal'});",
            "class": "PKObject"
        },
        {
            "file": "demo/merges/ios/cordova.js",
            "line": 4894,
            "description": "Parses a number formatted as a string according to the client's user preferences and\nreturns the corresponding number. It returns the number to the successCB callback with a\nproperties object as a parameter. If there is an error parsing the number string, then\nthe errorCB callback is invoked.\n\nThe defaults are: type=\"decimal\"",
            "params": [
                {
                    "name": "numberString",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "successCB",
                    "description": "",
                    "type": "Function"
                },
                {
                    "name": "errorCB",
                    "description": "",
                    "type": "Function"
                },
                {
                    "name": "options",
                    "description": "{optional}\n           type {String}: 'decimal', \"percent\", or 'currency'",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "Object.value : The parsed number.",
                "type": "Number"
            },
            "error": "GlobalizationError.PARSING_ERROR\n\nExample\n   globalization.stringToNumber('1234.56',\n               function (number) {alert('Number:' + number.value + '\\n');},\n               function () { alert('Error parsing number');});",
            "class": "PKObject"
        },
        {
            "file": "demo/merges/ios/cordova.js",
            "line": 4922,
            "description": "Returns a pattern string for formatting and parsing numbers according to the client's user\npreferences. It returns the pattern to the successCB callback with a properties object as a\nparameter. If there is an error obtaining the pattern, then the errorCB callback is invoked.\n\nThe defaults are: type=\"decimal\"",
            "params": [
                {
                    "name": "successCB",
                    "description": "",
                    "type": "Function"
                },
                {
                    "name": "errorCB",
                    "description": "",
                    "type": "Function"
                },
                {
                    "name": "options",
                    "description": "{optional}\n           type {String}: 'decimal', \"percent\", or 'currency'",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "Object.pattern : The number pattern for formatting and parsing numbers.\n                                   The patterns follow Unicode Technical Standard #35.\n                                   http://unicode.org/reports/tr35/tr35-4.html\n           Object.symbol {String}: The symbol to be used when formatting and parsing\n                                   e.g., percent or currency symbol.\n           Object.fraction {Number}: The number of fractional digits to use when parsing and\n                                   formatting numbers.\n           Object.rounding {Number}: The rounding increment to use when parsing and formatting.\n           Object.positive {String}: The symbol to use for positive numbers when parsing and formatting.\n           Object.negative: {String}: The symbol to use for negative numbers when parsing and formatting.\n           Object.decimal: {String}: The decimal symbol to use for parsing and formatting.\n           Object.grouping: {String}: The grouping symbol to use for parsing and formatting.",
                "type": "String"
            },
            "error": "GlobalizationError.PATTERN_ERROR\n\nExample\n   globalization.getNumberPattern(\n               function (pattern) {alert('Pattern:' + pattern.pattern + '\\n');},\n               function () {});",
            "class": "PKObject"
        },
        {
            "file": "demo/merges/ios/cordova.js",
            "line": 4959,
            "description": "Returns a pattern string for formatting and parsing currency values according to the client's\nuser preferences and ISO 4217 currency code. It returns the pattern to the successCB callback with a\nproperties object as a parameter. If there is an error obtaining the pattern, then the errorCB\ncallback is invoked.",
            "params": [
                {
                    "name": "currencyCode",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "successCB",
                    "description": "",
                    "type": "Function"
                },
                {
                    "name": "errorCB",
                    "description": "",
                    "type": "Function"
                }
            ],
            "return": {
                "description": "Object.pattern : The currency pattern for formatting and parsing currency values.\n                                   The patterns follow Unicode Technical Standard #35\n                                   http://unicode.org/reports/tr35/tr35-4.html\n           Object.code {String}: The ISO 4217 currency code for the pattern.\n           Object.fraction {Number}: The number of fractional digits to use when parsing and\n                                   formatting currency.\n           Object.rounding {Number}: The rounding increment to use when parsing and formatting.\n           Object.decimal: {String}: The decimal symbol to use for parsing and formatting.\n           Object.grouping: {String}: The grouping symbol to use for parsing and formatting.",
                "type": "String"
            },
            "error": "GlobalizationError.FORMATTING_ERROR\n\nExample\n   globalization.getCurrencyPattern('EUR',\n               function (currency) {alert('Pattern:' + currency.pattern + '\\n');}\n               function () {});",
            "class": "PKObject"
        },
        {
            "file": "demo/merges/ios/cordova.js",
            "line": 5024,
            "description": "Provides iOS Contact.display API.",
            "class": "PKObject"
        },
        {
            "file": "demo/merges/ios/cordova.js",
            "line": 5076,
            "description": "create a nice string for an object",
            "class": "PKObject"
        },
        {
            "file": "demo/merges/ios/cordova.js",
            "line": 5096,
            "description": "Wrapper one of the console logging methods, so that\nthe Cordova logging native is called, then the original.",
            "class": "PKObject"
        },
        {
            "file": "demo/merges/ios/cordova.js",
            "line": 5153,
            "description": "Provides iOS enhanced contacts API.",
            "class": "PKObject"
        },
        {
            "file": "demo/merges/ios/cordova.js",
            "line": 5272,
            "description": "Logging levels",
            "class": "PKObject"
        },
        {
            "file": "demo/merges/ios/cordova.js",
            "line": 5298,
            "description": "Getter/Setter for the logging level\n\nReturns the current logging level.\n\nWhen a value is passed, sets the logging level to that value.\nThe values should be one of the following constants:\n   logger.LOG\n   logger.ERROR\n   logger.WARN\n   logger.INFO\n   logger.DEBUG\n\nThe value used determines which messages get printed.  The logging\nvalues above are in order, and only messages logged at the logging\nlevel or above will actually be displayed to the user.  E.g., the\ndefault level is WARN, so only messages logged with LOG, ERROR, or\nWARN will be displayed; INFO and DEBUG messages will be ignored.",
            "class": "PKObject"
        },
        {
            "file": "demo/merges/ios/cordova.js",
            "line": 5328,
            "description": "Getter/Setter for the useConsole functionality\n\nWhen useConsole is true, the logger will log via the\nbrowser 'console' object.  Otherwise, it will use the\nnative Logger plugin.",
            "class": "PKObject"
        },
        {
            "file": "demo/merges/ios/cordova.js",
            "line": 5357,
            "description": "Logs a message at the LOG level.\n\nParameters passed after message are used applied to\nthe message with utils.format()",
            "class": "PKObject"
        },
        {
            "file": "demo/merges/ios/cordova.js",
            "line": 5365,
            "description": "Logs a message at the ERROR level.\n\nParameters passed after message are used applied to\nthe message with utils.format()",
            "class": "PKObject"
        },
        {
            "file": "demo/merges/ios/cordova.js",
            "line": 5373,
            "description": "Logs a message at the WARN level.\n\nParameters passed after message are used applied to\nthe message with utils.format()",
            "class": "PKObject"
        },
        {
            "file": "demo/merges/ios/cordova.js",
            "line": 5381,
            "description": "Logs a message at the INFO level.\n\nParameters passed after message are used applied to\nthe message with utils.format()",
            "class": "PKObject"
        },
        {
            "file": "demo/merges/ios/cordova.js",
            "line": 5389,
            "description": "Logs a message at the DEBUG level.\n\nParameters passed after message are used applied to\nthe message with utils.format()",
            "class": "PKObject"
        },
        {
            "file": "demo/merges/ios/cordova.js",
            "line": 5403,
            "description": "Logs a message at the specified level.\n\nParameters passed after message are used applied to\nthe message with utils.format()",
            "class": "PKObject"
        },
        {
            "file": "demo/merges/ios/cordova.js",
            "line": 5508,
            "description": "Get connection info",
            "params": [
                {
                    "name": "successCallback",
                    "description": "The function to call when the Connection data is available",
                    "type": "Function"
                },
                {
                    "name": "errorCallback",
                    "description": "The function to call when there is an error getting the Connection data. (OPTIONAL)",
                    "type": "Function"
                }
            ],
            "class": "PKObject"
        },
        {
            "file": "demo/merges/ios/cordova.js",
            "line": 5576,
            "description": "Provides access to notifications on the device.",
            "class": "PKObject"
        },
        {
            "file": "demo/merges/ios/cordova.js",
            "line": 5582,
            "description": "Open a native alert dialog, with a customizable title and button text.",
            "params": [
                {
                    "name": "message",
                    "description": "Message to print in the body of the alert",
                    "type": "String"
                },
                {
                    "name": "completeCallback",
                    "description": "The callback that is called when user clicks on a button.",
                    "type": "Function"
                },
                {
                    "name": "title",
                    "description": "Title of the alert dialog (default: Alert)",
                    "type": "String"
                },
                {
                    "name": "buttonLabel",
                    "description": "Label of the close button (default: OK)",
                    "type": "String"
                }
            ],
            "class": "PKObject"
        },
        {
            "file": "demo/merges/ios/cordova.js",
            "line": 5596,
            "description": "Open a native confirm dialog, with a customizable title and button text.\nThe result that the user selects is returned to the result callback.",
            "params": [
                {
                    "name": "message",
                    "description": "Message to print in the body of the alert",
                    "type": "String"
                },
                {
                    "name": "resultCallback",
                    "description": "The callback that is called when user clicks on a button.",
                    "type": "Function"
                },
                {
                    "name": "title",
                    "description": "Title of the alert dialog (default: Confirm)",
                    "type": "String"
                },
                {
                    "name": "buttonLabels",
                    "description": "Comma separated list of the labels of the buttons (default: 'OK,Cancel')",
                    "type": "String"
                }
            ],
            "class": "PKObject"
        },
        {
            "file": "demo/merges/ios/cordova.js",
            "line": 5611,
            "description": "Causes the device to vibrate.",
            "params": [
                {
                    "name": "mills",
                    "description": "The number of milliseconds to vibrate for.",
                    "type": "Integer"
                }
            ],
            "class": "PKObject"
        },
        {
            "file": "demo/merges/ios/cordova.js",
            "line": 5620,
            "description": "Causes the device to beep.\nOn Android, the default notification ringtone is played \"count\" times.",
            "params": [
                {
                    "name": "count",
                    "description": "The number of beeps.",
                    "type": "Integer"
                }
            ],
            "class": "PKObject"
        },
        {
            "file": "demo/merges/ios/cordova.js",
            "line": 5652,
            "description": "Request a file system in which to store application data.",
            "params": [
                {
                    "name": "type",
                    "description": "local file system type"
                },
                {
                    "name": "size",
                    "description": "indicates how much storage space, in bytes, the application expects to need"
                },
                {
                    "name": "successCallback",
                    "description": "invoked with a FileSystem object"
                },
                {
                    "name": "errorCallback",
                    "description": "invoked if error occurs retrieving file system"
                }
            ],
            "class": "PKObject"
        },
        {
            "file": "demo/merges/ios/cordova.js",
            "line": 5699,
            "description": "Look up file system Entry referred to by local URI.",
            "params": [
                {
                    "name": "uri",
                    "description": "URI referring to a local file or directory",
                    "type": "DOMString"
                },
                {
                    "name": "successCallback",
                    "description": "invoked with Entry object corresponding to URI"
                },
                {
                    "name": "errorCallback",
                    "description": "invoked if error occurs retrieving file system entry"
                }
            ],
            "class": "PKObject"
        },
        {
            "file": "demo/merges/ios/cordova.js",
            "line": 5785,
            "description": "Defines a property getter / setter for obj[key].",
            "class": "PKObject"
        },
        {
            "file": "demo/merges/ios/cordova.js",
            "line": 5806,
            "description": "Defines a property getter for obj[key].",
            "class": "PKObject"
        },
        {
            "file": "demo/merges/ios/cordova.js",
            "line": 5824,
            "description": "Returns whether the item was found in the array.",
            "class": "PKObject"
        },
        {
            "file": "demo/merges/ios/cordova.js",
            "line": 5839,
            "description": "Returns an indication of whether the argument is an array or not",
            "class": "PKObject"
        },
        {
            "file": "demo/merges/ios/cordova.js",
            "line": 5846,
            "description": "Returns an indication of whether the argument is a Date or not",
            "class": "PKObject"
        },
        {
            "file": "demo/merges/ios/cordova.js",
            "line": 5853,
            "description": "Does a deep clone of the object.",
            "class": "PKObject"
        },
        {
            "file": "demo/merges/ios/cordova.js",
            "line": 5880,
            "description": "Returns a wrapped version of the function",
            "class": "PKObject"
        },
        {
            "file": "demo/merges/ios/cordova.js",
            "line": 5895,
            "description": "Create a UUID",
            "class": "PKObject"
        },
        {
            "file": "demo/merges/ios/cordova.js",
            "line": 5906,
            "description": "Extends a child object from a parent object using classical inheritance\npattern.",
            "class": "PKObject"
        },
        {
            "file": "demo/merges/ios/cordova.js",
            "line": 5922,
            "description": "Alerts a message in any available way: alert or console.log.",
            "class": "PKObject"
        },
        {
            "file": "demo/merges/ios/cordova.js",
            "line": 5933,
            "description": "Formats a string and arguments following it ala sprintf()\n\nsee utils.vformat() for more information",
            "class": "PKObject"
        },
        {
            "file": "demo/merges/ios/cordova.js",
            "line": 5943,
            "description": "Formats a string and arguments following it ala vsprintf()\n\nformat chars:\n  %j - format arg as JSON\n  %o - format arg as JSON\n  %c - format arg as ''\n  %% - replace with '%'\nany other char following % will format it's\narg via toString().\n\nfor rationale, see FireBug's Console API:\n   http://getfirebug.com/wiki/index.php/Console_API",
            "class": "PKObject"
        },
        {
            "file": "demo/merges/ios/cordova.js",
            "line": 6043,
            "description": "Create all cordova objects once page has fully loaded and native side is ready.",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/android/assets/www/framework/PKObject.js",
            "line": 1,
            "description": "BASE PKOBJECT\n\n*****************************************************************************\nThe Object class provides the top object that all other objects inherit\n from. This provides object inheritance via a subclass/superclass mechanism\n without having to worry about prototype or constructor inheritance.\nPKObjects provide simple subclassing and a limited form of KVO in the form\n of tags and tag listeners.",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/android/assets/www/framework/PKObject.js",
            "line": 38,
            "description": "We need a way to provide inheritance. Most methods only provide\n inheritance across the constructor chain, not across any possible\n method. But for our purposes, we need to be able to provide for\n overriding any method (such as drawing, touch responses, etc.),\n and so we implement inheritance in a different way.\nFirst, the _classHierarchy, a private property, provides the\n inheritance tree. All objects inherit from \"Object\".",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/android/assets/www/framework/PKObject.js",
            "line": 52,
            "description": "Objects are subclassed using this method. The newClass is the\n unique class name of the object (and should match the class'\n actual name.",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/android/assets/www/framework/PKObject.js",
            "line": 64,
            "description": "getClass returns the current class of the object. The\n \"class\" property can be used as well. Note that there\n is no \"setter\" for this property; an object's class\n can *not* be changed.",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/android/assets/www/framework/PKObject.js",
            "line": 78,
            "description": "Returns the super class for the given class. If the\n class is not supplied, the class is assumed to be the\n object's own class.\nThe property \"superClass\" uses this to return the\n object's direct superclass, but getSuperClassOfClass\n can be used to determine superclasses higher up\n the hierarchy.",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/android/assets/www/framework/PKObject.js",
            "line": 105,
            "description": "_super is an object that stores overridden functions by class and method\n name. This is how we get the ability to arbitrarily override any method\n already present in the superclass.",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/android/assets/www/framework/PKObject.js",
            "line": 114,
            "description": "Must be called prior to defining the overridden function as this moves\n the original function into the _super object. The functionName must\n match the name of the method exactly, since there may be a long tree\n of code that depends on it.",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/android/assets/www/framework/PKObject.js",
            "line": 132,
            "description": "Calls a super function with up to 10 arguments.",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/android/assets/www/framework/PKObject.js",
            "line": 151,
            "description": "initializes the object",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/android/assets/www/framework/PKObject.js",
            "line": 161,
            "description": "Objects have some properties that we want all objects to have...",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/android/assets/www/framework/PKObject.js",
            "line": 210,
            "description": "All objects subject notifications for events",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/android/assets/www/framework/PKObject.js",
            "line": 256,
            "description": "//http://stackoverflow.com/a/11462081\nfunction clone(obj){\n    var clonedObjectsArray = [];\n    var originalObjectsArray = []; //used to remove the unique ids when finished\n    var next_objid = 0;\n\n    function objectId(obj) {\n        if (obj == null) return null;\n        if (obj.__obj_id == undefined){\n            obj.__obj_id = next_objid++;\n            originalObjectsArray[obj.__obj_id] = obj;\n        }\n        return obj.__obj_id;\n    }\n\n    function cloneRecursive(obj) {\n        if (null == obj || typeof obj == \"string\" || typeof obj == \"number\" || typeof obj == \"boolean\") return obj;\n\n        // Handle Date\n        if (obj instanceof Date) {\n            var copy = new Date();\n            copy.setTime(obj.getTime());\n            return copy;\n        }\n\n        // Handle Array\n        if (obj instanceof Array) {\n            var copy = [];\n            for (var i = 0; i < obj.length; ++i) {\n                copy[i] = cloneRecursive(obj[i]);\n            }\n            return copy;\n        }\n\n        // Handle Object\n        if (obj instanceof Object) {\n            if (clonedObjectsArray[objectId(obj)] != undefined)\n                return clonedObjectsArray[objectId(obj)];\n\n            var copy;\n            if (obj instanceof Function)//Handle Function\n                copy = function(){return obj.apply(this, arguments);};\n            else\n                copy = {};\n\n            clonedObjectsArray[objectId(obj)] = copy;\n\n            for (var attr in obj)\n                if (attr != \"__obj_id\" && obj.hasOwnProperty(attr))\n                    copy[attr] = cloneRecursive(obj[attr]);                 \n\n            return copy;\n        }       \n\n\n        throw new Error(\"Unable to copy obj! Its type isn't supported.\");\n    }\n    var cloneObj = cloneRecursive(obj);\n\n\n\n    //remove the unique ids\n    for (var i = 0; i < originalObjectsArray.length; i++)\n    {\n        delete originalObjectsArray[i].__obj_id;\n    };\n\n    return cloneObj;\n}",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/android/assets/www/framework/device.js",
            "line": 1,
            "description": "DEVICE\n Author: Kerri Shotts\nThis library includes functions that reflect the device and its current\n state",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/android/assets/www/framework/device.js",
            "line": 42,
            "description": "Returns the device platform, lowercased. If PKDEVICE.platformOverride is\n other than \"false\", it is returned instead.",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/android/assets/www/framework/device.js",
            "line": 97,
            "description": "Returns the device's form factor. Possible values are \"tablet\" and\n \"phone\". If PKDEVICE.formFactorOverride is not false, it is returned\n instead.",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/android/assets/www/framework/device.js",
            "line": 128,
            "description": "Determines if the device is in Portrait orientation.",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/android/assets/www/framework/device.js",
            "line": 137,
            "description": "Determines if the device is in Landscape orientation.",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/android/assets/www/framework/device.js",
            "line": 150,
            "description": "Determines if the device is a hiDPI device (aka retina)",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/android/assets/www/framework/fileutil.js",
            "line": 1,
            "description": "FILEUTIL\n Author: Kerri Shotts\nThis library includes routines to deal with the FILE API, (which is... a bit\n painful.) The purpose of the library is to reduce the amount of work necessary\n to go through obtaining a file system, working with directories and files,\n etc. That isn't to say that we can eliminate callbacks or even callback\n chaining -- but it is significantly easier without all the intervening cruft,\n which is essentially (for all intents and purposes) boilerplate.\nIMPORTANT NOTE:\nThis library provides various conveniences that make referencing persistent\n and temporary storage a bit easier as well. For example, you can use a\n path like the following:\n    doc://photo.jpg   -->   /some/gobbledygook/yourApp/Documents/photo.jpg\n     tmp://photo.jpg   -->   /some/gobbledygook/yourApp/tmp/photo.jpg\nSeveral APIs (such as camera capture) may also refer to paths with\n \"file://localhost\" attached. The routines will gracefully remove this so that\n the reference is a true file.\nCONVENIENCE:\nFor those who are more comfortable with *nix/BSD commands, nearly each method\n has a version that correlates to a roughly *nix name. The parameters are the\n same, however.\nMETHODS\n   copyFileTo ( source, target, success, failure )         |   cp ()\n   moveFileTo ( source, target, success, failure )         |   mv ()\n   removeFile ( theFile, success, failure )                |   rm ()\n   renameFile ( source, newName, success, failure )        |   -\n   createFileWriter ( theFile, success, failure )          |   fcreate ()\n   writeFileData ( writer, theData, success, failure )     |   fwrite ()\nPLANNED METHODS\n  getListing ( path, filters, success, failure )          |    ls ()\n   createDirectory ( path, newDirectory, success, failure )|    mkdir()\n   removeDirectory ( path, theDirectory, success, failure )|    rmdir()\n   createFileReader ( theFile, success, failure )          |    fopen()\n   readFileData ( reader, success, failure )               |    fread()",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/android/assets/www/framework/fileutil.js",
            "line": 101,
            "description": "Determines the persistent and temporary file systems prior\n to file operations. While it's unlikely that these will\n change during application execution, it certainly doesn't\n hurt to re-read them whenever possible (just in case!).\nWhen both are read, the success method is called. If we\n can't obtain one or the other, the failure method is called.",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/android/assets/www/framework/fileutil.js",
            "line": 140,
            "description": "Handles substition strings within a file path.\n doc:/ translates to the persistent storage. We don't use \"//\" here\n        since the persistentFS doesn't have a trailing \"/\", so we leave\n        that in the original.\n  tmp:/ translates to the temporary storage.\n  file://localhost translates to nothing.",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/android/assets/www/framework/fileutil.js",
            "line": 159,
            "description": "Copies the file identified by @source to the file identified by @target.\n If the copy is successful, success() is called. If not, failure() is\n called.\nThe target will generally be of the form \"doc://filename\", but it can\n be any path and file name that the application has access to.\nNOTE: Copying will fail if the target exists.",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/android/assets/www/framework/fileutil.js",
            "line": 193,
            "description": "*nix convenience method.",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/android/assets/www/framework/fileutil.js",
            "line": 203,
            "description": "Moves the file identified by @source to the file identified by @target.\n If the move is successful, success() is called. If not, failure() is\n called.\nThe target will generally be of the form \"doc://filename\", but it can\n be any path and file name that the application has access to.\nNOTE: The move will overwrite the target if it exists.",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/android/assets/www/framework/fileutil.js",
            "line": 237,
            "description": "Convenience method that allows renaming a file in the same\n directory as the source. The source's path will prepended\n to the new name.\nNOTE: The move will overwrite the target if it exists.",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/android/assets/www/framework/fileutil.js",
            "line": 252,
            "description": "*nix convenience method.",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/android/assets/www/framework/fileutil.js",
            "line": 262,
            "description": "Removes the file identified by @theFile. The full path must\n be specified.",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/android/assets/www/framework/fileutil.js",
            "line": 283,
            "description": "*nix convenience method.",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/android/assets/www/framework/fileutil.js",
            "line": 293,
            "description": "Creates a fileWriter for @theFile. If successful, it will\n call success() with the created writer. If unsuccessful, it\n will call failure().\nOnce in success(), writeFileData() may be used to finish\n the writing of data to the file.\nNote: if the file exists, it will be overwritten.",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/android/assets/www/framework/fileutil.js",
            "line": 320,
            "description": "*nix convenience method.",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/android/assets/www/framework/fileutil.js",
            "line": 330,
            "description": "Writes @theData to the specified writer. When complete,\n success() will be called. If it fails, failure().",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/android/assets/www/framework/fileutil.js",
            "line": 343,
            "description": "*nix convenience method.",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/android/assets/www/framework/localization.js",
            "line": 2,
            "description": "localization.js\n Author: Kerri Shotts\nProvides simple localization, as described in Chapter 1 of PhoneGap HotShot.\nRelies on JQuery/Globalize.js, as found at https://github.com/jquery/globalize",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/android/assets/www/framework/localization.js",
            "line": 49,
            "description": "Loads the JQuery Globalize script from the framework directory\n as well as the underlying cultures definitions.",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/android/assets/www/framework/localization.js",
            "line": 59,
            "description": "Loads the appropriate locale from the JQuery Globalize script.",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/android/assets/www/framework/localization.js",
            "line": 72,
            "description": "Sets the current locale for the JQuery Globalize script.",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/android/assets/www/framework/localization.js",
            "line": 81,
            "description": "Add a translation to the existing translation matrix",
            "params": [
                {
                    "name": "locale:",
                    "description": "the locale for which to add the translation"
                },
                {
                    "name": "key:",
                    "description": "the key for the translation (generally the word or phrase)"
                },
                {
                    "name": "value:",
                    "description": "the translated value."
                }
            ],
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/android/assets/www/framework/localization.js",
            "line": 103,
            "description": "Return the user's locale (e.g., en-US or fr-FR)\n for proper localization.",
            "return": {
                "description": "the user's current locale. If one can't be\n found, \"en-US\" is returned."
            },
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/android/assets/www/framework/localization.js",
            "line": 177,
            "description": "Convenience function for translating text.",
            "params": [
                {
                    "name": "key:",
                    "description": "the text to translate. Case doesn't matter."
                },
                {
                    "name": "locale:",
                    "description": "the locale to use for translation. If not defined, defaults\n                    to the user's current locale."
                },
                {
                    "name": "parms:",
                    "description": "(optional) An indexed array of replacement values."
                }
            ],
            "return": {
                "description": "the translated text, or the original key if no translation was found."
            },
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/android/assets/www/framework/localization.js",
            "line": 217,
            "description": "Convenience function for localizing numbers.",
            "params": [
                {
                    "name": "theNumber:",
                    "description": "the number to localize"
                },
                {
                    "name": "theFormat:",
                    "description": "the number of decimal places to use. Defaults to \"n\" if not supplied"
                },
                {
                    "name": "theLocale:",
                    "description": "(optional) the locale. If not specified, current locale is assumed."
                }
            ],
            "return": {
                "description": "the number formatted according to the locale. If the number of digits after\n the decimal point is less than the actual number of digits, rounding is performed. If\n the number of digits is more than the actual number of digits, zeroes are added."
            },
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/android/assets/www/framework/localization.js",
            "line": 241,
            "description": "Convenience function for localizing currency.",
            "params": [
                {
                    "name": "theNumber:",
                    "description": "the number to localize"
                },
                {
                    "name": "theFormat:",
                    "description": "the number of decimal places, defaults to two if not specified"
                },
                {
                    "name": "theLocale:",
                    "description": "(optional) the locale. If not specified, current locale is assumed."
                }
            ],
            "return": {
                "description": "the number formatted according to the locale's currency. If the number of digits after\n the decimal point is less than the actual number of digits, rounding is performed. If\n the number of digits is more than the actual number of digits, zeroes are added."
            },
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/android/assets/www/framework/localization.js",
            "line": 264,
            "description": "Convenience function for localizing percentages.",
            "params": [
                {
                    "name": "theNumber:",
                    "description": "the number to localize"
                },
                {
                    "name": "theFormat:",
                    "description": "the number of decimal places, defaults to two if not specified"
                },
                {
                    "name": "theLocale:",
                    "description": "(optional) the locale. If not specified, current locale is assumed."
                }
            ],
            "return": {
                "description": "the number formatted according to the locale's percent settings."
            },
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/android/assets/www/framework/localization.js",
            "line": 285,
            "description": "Convenience function for localizing dates.",
            "params": [
                {
                    "name": "theDate:",
                    "description": "the date to localize"
                },
                {
                    "name": "theFormat:",
                    "description": "(optional) The format of the date; \"d\" is assumed if not provided."
                },
                {
                    "name": "theLocale:",
                    "description": "(optional) the locale. If not specified, current locale is assumed."
                }
            ],
            "return": {
                "description": "the date formatted according to the locale's settings."
            },
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/android/assets/www/framework/pk-object.js",
            "line": 1,
            "description": "BASE PKOBJECT\n\n*****************************************************************************\nThe Object class provides the top object that all other objects inherit\n from. This provides object inheritance via a subclass/superclass mechanism\n without having to worry about prototype or constructor inheritance.\nPKObjects provide simple subclassing and a limited form of KVO in the form\n of tags and tag listeners.",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/android/assets/www/framework/pk-object.js",
            "line": 42,
            "description": "We need a way to provide inheritance. Most methods only provide\n inheritance across the constructor chain, not across any possible\n method. But for our purposes, we need to be able to provide for\n overriding any method (such as drawing, touch responses, etc.),\n and so we implement inheritance in a different way.\nFirst, the _classHierarchy, a private property, provides the\n inheritance tree. All objects inherit from \"Object\".",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/android/assets/www/framework/pk-object.js",
            "line": 56,
            "description": "Objects are subclassed using this method. The newClass is the\n unique class name of the object (and should match the class'\n actual name.",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/android/assets/www/framework/pk-object.js",
            "line": 68,
            "description": "getClass returns the current class of the object. The\n \"class\" property can be used as well. Note that there\n is no \"setter\" for this property; an object's class\n can *not* be changed.",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/android/assets/www/framework/pk-object.js",
            "line": 82,
            "description": "Returns the super class for the given class. If the\n class is not supplied, the class is assumed to be the\n object's own class.\nThe property \"superClass\" uses this to return the\n object's direct superclass, but getSuperClassOfClass\n can be used to determine superclasses higher up\n the hierarchy.",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/android/assets/www/framework/pk-object.js",
            "line": 109,
            "description": "_super is an object that stores overridden functions by class and method\n name. This is how we get the ability to arbitrarily override any method\n already present in the superclass.",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/android/assets/www/framework/pk-object.js",
            "line": 118,
            "description": "Must be called prior to defining the overridden function as this moves\n the original function into the _super object. The functionName must\n match the name of the method exactly, since there may be a long tree\n of code that depends on it.",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/android/assets/www/framework/pk-object.js",
            "line": 136,
            "description": "Calls a super function with up to 10 arguments.",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/android/assets/www/framework/pk-object.js",
            "line": 155,
            "description": "initializes the object",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/android/assets/www/framework/pk-object.js",
            "line": 165,
            "description": "Objects have some properties that we want all objects to have...",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/android/assets/www/framework/pk-object.js",
            "line": 214,
            "description": "All objects subject notifications for events",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/android/assets/www/framework/pk-object.js",
            "line": 261,
            "description": "//http://stackoverflow.com/a/11462081\nfunction clone(obj){\n    var clonedObjectsArray = [];\n    var originalObjectsArray = []; //used to remove the unique ids when finished\n    var next_objid = 0;\n\n    function objectId(obj) {\n        if (obj == null) return null;\n        if (obj.__obj_id == undefined){\n            obj.__obj_id = next_objid++;\n            originalObjectsArray[obj.__obj_id] = obj;\n        }\n        return obj.__obj_id;\n    }\n\n    function cloneRecursive(obj) {\n        if (null == obj || typeof obj == \"string\" || typeof obj == \"number\" || typeof obj == \"boolean\") return obj;\n\n        // Handle Date\n        if (obj instanceof Date) {\n            var copy = new Date();\n            copy.setTime(obj.getTime());\n            return copy;\n        }\n\n        // Handle Array\n        if (obj instanceof Array) {\n            var copy = [];\n            for (var i = 0; i < obj.length; ++i) {\n                copy[i] = cloneRecursive(obj[i]);\n            }\n            return copy;\n        }\n\n        // Handle Object\n        if (obj instanceof Object) {\n            if (clonedObjectsArray[objectId(obj)] != undefined)\n                return clonedObjectsArray[objectId(obj)];\n\n            var copy;\n            if (obj instanceof Function)//Handle Function\n                copy = function(){return obj.apply(this, arguments);};\n            else\n                copy = {};\n\n            clonedObjectsArray[objectId(obj)] = copy;\n\n            for (var attr in obj)\n                if (attr != \"__obj_id\" && obj.hasOwnProperty(attr))\n                    copy[attr] = cloneRecursive(obj[attr]);                 \n\n            return copy;\n        }       \n\n\n        throw new Error(\"Unable to copy obj! Its type isn't supported.\");\n    }\n    var cloneObj = cloneRecursive(obj);\n\n\n\n    //remove the unique ids\n    for (var i = 0; i < originalObjectsArray.length; i++)\n    {\n        delete originalObjectsArray[i].__obj_id;\n    };\n\n    return cloneObj;\n}",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/android/assets/www/framework/scroller.js",
            "line": 1,
            "description": "SCROLLER\n Author:  Kerri Shotts\n Version: 0.1 alpha\n License: MIT\nThis library is intended to be similar to iScroll-lite in that it should be\n a relatively fast method of scrolling content without being horribly laggy\n or cause incorrect \"clicks\" to be registered.\nThis library does *NOT* support physics-based scrolling, except for a small\n inertia animation at the end of a scroll. It is not intended to replicate\n native scrolling /at all/. There are no bounces at the top or bottom. There\n is no visible scroll bar either. Essentially, overflow:scroll as supported\n on iOS 5 with no bounce/inertia scrolling.\nConsider this library an experiment. The idea is to be simpler than iScroll\n to use -- for example, the scroller only needs to be created once -- it does\n not need to be refreshed when AJAX content loads. It is intended to be at\n least as fast as iScroll, if not a little faster. It is not, however,\n intended to be a native scrolling solution. At this time, I do not believe\n it truly possible or practice, and users will notice any non-native solution\n that tries to match, so why try?\nUsage:\nvar yourScroller = new SCROLLER.GenericScroller ( \"the_element_to_scroll\" );\nwhere you have the following DOM tree:\n    container_element\n     - the_element_to_scroll\nFuture Goals:\n - Detect native physics scrolling and use it when possible\n  - Detect native overflow:scroll (non-physics) and use it when possible\n  - Improve the inertial scrolling at end (this is a very rough implementation)\n  - Become irrelevant. I hope for a day when all mobile browsers can scroll\n    complex content natively and smoothly.\nSupported Platforms:\n - Android 2.3+\n  - iOS 4.3+\n  - probably any webkit browser?\nKnown Issues:\n  - A little too willing to call a scroll a \"click\".",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/android/assets/www/framework/scroller.js",
            "line": 107,
            "description": "Attaches the scroller to a new element. The element MUST be contained within\n another element that can support the setting of scrollTop/Left.\nAny overflow values will be overridden. Any webkit transforms may also be\n overridden.",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/android/assets/www/framework/scroller.js",
            "line": 148,
            "description": "Get the scroll position",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/android/assets/www/framework/scroller.js",
            "line": 161,
            "description": "Scroll to a given location. If the location can't be scrolled to,\n the nearest location will be used.",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/android/assets/www/framework/scroller.js",
            "line": 174,
            "description": "touchStart initializes all our values when a touch is received.",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/android/assets/www/framework/scroller.js",
            "line": 204,
            "description": "When a touch moves, we'll receive the event here.",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/android/assets/www/framework/scroller.js",
            "line": 238,
            "description": "When a finger is lifted from the screen, we'll get this event.\n We can determine whether or not it was a click if we scrolled at all,\n and if we scrolled a certain distance, we'll do a little inertial\n scrolling",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/android/assets/www/framework/ui-base.js",
            "line": 1,
            "description": "UI-BASE\n Author: Kerri Shotts\n Version: 0.3\nThis provides the basics of the UI model, including poings, rects, and more.",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/android/assets/www/framework/ui-base.js",
            "line": 37,
            "description": "Points are of the form { x: #, y: # }",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/android/assets/www/framework/ui-base.js",
            "line": 50,
            "description": "offsets a point by the values in another point. For example,\n if pointA = { x:100, y:100 } and pointB = { x:-5, y:10 }, the\n returned point will be { x:95, y:110 }.",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/android/assets/www/framework/ui-base.js",
            "line": 62,
            "description": "Sizes are similar to points, but they are of the form\n { w: width, h: height }",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/android/assets/www/framework/ui-base.js",
            "line": 89,
            "description": "Rects are of the form { origin: point, size: size }, or\n { origin: {x: #, y: #}, size: {w: width, h: height} }",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/android/assets/www/framework/ui-base.js",
            "line": 105,
            "description": "Offsets a rect's origin point by the supplied point.",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/android/assets/www/framework/ui-base.js",
            "line": 115,
            "description": "Offsets a rect's origin by the origin of the second rect,\n and offsets the rect's size by the size of the second rect.\nThis implies that the second rect does not need to be \"real\",\n as in, it can have negative sizes and such.",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/android/assets/www/framework/ui-base.js",
            "line": 130,
            "description": "Returns true if the two rects supplied intersect. Note that this\n will not work if the rectangles are non-canonical.",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/android/assets/www/framework/ui-base.js",
            "line": 155,
            "description": "Think of these as constants, except you have to call them like a \n method.\nzeroPoint() returns a point of {0,0}\n zeroSize() returns a size of {0,0}\n zeroRect() returns a rect of { {0,0}, {0,0} }\n screenSize() returns a **point** representing the size of the screen (or browser).\n screenBounds() returns a **rect** representing the size of the screen (with a {0,0} origin).",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/android/assets/www/framework/ui-base.js",
            "line": 173,
            "description": "fonts",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/android/assets/www/framework/ui-base.js",
            "line": 237,
            "description": "Shadows",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/android/assets/www/framework/ui-base.js",
            "line": 314,
            "description": "Colors",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/android/assets/www/framework/ui-base.js",
            "line": 361,
            "description": "Images",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/android/assets/www/framework/ui-base.js",
            "line": 458,
            "description": "borders",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/android/assets/www/framework/ui-base.js",
            "line": 554,
            "description": "events",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/android/assets/www/framework/ui-core.js",
            "line": 1,
            "description": "UI-CORE\n Author: Kerri Shotts\nThis script provides a lot of the core user interface framework, such as\n loading content via AJAX, transitions, and more.",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/android/assets/www/framework/ui-core.js",
            "line": 84,
            "description": "Global back button handler, since doing it per-view and per-\n message is buggy. This will call backButtonPressed() on any\n active message or view. If said method isn't found, it will\n pop the view on its own.\nNOTE: if backButtonPressed() is defined, it is expected to\n pop the view, if the method is also a view. If the view is\n not popped, the back button will have no effect.\nSECOND NOTE: Since back buttons received in quick succession\n are problematic, we force the user to wait 1s before the next\n back button is accepted.",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/android/assets/www/framework/ui-core.js",
            "line": 129,
            "description": "Initializes the application framework\n  - in this version of the framework, we force an orientation update.\n  - by default, we attach a global back button handler\n  - we deisable animations and transforms for Android and WP7.",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/android/assets/www/framework/ui-core.js",
            "line": 177,
            "description": "Called on first-start and whenever the orientation changes. It updates the\n body's class to reflect the device, formfactor, orientation, and scaling.",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/android/assets/www/framework/ui-core.js",
            "line": 261,
            "description": "Shows a view and pushes it on the viewStack. NO ANIMATION.\n DOES NOT PROPERLY CALL viewWillHide/viewDidHide of any view, since there\n may be no view visible.",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/android/assets/www/framework/ui-core.js",
            "line": 288,
            "description": "Hides a view and pops it off the viewStack. NO ANIMATION.\n DOES NOT ATTEMPT TO CALL viewWillShow or viewDidShow of any view\n on the stack, as there may not be any view visible.",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/android/assets/www/framework/ui-core.js",
            "line": 314,
            "description": "Swaps a view on the stack with the desired view. NO ANIMATION.",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/android/assets/www/framework/ui-core.js",
            "line": 505,
            "description": "Shows a view WITH ANIMATION and pushes it onto the view stack.\n The animation is a slide from right to left.",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/android/assets/www/framework/ui-core.js",
            "line": 664,
            "description": "Hides a view WITH ANIMATION and pops it from the stack.",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/android/assets/www/framework/ui-core.js",
            "line": 924,
            "description": "Applies touch listeners to various items in the dom.\nIn this version of the framework, we apply it to BUTTONs.",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/android/assets/www/framework/ui-gestures.js",
            "line": 1,
            "description": "UI-GESTURES\n Author:  Kerri Shotts\n Version: 0.1 alpha\n License: MIT\nA simple, no-frills gesture recognizer. Permits long-press recognition,\n horizontal swipe recognition, and vertical swipe recognition. Recognizing\n swipes in a particular direction (left, right, up, down) should be easy to\n add later.\nThe SimpleGesture class represents the basic recognizer -- it implements all\n the tracking of touch and mouse events. Every 100ms it calls\n a recognition function, which by default does nothing. Essentially, Simple-\n Gesture is abstract. This method is expected to be overridden by a specific\n recognizer, which the LongPressGesture, HorizontalSwipeGesture, and\n VerticalSwipeGesture do.\nThe LongPressGesture will fire off an event when a longpress is recognized.\n How this is recognized is partially defined by the caller -- that is,\n two durations can be supplied. By default, the long-press is recognized at\n 1s and cancelled at 3s (assuming no previous recognition). It is also\n cancelled should any movement outside of a 25px radius occur.\nThe HorizontalSwipeGesture and VerticalSwipeGesture will fire off an event\n when a swipe in the given axis is detected. This swipe is detected when the\n length of the swipe exceeds 75px (or the provided override), and will be\n fired as long as the duration of the swipe is less than the cancel duration\n (3s by default). The line must not deviate by more than 25px in the specified\n axis, or the gesture will fail to be recognized.\nUsage:\nvar anElement = document.getElementById(\"abc\");\n var aLongPressGesture = new GESTURES.LongPressGesture\n                             ( anElement, theFunctionToCallWhenRecognized,\n                               [ thePressDuration, [ theCancelDelay ]] );\nvar aHorizontalSwipeGesture = new GESTURES.HorizontalSwipeGesture\n                               ( anElement, theFunctionToCallWhenRecognized,\n                                 [ theSwipeLength, [ theCancelDelay ]] );\nvar aVerticalSwipeGesture = new GESTURES.VerticalSwipeGesture\n                             ( anElement, theFunctionToCallWhenRecognized,\n                               [ theSwipeLength, [ theCancelDelay ]] );\n\nWhere: anElement is an HTML DOM element\n        theFunctionToCallWhenRecognized is a function that will be called\n            when the gesture is recognized. It will be passed the recognizer,\n            and as such, one can store & retrieve data in this manner:\n                aLongPressGesture.data = \"Hello\";\n                 function theFunctionToCallWhenRecognized ( gr )\n                 { alert (gr.data); }\n           This will generate an alert of \"Hello\" when the element is long-\n            pressed.\n       thePressDuration: Optional, defaults to 1s. The amount of time required\n            to recognize a long-press.\n        theSwipeLength: Optional, defaults to 75px. The length of a swipe\n            required to recognize a swipe.\n        theCancelDelay: Optional, defaults to 3s. If a gesture is not recognized\n            prior to this delay, the gesture is cancelled, that is, it will\n            never be recognized.",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/android/assets/www/framework/ui-label.js",
            "line": 1,
            "description": "UI-LABEL\n Author: Kerri Shotts\n Version: 0.3\nUI-LABEL provides the UI.Label object",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/android/assets/www/framework/ui-label.js",
            "line": 48,
            "description": "labels have the following properties:\n  - text (properlly innerHTML)\n  - textColor ( font Color )\n  - shadow\n  - shadowColor\n  - shadowOffset\n  - textAlignment\n  - font",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/android/assets/www/framework/ui-label.js",
            "line": 124,
            "description": "init",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/android/assets/www/framework/ui-msg.js",
            "line": 1,
            "description": "UI-MSG\n Author: Kerri Shotts\nThis script provides a mechanism by which alerts, prompts, and confirmations\n can be displayed to the end user.",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/android/assets/www/framework/ui-view.js",
            "line": 1,
            "description": "UI-VIEW\n Author: Kerri Shotts\n Version: 0.3\nUI-VIEW provides the UI.View object",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/android/assets/www/framework/ui-view.js",
            "line": 60,
            "description": "All views have direct DOM representations",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/android/assets/www/framework/ui-view.js",
            "line": 66,
            "description": "All views have subviews",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/android/assets/www/framework/ui-view.js",
            "line": 104,
            "description": "All views have bounds and frames.",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/android/assets/www/framework/ui-view.js",
            "line": 210,
            "description": "recalculates the element's position based on\n the frame. It also calls calcElement() for the\n object, if defined. After that, it calls the\n _calcElement for every subview, in case they\n decide to be re-positioned.",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/android/assets/www/framework/ui-view.js",
            "line": 263,
            "description": "Every view has a background color, even if it is transparent.",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/android/assets/www/framework/ui-view.js",
            "line": 283,
            "description": "Every view can have a background image",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/android/assets/www/framework/ui-view.js",
            "line": 302,
            "description": "Every view can also have a border",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/android/assets/www/framework/ui-view.js",
            "line": 323,
            "description": "And every view can also have multiple shadows",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/android/assets/www/framework/ui-view.js",
            "line": 352,
            "description": "Every view can be shown or hidden",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/android/assets/www/framework/ui-view.js",
            "line": 376,
            "description": "Every view has opacity",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/android/assets/www/framework/ui-view.js",
            "line": 398,
            "description": "Views can override their scrolling",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/android/assets/www/framework/ui-view.js",
            "line": 416,
            "description": "event processing",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/android/assets/www/framework/ui-view.js",
            "line": 500,
            "description": "init",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/android/assets/www/framework/utility.js",
            "line": 1,
            "description": "UTILITY\n Author: Kerri Shotts\nThis library includes simple utility functions",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/android/assets/www/framework/utility.js",
            "line": 46,
            "description": "Checks to see if the dependency has already been loaded.",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/android/assets/www/framework/utility.js",
            "line": 105,
            "description": "Returns an element specified by elementId. Similar to (but not exactly like) jQuery's $()",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/android/assets/www/framework/utility.js",
            "line": 115,
            "description": "Returns an element specified by elementId, but with localization. Localization assumes\n you have at least one element of the form <elementId_enus>, and that all other localized\n elements have the locale after the elementId appended with an underscore.\n (eg: thisElementIsLocalized_enus and thisElementIsLocalized_eses)",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/android/assets/www/framework/utility.js",
            "line": 153,
            "description": "Similar to $$. Returns all classes matching a selector.",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/android/assets/www/framework/utility.js",
            "line": 163,
            "description": "Utility function to delay execution of code",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/android/assets/www/framework/utility.js",
            "line": 172,
            "description": "Loads a file or URL and returns it to the completion\n handler. The completion handler must be of the form\n fn(success/failure, data).",
            "params": [
                {
                    "name": "theFileName",
                    "description": "the file or URL to load"
                },
                {
                    "name": "aSync",
                    "description": "if TRUE, load asynchronously"
                },
                {
                    "name": "completion",
                    "description": "completion block"
                }
            ],
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/android/assets/www/framework/utility.js",
            "line": 272,
            "description": "Javascript doesn't provide any native include functionality,\n which tends to bloat code and result in long scripts that are\n brittle. Here's our tiny effort to help stem the tide and\n make Javascript just a /little/ nicer.\nNOTE: includes are loaded SYNCHRONOUSLY. This is done as further\n includes may rely upon the one being loaded now. However, it does\n mean that larger files may take longer to process.",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/android/assets/www/framework/utility.js",
            "line": 314,
            "description": "Loads an HTML fragment, creates a DIV, and adds it to the DOM.\n Any script tags inside will be executed.",
            "params": [
                {
                    "name": "theFileName",
                    "description": "the file or URL to laod"
                },
                {
                    "name": "options",
                    "description": "An array of options, as follows:"
                },
                {
                    "name": "aSync",
                    "description": "Determines if the file is loaded\n                                 asynchronously or not."
                },
                {
                    "name": "id",
                    "description": "The ID to attach to the DIV created\n                                 to surround the content."
                },
                {
                    "name": "className",
                    "description": "The class name to attach to the DIV\n                                 created to surround the content."
                },
                {
                    "name": "attachTo",
                    "description": "Indicates the element to append the\n                                 content to. If not specified,\n                                 document.body is used."
                },
                {
                    "name": "completion",
                    "description": "A function called when loading is\n                              complete. Of the form fn ( successOrFailure )\n                              so that success or failure of the load\n                              can be determined."
                }
            ],
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/android/assets/www/framework/utility.js",
            "line": 407,
            "description": "Retrieves a JSON string from the specified URL, and executes completion.\n Completion must be of the form ( success, data ).",
            "params": [
                {
                    "name": "theURL",
                    "description": "the URL or Filename"
                },
                {
                    "name": "completion",
                    "description": "function of the from ( success, data )"
                }
            ],
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/android/assets/www/framework/utility.js",
            "line": 442,
            "description": "Loads a URL in a popup window. Uses ChildBrowser for PG 2.2.x or\n lower, and in-app browser for 2.3 or higher.",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/android/assets/www/framework/utility.js",
            "line": 476,
            "description": "instanceOfTemplate returns an HTML string ready for insertion into the DOM\n as an instance of the supplied template (templateElement). Any %VAR% are\n replaced by VAR from the replacements object.",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/android/assets/www/framework/utility.js",
            "line": 496,
            "description": "Filename Handling",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/android/assets/www/cordova.js",
            "line": 99,
            "description": "Listen for DOMContentLoaded and notify our channel subscribers.",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/android/assets/www/cordova.js",
            "line": 109,
            "description": "Intercept calls to addEventListener + removeEventListener and handle deviceready,\nresume, and pause events.",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/android/assets/www/cordova.js",
            "line": 118,
            "description": "Houses custom event handlers to intercept on document + window event listeners.",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/android/assets/www/cordova.js",
            "line": 184,
            "description": "Methods to add/remove your own addEventListener hijacking on document + window.",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/android/assets/www/cordova.js",
            "line": 202,
            "description": "Retrieve original event handlers that were replaced by Cordova",
            "return": {
                "description": "object"
            },
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/android/assets/www/cordova.js",
            "line": 211,
            "description": "Method to fire event from native code\nbNoDetach is required for events which cause an exception which needs to be caught in native code",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/android/assets/www/cordova.js",
            "line": 241,
            "description": "Plugin callback mechanism.",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/android/assets/www/cordova.js",
            "line": 261,
            "description": "Called by native code when returning successful result from an action.",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/android/assets/www/cordova.js",
            "line": 272,
            "description": "Called by native code when returning error result from an action.",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/android/assets/www/cordova.js",
            "line": 285,
            "description": "Called by native code when returning the result from an action.",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/android/assets/www/cordova.js",
            "line": 463,
            "description": "Merge properties from one object onto another recursively.  Properties from\nthe src object will overwrite existing target property.",
            "params": [
                {
                    "name": "target",
                    "description": "Object to merge properties into."
                },
                {
                    "name": "src",
                    "description": "Object to merge properties from."
                }
            ],
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/android/assets/www/cordova.js",
            "line": 508,
            "description": "Custom pub-sub \"channel\" that can have functions subscribed to it\nThis object is used to define and control firing of events for\ncordova initialization, as well as for custom events thereafter.\n\nThe order of events during page load and Cordova startup is as follows:\n\nonDOMContentLoaded*         Internal event that is received when the web page is loaded and parsed.\nonNativeReady*              Internal event that indicates the Cordova native side is ready.\nonCordovaReady*             Internal event fired when all Cordova JavaScript objects have been created.\nonCordovaInfoReady*         Internal event fired when device properties are available.\nonCordovaConnectionReady*   Internal event fired when the connection property has been set.\nonDeviceReady*              User event fired to indicate that Cordova is ready\nonResume                    User event fired to indicate a start/resume lifecycle event\nonPause                     User event fired to indicate a pause lifecycle event\nonDestroy*                  Internal event fired when app is being destroyed (User should use window.onunload event, not this one).\n\nThe events marked with an * are sticky. Once they have fired, they will stay in the fired state.\nAll listeners that subscribe after the event is fired will be executed right away.\n\nThe only Cordova events that user code should register for are:\n     deviceready           Cordova native code is initialized and Cordova APIs can be called from JavaScript\n     pause                 App has moved to background\n     resume                App has returned to foreground\n\nListeners can be registered as:\n     document.addEventListener(\"deviceready\", myDeviceReadyListener, false);\n     document.addEventListener(\"resume\", myResumeListener, false);\n     document.addEventListener(\"pause\", myPauseListener, false);\n\nThe DOM lifecycle events should be used for saving and restoring state\n     window.onload\n     window.onunload",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/android/assets/www/cordova.js",
            "line": 544,
            "description": "Channel",
            "is_constructor": 1,
            "params": [
                {
                    "name": "type",
                    "description": "String the channel name"
                }
            ],
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/android/assets/www/cordova.js",
            "line": 564,
            "description": "Calls the provided function only after all of the channels specified\nhave been fired. All channels must be sticky channels.",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/android/assets/www/cordova.js",
            "line": 589,
            "description": "cordova Channels that must fire before \"deviceready\" is fired.",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/android/assets/www/cordova.js",
            "line": 595,
            "description": "Indicate that a feature needs to be initialized before it is ready to be used.\nThis holds up Cordova's \"deviceready\" event until the feature has been initialized\nand Cordova.initComplete(feature) is called.",
            "params": [
                {
                    "name": "feature",
                    "description": "The unique feature name",
                    "type": "String"
                }
            ],
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/android/assets/www/cordova.js",
            "line": 610,
            "description": "Indicate that initialization code has completed and the feature is ready to be used.",
            "params": [
                {
                    "name": "feature",
                    "description": "The unique feature name",
                    "type": "String"
                }
            ],
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/android/assets/www/cordova.js",
            "line": 627,
            "description": "Subscribes the given function to the channel. Any time that\nChannel.fire is called so too will the function.\nOptionally specify an execution context for the function\nand a guid that can be used to stop subscribing to the channel.\nReturns the guid.",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/android/assets/www/cordova.js",
            "line": 663,
            "description": "Unsubscribes the function with the given guid from the channel.",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/android/assets/www/cordova.js",
            "line": 681,
            "description": "Calls all functions subscribed to this channel.",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/android/assets/www/cordova.js",
            "line": 781,
            "description": "Execute a cordova command.  It is up to the native side whether this action\nis synchronous or asynchronous.  The native side can return:\n     Synchronous: PluginResult object as a JSON string\n     Asynchronous: Empty string \"\"\nIf async, the native side will cordova.callbackSuccess or cordova.callbackError,\ndepending upon the result of the action.",
            "params": [
                {
                    "name": "success",
                    "description": "The success callback",
                    "type": "Function"
                },
                {
                    "name": "fail",
                    "description": "The fail callback",
                    "type": "Function"
                },
                {
                    "name": "service",
                    "description": "The name of the service to use",
                    "type": "String"
                },
                {
                    "name": "action",
                    "description": "Action to be run in cordova",
                    "type": "String"
                },
                {
                    "name": "args",
                    "description": "Zero or more arguments to pass to the method",
                    "type": "String[]",
                    "optional": true
                }
            ],
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/android/assets/www/cordova.js",
            "line": 1181,
            "description": "Gets a picture from source defined by \"options.sourceType\", and returns the\nimage as defined by the \"options.destinationType\" option.\n\nThe defaults are sourceType=CAMERA and destinationType=FILE_URI.",
            "params": [
                {
                    "name": "successCallback",
                    "description": "",
                    "type": "Function"
                },
                {
                    "name": "errorCallback",
                    "description": "",
                    "type": "Function"
                },
                {
                    "name": "options",
                    "description": "",
                    "type": "Object"
                }
            ],
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/android/assets/www/cordova.js",
            "line": 1262,
            "description": "A handle to an image picker popover.",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/android/assets/www/cordova.js",
            "line": 1280,
            "description": "Encapsulates options for iOS Popover image picker",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/android/assets/www/cordova.js",
            "line": 1300,
            "description": "Encapsulates all audio capture operation configuration options.",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/android/assets/www/cordova.js",
            "line": 1319,
            "description": "The CaptureError interface encapsulates all errors in the Capture API.",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/android/assets/www/cordova.js",
            "line": 1344,
            "description": "Encapsulates all image capture operation configuration options.",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/android/assets/www/cordova.js",
            "line": 1361,
            "description": "Encapsulates all video capture operation configuration options.",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/android/assets/www/cordova.js",
            "line": 1380,
            "description": "CompassError.\nAn error code assigned by an implementation when an error has occurred",
            "is_constructor": 1,
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/android/assets/www/cordova.js",
            "line": 1413,
            "description": "Encapsulates a set of parameters that the capture device supports.",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/android/assets/www/cordova.js",
            "line": 1434,
            "description": "Network status",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/android/assets/www/cordova.js",
            "line": 1458,
            "description": "Converts primitives into Complex Object\nCurrently only used for Date fields",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/android/assets/www/cordova.js",
            "line": 1472,
            "description": "Converts Complex objects into primitives\nOnly conversion at present is for Dates.",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/android/assets/www/cordova.js",
            "line": 1496,
            "description": "Contains information about a single contact.",
            "is_constructor": 1,
            "params": [
                {
                    "name": "id",
                    "description": "unique identifier",
                    "type": "DOMString"
                },
                {
                    "name": "displayName",
                    "description": "",
                    "type": "DOMString"
                },
                {
                    "name": "name",
                    "description": "",
                    "type": "ContactName"
                },
                {
                    "name": "nickname",
                    "description": "",
                    "type": "DOMString"
                },
                {
                    "name": "phoneNumbers",
                    "description": "array of phone numbers",
                    "type": "Array.<ContactField>"
                },
                {
                    "name": "emails",
                    "description": "array of email addresses",
                    "type": "Array.<ContactField>"
                },
                {
                    "name": "addresses",
                    "description": "array of addresses",
                    "type": "Array.<ContactAddress>"
                },
                {
                    "name": "ims",
                    "description": "instant messaging user ids",
                    "type": "Array.<ContactField>"
                },
                {
                    "name": "organizations",
                    "description": "",
                    "type": "Array.<ContactOrganization>"
                },
                {
                    "name": "birthday",
                    "description": "contact's birthday",
                    "type": "DOMString"
                },
                {
                    "name": "note",
                    "description": "user notes about contact",
                    "type": "DOMString"
                },
                {
                    "name": "photos",
                    "description": "",
                    "type": "Array.<ContactField>"
                },
                {
                    "name": "categories",
                    "description": "",
                    "type": "Array.<ContactField>"
                },
                {
                    "name": "urls",
                    "description": "contact's web sites",
                    "type": "Array.<ContactField>"
                }
            ],
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/android/assets/www/cordova.js",
            "line": 1533,
            "description": "Removes contact from device storage.",
            "params": [
                {
                    "name": "successCB",
                    "description": "success callback"
                },
                {
                    "name": "errorCB",
                    "description": "error callback"
                }
            ],
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/android/assets/www/cordova.js",
            "line": 1551,
            "description": "Creates a deep copy of this Contact.\nWith the contact ID set to null.",
            "return": {
                "description": "copy of this Contact"
            },
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/android/assets/www/cordova.js",
            "line": 1581,
            "description": "Persists contact to device storage.",
            "params": [
                {
                    "name": "successCB",
                    "description": "success callback"
                },
                {
                    "name": "errorCB",
                    "description": "error callback"
                }
            ],
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/android/assets/www/cordova.js",
            "line": 1615,
            "description": "Contact address.",
            "is_constructor": 1,
            "params": [
                {
                    "name": "id",
                    "description": "unique identifier, should only be set by native code",
                    "type": "DOMString"
                },
                {
                    "name": "formatted",
                    "description": "// NOTE: not a W3C standard"
                },
                {
                    "name": "streetAddress",
                    "description": ""
                },
                {
                    "name": "locality",
                    "description": ""
                },
                {
                    "name": "region",
                    "description": ""
                },
                {
                    "name": "postalCode",
                    "description": ""
                },
                {
                    "name": "country",
                    "description": ""
                }
            ],
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/android/assets/www/cordova.js",
            "line": 1646,
            "description": "ContactError.\nAn error code assigned by an implementation when an error has occurred",
            "is_constructor": 1,
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/android/assets/www/cordova.js",
            "line": 1655,
            "description": "Error codes",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/android/assets/www/cordova.js",
            "line": 1673,
            "description": "Generic contact field.",
            "is_constructor": 1,
            "params": [
                {
                    "name": "id",
                    "description": "unique identifier, should only be set by native code // NOTE: not a W3C standard",
                    "type": "DOMString"
                },
                {
                    "name": "type",
                    "description": ""
                },
                {
                    "name": "value",
                    "description": ""
                },
                {
                    "name": "pref",
                    "description": ""
                }
            ],
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/android/assets/www/cordova.js",
            "line": 1695,
            "description": "ContactFindOptions.",
            "is_constructor": 1,
            "params": [
                {
                    "name": "filter",
                    "description": "used to match contacts against"
                },
                {
                    "name": "multiple",
                    "description": "boolean used to determine if more than one contact should be returned"
                }
            ],
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/android/assets/www/cordova.js",
            "line": 1714,
            "description": "Contact name.",
            "is_constructor": 1,
            "params": [
                {
                    "name": "formatted",
                    "description": "// NOTE: not part of W3C standard"
                },
                {
                    "name": "familyName",
                    "description": ""
                },
                {
                    "name": "givenName",
                    "description": ""
                },
                {
                    "name": "middle",
                    "description": ""
                },
                {
                    "name": "prefix",
                    "description": ""
                },
                {
                    "name": "suffix",
                    "description": ""
                }
            ],
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/android/assets/www/cordova.js",
            "line": 1740,
            "description": "Contact organization.",
            "is_constructor": 1,
            "params": [
                {
                    "name": "id",
                    "description": "unique identifier, should only be set by native code // NOTE: not a W3C standard",
                    "type": "DOMString"
                },
                {
                    "name": "name",
                    "description": ""
                },
                {
                    "name": "dept",
                    "description": ""
                },
                {
                    "name": "title",
                    "description": ""
                },
                {
                    "name": "startDate",
                    "description": ""
                },
                {
                    "name": "endDate",
                    "description": ""
                },
                {
                    "name": "location",
                    "description": ""
                },
                {
                    "name": "desc",
                    "description": ""
                }
            ],
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/android/assets/www/cordova.js",
            "line": 1769,
            "description": "This class contains position information.",
            "params": [
                {
                    "name": "lat",
                    "description": "",
                    "type": "Object"
                },
                {
                    "name": "lng",
                    "description": "",
                    "type": "Object"
                },
                {
                    "name": "alt",
                    "description": "",
                    "type": "Object"
                },
                {
                    "name": "acc",
                    "description": "",
                    "type": "Object"
                },
                {
                    "name": "head",
                    "description": "",
                    "type": "Object"
                },
                {
                    "name": "vel",
                    "description": "",
                    "type": "Object"
                },
                {
                    "name": "altacc",
                    "description": "",
                    "type": "Object"
                }
            ],
            "is_constructor": 1,
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/android/assets/www/cordova.js",
            "line": 1781,
            "description": "The latitude of the position.",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/android/assets/www/cordova.js",
            "line": 1785,
            "description": "The longitude of the position,",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/android/assets/www/cordova.js",
            "line": 1789,
            "description": "The accuracy of the position.",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/android/assets/www/cordova.js",
            "line": 1793,
            "description": "The altitude of the position.",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/android/assets/www/cordova.js",
            "line": 1797,
            "description": "The direction the device is moving at the position.",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/android/assets/www/cordova.js",
            "line": 1801,
            "description": "The velocity with which the device is moving at the position.",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/android/assets/www/cordova.js",
            "line": 1810,
            "description": "The altitude accuracy of the position.",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/android/assets/www/cordova.js",
            "line": 1830,
            "description": "An interface representing a directory on the file system.\n\n{boolean} isFile always false (readonly)\n{boolean} isDirectory always true (readonly)\n{DOMString} name of the directory, excluding the path leading to it (readonly)\n{DOMString} fullPath the absolute full path to the directory (readonly)\nTODO: implement this!!! {FileSystem} filesystem on which the directory resides (readonly)",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/android/assets/www/cordova.js",
            "line": 1845,
            "description": "Creates a new DirectoryReader to read entries from this directory",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/android/assets/www/cordova.js",
            "line": 1852,
            "description": "Creates or looks up a directory",
            "params": [
                {
                    "name": "path",
                    "description": "either a relative or absolute path from this directory in which to look up or create a directory",
                    "type": "DOMString"
                },
                {
                    "name": "options",
                    "description": "to create or exclusively create the directory",
                    "type": "Flags"
                },
                {
                    "name": "successCallback",
                    "description": "is called with the new entry",
                    "type": "Function"
                },
                {
                    "name": "errorCallback",
                    "description": "is called with a FileError",
                    "type": "Function"
                }
            ],
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/android/assets/www/cordova.js",
            "line": 1872,
            "description": "Deletes a directory and all of it's contents",
            "params": [
                {
                    "name": "successCallback",
                    "description": "is called with no parameters",
                    "type": "Function"
                },
                {
                    "name": "errorCallback",
                    "description": "is called with a FileError",
                    "type": "Function"
                }
            ],
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/android/assets/www/cordova.js",
            "line": 1886,
            "description": "Creates or looks up a file",
            "params": [
                {
                    "name": "path",
                    "description": "either a relative or absolute path from this directory in which to look up or create a file",
                    "type": "DOMString"
                },
                {
                    "name": "options",
                    "description": "to create or exclusively create the file",
                    "type": "Flags"
                },
                {
                    "name": "successCallback",
                    "description": "is called with the new entry",
                    "type": "Function"
                },
                {
                    "name": "errorCallback",
                    "description": "is called with a FileError",
                    "type": "Function"
                }
            ],
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/android/assets/www/cordova.js",
            "line": 1917,
            "description": "An interface that lists the files and directories in a directory.",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/android/assets/www/cordova.js",
            "line": 1924,
            "description": "Returns a list of entries from a directory.",
            "params": [
                {
                    "name": "successCallback",
                    "description": "is called with a list of entries",
                    "type": "Function"
                },
                {
                    "name": "errorCallback",
                    "description": "is called with a FileError",
                    "type": "Function"
                }
            ],
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/android/assets/www/cordova.js",
            "line": 1967,
            "description": "Represents a file or directory on the local file system.",
            "params": [
                {
                    "name": "isFile!~YUIDOC_LINE~!",
                    "description": "true if Entry is a file (readonly)",
                    "type": "Boolean"
                },
                {
                    "name": "isDirectory!~YUIDOC_LINE~!",
                    "description": "true if Entry is a directory (readonly)",
                    "type": "Boolean"
                },
                {
                    "name": "name!~YUIDOC_LINE~!",
                    "description": "name of the file or directory, excluding the path\n           leading to it (readonly)",
                    "type": "DOMString"
                },
                {
                    "name": "fullPath!~YUIDOC_LINE~!",
                    "description": "the absolute full path to the file or directory\n           (readonly)",
                    "type": "DOMString"
                }
            ],
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/android/assets/www/cordova.js",
            "line": 1989,
            "description": "Look up the metadata of the entry.",
            "params": [
                {
                    "name": "successCallback!~YUIDOC_LINE~!",
                    "description": "is called with a Metadata object",
                    "type": "Function"
                },
                {
                    "name": "errorCallback!~YUIDOC_LINE~!",
                    "description": "is called with a FileError",
                    "type": "Function"
                }
            ],
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/android/assets/www/cordova.js",
            "line": 2010,
            "description": "Set the metadata of the entry.",
            "params": [
                {
                    "name": "successCallback!~YUIDOC_LINE~!",
                    "description": "is called with a Metadata object",
                    "type": "Function"
                },
                {
                    "name": "errorCallback!~YUIDOC_LINE~!",
                    "description": "is called with a FileError",
                    "type": "Function"
                },
                {
                    "name": "metadataObject!~YUIDOC_LINE~!",
                    "description": "keys and values to set",
                    "type": "Object"
                }
            ],
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/android/assets/www/cordova.js",
            "line": 2025,
            "description": "Move a file or directory to a new location.",
            "params": [
                {
                    "name": "parent!~YUIDOC_LINE~!",
                    "description": "the directory to which to move this entry",
                    "type": "DirectoryEntry"
                },
                {
                    "name": "newName!~YUIDOC_LINE~!",
                    "description": "new name of the entry, defaults to the current name",
                    "type": "DOMString"
                },
                {
                    "name": "successCallback!~YUIDOC_LINE~!",
                    "description": "called with the new DirectoryEntry object",
                    "type": "Function"
                },
                {
                    "name": "errorCallback!~YUIDOC_LINE~!",
                    "description": "called with a FileError",
                    "type": "Function"
                }
            ],
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/android/assets/www/cordova.js",
            "line": 2064,
            "description": "Copy a directory to a different location.",
            "params": [
                {
                    "name": "parent!~YUIDOC_LINE~!",
                    "description": "the directory to which to copy the entry",
                    "type": "DirectoryEntry"
                },
                {
                    "name": "newName!~YUIDOC_LINE~!",
                    "description": "new name of the entry, defaults to the current name",
                    "type": "DOMString"
                },
                {
                    "name": "successCallback!~YUIDOC_LINE~!",
                    "description": "called with the new Entry object",
                    "type": "Function"
                },
                {
                    "name": "errorCallback!~YUIDOC_LINE~!",
                    "description": "called with a FileError",
                    "type": "Function"
                }
            ],
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/android/assets/www/cordova.js",
            "line": 2105,
            "description": "Return a URL that can be used to identify this entry.",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/android/assets/www/cordova.js",
            "line": 2113,
            "description": "Returns a URI that can be used to identify this entry.",
            "params": [
                {
                    "name": "mimeType",
                    "description": "for a FileEntry, the mime type to be used to interpret the file, when loaded through this URI.",
                    "type": "DOMString"
                }
            ],
            "return": {
                "description": "uri"
            },
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/android/assets/www/cordova.js",
            "line": 2125,
            "description": "Remove a file or directory. It is an error to attempt to delete a\ndirectory that is not empty. It is an error to attempt to delete a\nroot directory of a file system.",
            "params": [
                {
                    "name": "successCallback",
                    "description": "called with no parameters",
                    "type": "Function"
                },
                {
                    "name": "errorCallback",
                    "description": "called with a FileError",
                    "type": "Function"
                }
            ],
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/android/assets/www/cordova.js",
            "line": 2141,
            "description": "Look up the parent DirectoryEntry of this entry.",
            "params": [
                {
                    "name": "successCallback",
                    "description": "called with the parent DirectoryEntry object",
                    "type": "Function"
                },
                {
                    "name": "errorCallback",
                    "description": "called with a FileError",
                    "type": "Function"
                }
            ],
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/android/assets/www/cordova.js",
            "line": 2167,
            "description": "Constructor.\nname {DOMString} name of the file, without path information\nfullPath {DOMString} the full path of the file, including the name\ntype {DOMString} mime type\nlastModifiedDate {Date} last modified date\nsize {Number} size of the file in bytes",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/android/assets/www/cordova.js",
            "line": 2188,
            "description": "Returns a \"slice\" of the file. Since Cordova Files don't contain the actual\ncontent, this really returns a File with adjusted start and end.\nSlices of slices are supported.\nstart {Number} The index at which to start the slice (inclusive).\nend {Number} The index at which to end the slice (exclusive).",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/android/assets/www/cordova.js",
            "line": 2236,
            "description": "An interface representing a file on the file system.\n\n{boolean} isFile always true (readonly)\n{boolean} isDirectory always false (readonly)\n{DOMString} name of the file, excluding the path leading to it (readonly)\n{DOMString} fullPath the absolute full path to the file (readonly)\n{FileSystem} filesystem on which the file resides (readonly)",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/android/assets/www/cordova.js",
            "line": 2251,
            "description": "Creates a new FileWriter associated with the file that this FileEntry represents.",
            "params": [
                {
                    "name": "successCallback",
                    "description": "is called with the new FileWriter",
                    "type": "Function"
                },
                {
                    "name": "errorCallback",
                    "description": "is called with a FileError",
                    "type": "Function"
                }
            ],
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/android/assets/www/cordova.js",
            "line": 2269,
            "description": "Returns a File that represents the current state of the file that this FileEntry represents.",
            "params": [
                {
                    "name": "successCallback",
                    "description": "is called with the new File object",
                    "type": "Function"
                },
                {
                    "name": "errorCallback",
                    "description": "is called with a FileError",
                    "type": "Function"
                }
            ],
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/android/assets/www/cordova.js",
            "line": 2294,
            "description": "FileError",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/android/assets/www/cordova.js",
            "line": 2333,
            "description": "This class reads the mobile device file system.\n\nFor Android:\n     The root directory is the root of the file system.\n     To read from the SD card, the file name is \"sdcard/my_file.txt\"",
            "is_constructor": 1,
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/android/assets/www/cordova.js",
            "line": 2404,
            "description": "Abort reading file.",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/android/assets/www/cordova.js",
            "line": 2429,
            "description": "Read text file.",
            "params": [
                {
                    "name": "file",
                    "description": "File object containing file properties",
                    "type": "File"
                },
                {
                    "name": "encoding",
                    "description": "[Optional] (see http://www.iana.org/assignments/character-sets)"
                }
            ],
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/android/assets/www/cordova.js",
            "line": 2506,
            "description": "Read file and return data as a base64 encoded data url.\nA data url is of the form:\n     data:[<mediatype>][;base64],<data>",
            "params": [
                {
                    "name": "file",
                    "description": "File object containing file properties",
                    "type": "File"
                }
            ],
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/android/assets/www/cordova.js",
            "line": 2580,
            "description": "Read file and return data as a binary data.",
            "params": [
                {
                    "name": "file",
                    "description": "File object containing file properties",
                    "type": "File"
                }
            ],
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/android/assets/www/cordova.js",
            "line": 2594,
            "description": "Read file and return data as a binary data.",
            "params": [
                {
                    "name": "file",
                    "description": "File object containing file properties",
                    "type": "File"
                }
            ],
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/android/assets/www/cordova.js",
            "line": 2617,
            "description": "An interface representing a file system",
            "is_constructor": 1,
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/android/assets/www/cordova.js",
            "line": 2653,
            "description": "FileTransfer uploads a file to a remote server.",
            "is_constructor": 1,
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/android/assets/www/cordova.js",
            "line": 2662,
            "description": "Given an absolute file path, uploads a file on the device to a remote server\nusing a multipart HTTP request.",
            "params": [
                {
                    "name": "filePath",
                    "description": "Full path of the file on the device",
                    "type": "String"
                },
                {
                    "name": "server",
                    "description": "URL of the server to receive the file",
                    "type": "String"
                },
                {
                    "name": "successCallback",
                    "description": "(Function}  Callback to be invoked when upload has completed"
                },
                {
                    "name": "errorCallback",
                    "description": "Callback to be invoked upon error",
                    "type": "Function"
                },
                {
                    "name": "options",
                    "description": "Optional parameters such as file name and mimetype",
                    "type": "FileUploadOptions"
                },
                {
                    "name": "trustAllHosts",
                    "description": "Optional trust all hosts (e.g. for self-signed certs), defaults to false",
                    "type": "Boolean"
                }
            ],
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/android/assets/www/cordova.js",
            "line": 2715,
            "description": "Downloads a file form a given URL and saves it to the specified directory.",
            "params": [
                {
                    "name": "source",
                    "description": "URL of the server to receive the file",
                    "type": "String"
                },
                {
                    "name": "target",
                    "description": "Full path of the file on the device",
                    "type": "String"
                },
                {
                    "name": "successCallback",
                    "description": "(Function}  Callback to be invoked when upload has completed"
                },
                {
                    "name": "errorCallback",
                    "description": "Callback to be invoked upon error",
                    "type": "Function"
                },
                {
                    "name": "trustAllHosts",
                    "description": "Optional trust all hosts (e.g. for self-signed certs), defaults to false",
                    "type": "Boolean"
                }
            ],
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/android/assets/www/cordova.js",
            "line": 2755,
            "description": "Aborts the ongoing file transfer on this object",
            "params": [
                {
                    "name": "successCallback",
                    "description": "Callback to be invoked upon success",
                    "type": "Function"
                },
                {
                    "name": "errorCallback",
                    "description": "Callback to be invoked upon error",
                    "type": "Function"
                }
            ],
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/android/assets/www/cordova.js",
            "line": 2771,
            "description": "FileTransferError",
            "is_constructor": 1,
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/android/assets/www/cordova.js",
            "line": 2795,
            "description": "Options to customize the HTTP request used to upload files.",
            "is_constructor": 1,
            "params": [
                {
                    "name": "fileKey",
                    "description": "Name of file request parameter.",
                    "type": "String"
                },
                {
                    "name": "fileName",
                    "description": "Filename to be used by the server. Defaults to image.jpg.",
                    "type": "String"
                },
                {
                    "name": "mimeType",
                    "description": "Mimetype of the uploaded file. Defaults to image/jpeg.",
                    "type": "String"
                },
                {
                    "name": "params",
                    "description": "Object with key: value params to send to the server.",
                    "type": "Object"
                },
                {
                    "name": "headers",
                    "description": "Keys are header names, values are header values. Multiple\n                          headers of the same name are not supported.",
                    "type": "Object"
                }
            ],
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/android/assets/www/cordova.js",
            "line": 2820,
            "description": "FileUploadResult",
            "is_constructor": 1,
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/android/assets/www/cordova.js",
            "line": 2841,
            "description": "This class writes to the mobile device file system.\n\nFor Android:\n     The root directory is the root of the file system.\n     To write to the SD card, the file name is \"sdcard/my_file.txt\"",
            "is_constructor": 1,
            "params": [
                {
                    "name": "file",
                    "description": "File object containing file properties",
                    "type": "File"
                },
                {
                    "name": "append",
                    "description": "if true write to the end of the file, otherwise overwrite the file"
                }
            ],
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/android/assets/www/cordova.js",
            "line": 2883,
            "description": "Abort writing file.",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/android/assets/www/cordova.js",
            "line": 2908,
            "description": "Writes data to the file",
            "params": [
                {
                    "name": "text",
                    "description": "to be written"
                }
            ],
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/android/assets/www/cordova.js",
            "line": 2982,
            "description": "Moves the file pointer to the location specified.\n\nIf the offset is a negative number the position of the file\npointer is rewound.  If the offset is greater than the file\nsize the position is set to the end of the file.",
            "params": [
                {
                    "name": "offset",
                    "description": "is the location to move the file pointer to."
                }
            ],
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/android/assets/www/cordova.js",
            "line": 3017,
            "description": "Truncates the file to the size specified.",
            "params": [
                {
                    "name": "size",
                    "description": "to chop the file at."
                }
            ],
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/android/assets/www/cordova.js",
            "line": 3096,
            "description": "Supplies arguments to methods that lookup or create files and directories.",
            "params": [
                {
                    "name": "create!~YUIDOC_LINE~!",
                    "description": "file or directory if it doesn't exist",
                    "type": "Boolean"
                },
                {
                    "name": "exclusive!~YUIDOC_LINE~!",
                    "description": "used with create; if true the command will fail if\n           target path exists",
                    "type": "Boolean"
                }
            ],
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/android/assets/www/cordova.js",
            "line": 3118,
            "description": "Globalization error object",
            "is_constructor": 1,
            "params": [
                {
                    "name": "code",
                    "description": ""
                },
                {
                    "name": "message",
                    "description": ""
                }
            ],
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/android/assets/www/cordova.js",
            "line": 3192,
            "description": "Represents a local file system.",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/android/assets/www/cordova.js",
            "line": 3215,
            "description": "This class provides access to the device media, interfaces to both sound and video",
            "is_constructor": 1,
            "params": [
                {
                    "name": "src",
                    "description": "The file name or url to play"
                },
                {
                    "name": "successCallback",
                    "description": "The callback to be called when the file is done playing or recording.\n                                 successCallback()"
                },
                {
                    "name": "errorCallback",
                    "description": "The callback to be called if there is an error.\n                                 errorCallback(int errorCode) - OPTIONAL"
                },
                {
                    "name": "statusCallback",
                    "description": "The callback to be called when media status has changed.\n                                 statusCallback(int statusCode) - OPTIONAL"
                }
            ],
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/android/assets/www/cordova.js",
            "line": 3259,
            "description": "Start or resume playing audio file.",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/android/assets/www/cordova.js",
            "line": 3266,
            "description": "Stop playing audio file.",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/android/assets/www/cordova.js",
            "line": 3276,
            "description": "Seek or jump to a new time in the track..",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/android/assets/www/cordova.js",
            "line": 3286,
            "description": "Pause playing audio file.",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/android/assets/www/cordova.js",
            "line": 3293,
            "description": "Get duration of an audio file.\nThe duration is only set for audio that is playing, paused or stopped.",
            "return": {
                "description": "duration or -1 if not known."
            },
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/android/assets/www/cordova.js",
            "line": 3303,
            "description": "Get position of audio.",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/android/assets/www/cordova.js",
            "line": 3314,
            "description": "Start recording audio file.",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/android/assets/www/cordova.js",
            "line": 3321,
            "description": "Stop recording audio file.",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/android/assets/www/cordova.js",
            "line": 3328,
            "description": "Release the resources.",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/android/assets/www/cordova.js",
            "line": 3335,
            "description": "Adjust the volume.",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/android/assets/www/cordova.js",
            "line": 3342,
            "description": "Audio has status update.\nPRIVATE",
            "params": [
                {
                    "name": "id",
                    "description": "The media object id (string)"
                },
                {
                    "name": "msgType",
                    "description": "The 'type' of update this is"
                },
                {
                    "name": "value",
                    "description": "Use of value is determined by the msgType"
                }
            ],
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/android/assets/www/cordova.js",
            "line": 3389,
            "description": "This class contains information about any Media errors.",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/android/assets/www/cordova.js",
            "line": 3433,
            "description": "Represents a single file.\n\nname {DOMString} name of the file, without path information\nfullPath {DOMString} the full path of the file, including the name\ntype {DOMString} mime type\nlastModifiedDate {Date} last modified date\nsize {Number} size of the file in bytes",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/android/assets/www/cordova.js",
            "line": 3448,
            "description": "Request capture format data for a specific file and type",
            "params": [
                {
                    "name": "successCB",
                    "description": "",
                    "type": "Function"
                },
                {
                    "name": "errorCB",
                    "description": "",
                    "type": "Function"
                }
            ],
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/android/assets/www/cordova.js",
            "line": 3469,
            "description": "MediaFileData encapsulates format information of a media file.",
            "params": [
                {
                    "name": "codecs",
                    "description": "",
                    "type": "DOMString"
                },
                {
                    "name": "bitrate",
                    "description": "",
                    "type": "Long"
                },
                {
                    "name": "height",
                    "description": "",
                    "type": "Long"
                },
                {
                    "name": "width",
                    "description": "",
                    "type": "Long"
                },
                {
                    "name": "duration",
                    "description": "",
                    "type": "Float"
                }
            ],
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/android/assets/www/cordova.js",
            "line": 3493,
            "description": "Information about the state of the file or directory\n\n{Date} modificationTime (readonly)",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/android/assets/www/cordova.js",
            "line": 3527,
            "description": "Position error object",
            "is_constructor": 1,
            "params": [
                {
                    "name": "code",
                    "description": ""
                },
                {
                    "name": "message",
                    "description": ""
                }
            ],
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/android/assets/www/cordova.js",
            "line": 3602,
            "description": "This class provides access to device accelerometer data.",
            "is_constructor": 1,
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/android/assets/www/cordova.js",
            "line": 3663,
            "description": "Asynchronously acquires the current acceleration.",
            "params": [
                {
                    "name": "successCallback",
                    "description": "The function to call when the acceleration data is available",
                    "type": "Function"
                },
                {
                    "name": "errorCallback",
                    "description": "The function to call when there is an error getting the acceleration data. (OPTIONAL)",
                    "type": "Function"
                },
                {
                    "name": "options",
                    "description": "The options for getting the accelerometer data such as timeout. (OPTIONAL)",
                    "type": "AccelerationOptions"
                }
            ],
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/android/assets/www/cordova.js",
            "line": 3691,
            "description": "Asynchronously acquires the acceleration repeatedly at a given interval.",
            "params": [
                {
                    "name": "successCallback",
                    "description": "The function to call each time the acceleration data is available",
                    "type": "Function"
                },
                {
                    "name": "errorCallback",
                    "description": "The function to call when there is an error getting the acceleration data. (OPTIONAL)",
                    "type": "Function"
                },
                {
                    "name": "options",
                    "description": "The options for getting the accelerometer data such as timeout. (OPTIONAL)",
                    "type": "AccelerationOptions"
                }
            ],
            "return": {
                "description": "String                       The watch id that must be passed to #clearWatch to stop watching."
            },
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/android/assets/www/cordova.js",
            "line": 3735,
            "description": "Clears the specified accelerometer watch.",
            "params": [
                {
                    "name": "id",
                    "description": "The id of the watch returned from #watchAcceleration.",
                    "type": "String"
                }
            ],
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/android/assets/www/cordova.js",
            "line": 3771,
            "description": "Clear the resource cache.",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/android/assets/www/cordova.js",
            "line": 3778,
            "description": "Load the url into the webview or into new browser instance.",
            "params": [
                {
                    "name": "url",
                    "description": "The URL to load"
                },
                {
                    "name": "props",
                    "description": "Properties that can be passed in to the activity:\n     wait: int                           => wait msec before loading URL\n     loadingDialog: \"Title,Message\"      => display a native loading dialog\n     loadUrlTimeoutValue: int            => time in msec to wait before triggering a timeout error\n     clearHistory: boolean              => clear webview history (default=false)\n     openExternal: boolean              => open in a new browser (default=false)\n\nExample:\n     navigator.app.loadUrl(\"http://server/myapp/index.html\", );",
                    "type": "Wait:2000, loadingDialog:\"Wait,Loading App\", loadUrlTimeoutValue: 60000"
                }
            ],
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/android/assets/www/cordova.js",
            "line": 3796,
            "description": "Cancel loadUrl that is waiting to be loaded.",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/android/assets/www/cordova.js",
            "line": 3803,
            "description": "Clear web history in this web view.\nInstead of BACK button loading the previous web page, it will exit the app.",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/android/assets/www/cordova.js",
            "line": 3811,
            "description": "Go to previous page displayed.\nThis is the same as pressing the backbutton on Android device.",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/android/assets/www/cordova.js",
            "line": 3819,
            "description": "Override the default behavior of the Android back button.\nIf overridden, when the back button is pressed, the \"backKeyDown\" JavaScript event will be fired.\n\nNote: The user should not have to call this method.  Instead, when the user\n      registers for the \"backbutton\" event, this is automatically done.",
            "params": [
                {
                    "name": "override",
                    "description": "T=override, F=cancel override"
                }
            ],
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/android/assets/www/cordova.js",
            "line": 3832,
            "description": "Exit and terminate the application.",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/android/assets/www/cordova.js",
            "line": 3911,
            "description": "Provides Android enhanced notification API.",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/android/assets/www/cordova.js",
            "line": 3926,
            "description": "Close an activity dialog",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/android/assets/www/cordova.js",
            "line": 3933,
            "description": "Display a progress dialog with progress bar that goes from 0 to 100.",
            "params": [
                {
                    "name": "!~YUIDOC_LINE~!",
                    "description": "title Title of the progress dialog.",
                    "type": "String"
                },
                {
                    "name": "!~YUIDOC_LINE~!",
                    "description": "message Message to display in the dialog.",
                    "type": "String"
                }
            ],
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/android/assets/www/cordova.js",
            "line": 3945,
            "description": "Close the progress dialog.",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/android/assets/www/cordova.js",
            "line": 3952,
            "description": "Set the progress dialog value.",
            "params": [
                {
                    "name": "!~YUIDOC_LINE~!",
                    "description": "value 0-100",
                    "type": "Number"
                }
            ],
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/android/assets/www/cordova.js",
            "line": 3991,
            "description": "SQL result set object\nPRIVATE METHOD",
            "is_constructor": 1,
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/android/assets/www/cordova.js",
            "line": 4001,
            "description": "Get item from SQL result set",
            "params": [
                {
                    "name": "row",
                    "description": "The row number to return"
                }
            ],
            "return": {
                "description": "The row object"
            },
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/android/assets/www/cordova.js",
            "line": 4011,
            "description": "SQL result set that is returned to user.\nPRIVATE METHOD",
            "is_constructor": 1,
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/android/assets/www/cordova.js",
            "line": 4020,
            "description": "Callback from native code when query is complete.\nPRIVATE METHOD",
            "params": [
                {
                    "name": "id",
                    "description": "Query id"
                }
            ],
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/android/assets/www/cordova.js",
            "line": 4060,
            "description": "Callback from native code when query fails\nPRIVATE METHOD",
            "params": [
                {
                    "name": "reason",
                    "description": "Error message"
                },
                {
                    "name": "id",
                    "description": "Query id"
                }
            ],
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/android/assets/www/cordova.js",
            "line": 4099,
            "description": "SQL query object\nPRIVATE METHOD",
            "is_constructor": 1,
            "params": [
                {
                    "name": "tx",
                    "description": "The transaction object that this query belongs to"
                }
            ],
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/android/assets/www/cordova.js",
            "line": 4129,
            "description": "Transaction object\nPRIVATE METHOD",
            "is_constructor": 1,
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/android/assets/www/cordova.js",
            "line": 4147,
            "description": "Mark query in transaction as complete.\nIf all queries are complete, call the user's transaction success callback.",
            "params": [
                {
                    "name": "id",
                    "description": "Query id"
                }
            ],
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/android/assets/www/cordova.js",
            "line": 4175,
            "description": "Mark query in transaction as failed.",
            "params": [
                {
                    "name": "id",
                    "description": "Query id"
                },
                {
                    "name": "reason",
                    "description": "Error message"
                }
            ],
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/android/assets/www/cordova.js",
            "line": 4198,
            "description": "Execute SQL statement",
            "params": [
                {
                    "name": "sql",
                    "description": "SQL statement to execute"
                },
                {
                    "name": "params",
                    "description": "Statement parameters"
                },
                {
                    "name": "successCallback",
                    "description": "Success callback"
                },
                {
                    "name": "errorCallback",
                    "description": "Error callback"
                }
            ],
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/android/assets/www/cordova.js",
            "line": 4228,
            "description": "Start a transaction.\nDoes not support rollback in event of failure.",
            "params": [
                {
                    "name": "process",
                    "description": "The transaction function",
                    "type": "Function"
                },
                {
                    "name": "successCallback",
                    "description": "",
                    "type": "Function"
                },
                {
                    "name": "errorCallback",
                    "description": "",
                    "type": "Function"
                }
            ],
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/android/assets/www/cordova.js",
            "line": 4254,
            "description": "Open database",
            "params": [
                {
                    "name": "name",
                    "description": "Database name"
                },
                {
                    "name": "version",
                    "description": "Database version"
                },
                {
                    "name": "display_name",
                    "description": "Database display name"
                },
                {
                    "name": "size",
                    "description": "Database size in bytes"
                }
            ],
            "return": {
                "description": "Database object"
            },
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/android/assets/www/cordova.js",
            "line": 4325,
            "description": "This class contains information about the current battery status.",
            "is_constructor": 1,
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/android/assets/www/cordova.js",
            "line": 4351,
            "description": "Event handlers for when callbacks get registered for the battery.\nKeep track of how many handlers we have so we can start and stop the native battery listener\nappropriately (and hopefully save on battery life!).",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/android/assets/www/cordova.js",
            "line": 4365,
            "description": "Callback for battery status",
            "params": [
                {
                    "name": "info",
                    "description": "keys: level, isPlugged",
                    "type": "Object"
                }
            ],
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/android/assets/www/cordova.js",
            "line": 4393,
            "description": "Error callback for battery start",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/android/assets/www/cordova.js",
            "line": 4434,
            "description": "Launches a capture of different types.",
            "params": [
                {
                    "name": "(DOMString}",
                    "description": "type"
                },
                {
                    "name": "successCB",
                    "description": "",
                    "type": "Function"
                },
                {
                    "name": "errorCB",
                    "description": "",
                    "type": "Function"
                },
                {
                    "name": "options",
                    "description": "",
                    "type": "CaptureVideoOptions"
                }
            ],
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/android/assets/www/cordova.js",
            "line": 4459,
            "description": "The Capture interface exposes an interface to the camera and microphone of the hosting device.",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/android/assets/www/cordova.js",
            "line": 4468,
            "description": "Launch audio recorder application for recording audio clip(s).",
            "params": [
                {
                    "name": "successCB",
                    "description": "",
                    "type": "Function"
                },
                {
                    "name": "errorCB",
                    "description": "",
                    "type": "Function"
                },
                {
                    "name": "options",
                    "description": "",
                    "type": "CaptureAudioOptions"
                }
            ],
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/android/assets/www/cordova.js",
            "line": 4479,
            "description": "Launch camera application for taking image(s).",
            "params": [
                {
                    "name": "successCB",
                    "description": "",
                    "type": "Function"
                },
                {
                    "name": "errorCB",
                    "description": "",
                    "type": "Function"
                },
                {
                    "name": "options",
                    "description": "",
                    "type": "CaptureImageOptions"
                }
            ],
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/android/assets/www/cordova.js",
            "line": 4490,
            "description": "Launch device camera application for recording video(s).",
            "params": [
                {
                    "name": "successCB",
                    "description": "",
                    "type": "Function"
                },
                {
                    "name": "errorCB",
                    "description": "",
                    "type": "Function"
                },
                {
                    "name": "options",
                    "description": "",
                    "type": "CaptureVideoOptions"
                }
            ],
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/android/assets/www/cordova.js",
            "line": 4532,
            "description": "Asynchronously acquires the current heading.",
            "params": [
                {
                    "name": "successCallback",
                    "description": "The function to call when the heading\ndata is available",
                    "type": "Function"
                },
                {
                    "name": "errorCallback",
                    "description": "The function to call when there is an error\ngetting the heading data.",
                    "type": "Function"
                },
                {
                    "name": "options",
                    "description": "The options for getting the heading data (not used).",
                    "type": "CompassOptions"
                }
            ],
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/android/assets/www/cordova.js",
            "line": 4556,
            "description": "Asynchronously acquires the heading repeatedly at a given interval.",
            "params": [
                {
                    "name": "successCallback",
                    "description": "The function to call each time the heading\ndata is available",
                    "type": "Function"
                },
                {
                    "name": "errorCallback",
                    "description": "The function to call when there is an error\ngetting the heading data.",
                    "type": "Function"
                },
                {
                    "name": "options",
                    "description": "The options for getting the heading data\nsuch as timeout and the frequency of the watch. For iOS, filter parameter\nspecifies to watch via a distance filter rather than time.",
                    "type": "HeadingOptions"
                }
            ],
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/android/assets/www/cordova.js",
            "line": 4587,
            "description": "Clears the specified heading watch.",
            "params": [
                {
                    "name": "watchId",
                    "description": "The ID of the watch returned from #watchHeading.",
                    "type": "String"
                }
            ],
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/android/assets/www/cordova.js",
            "line": 4802,
            "description": "Represents a group of Contacts.",
            "is_constructor": 1,
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/android/assets/www/cordova.js",
            "line": 4807,
            "description": "Returns an array of Contacts matching the search criteria.",
            "params": [
                {
                    "name": "fields",
                    "description": "that should be searched"
                },
                {
                    "name": "successCB",
                    "description": "success callback"
                },
                {
                    "name": "errorCB",
                    "description": "error callback"
                },
                {
                    "name": "options",
                    "description": "that can be applied to contact searching",
                    "type": "ContactFindOptions"
                }
            ],
            "return": {
                "description": "array of Contacts matching search criteria"
            },
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/android/assets/www/cordova.js",
            "line": 4831,
            "description": "This function creates a new contact, but it does not persist the contact\nto device storage. To persist the contact to device storage, invoke\ncontact.save().",
            "params": [
                {
                    "name": "properties",
                    "description": "an object whose properties will be examined to create a new Contact"
                }
            ],
            "return": {
                "description": "new Contact object"
            },
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/android/assets/www/cordova.js",
            "line": 4882,
            "description": "This represents the mobile device, and provides properties for inspecting the model, version, UUID of the\nphone, etc.",
            "is_constructor": 1,
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/android/assets/www/cordova.js",
            "line": 4915,
            "description": "Get device info",
            "params": [
                {
                    "name": "successCallback",
                    "description": "The function to call when the heading data is available",
                    "type": "Function"
                },
                {
                    "name": "errorCallback",
                    "description": "The function to call when there is an error getting the heading data. (OPTIONAL)",
                    "type": "Function"
                }
            ],
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/android/assets/www/cordova.js",
            "line": 4946,
            "description": "Sends the given message through exec() to the Echo plugin, which sends it back to the successCallback.",
            "params": [
                {
                    "name": "successCallback",
                    "description": "invoked with a FileSystem object"
                },
                {
                    "name": "errorCallback",
                    "description": "invoked if error occurs retrieving file system"
                },
                {
                    "name": "message",
                    "description": "The string to be echoed."
                },
                {
                    "name": "forceAsync",
                    "description": "Whether to force an async return value (for testing native->js bridge)."
                }
            ],
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/android/assets/www/cordova.js",
            "line": 5064,
            "description": "Asynchronously acquires the current position.",
            "params": [
                {
                    "name": "successCallback",
                    "description": "The function to call when the position data is available",
                    "type": "Function"
                },
                {
                    "name": "errorCallback",
                    "description": "The function to call when there is an error getting the heading position. (OPTIONAL)",
                    "type": "Function"
                },
                {
                    "name": "options",
                    "description": "The options for getting the position data. (OPTIONAL)",
                    "type": "PositionOptions"
                }
            ],
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/android/assets/www/cordova.js",
            "line": 5138,
            "description": "Asynchronously watches the geolocation for changes to geolocation.  When a change occurs,\nthe successCallback is called with the new location.",
            "params": [
                {
                    "name": "successCallback",
                    "description": "The function to call each time the location data is available",
                    "type": "Function"
                },
                {
                    "name": "errorCallback",
                    "description": "The function to call when there is an error getting the location data. (OPTIONAL)",
                    "type": "Function"
                },
                {
                    "name": "options",
                    "description": "The options for getting the location data such as frequency. (OPTIONAL)",
                    "type": "PositionOptions"
                }
            ],
            "return": {
                "description": "String                       The watch id that must be passed to #clearWatch to stop watching."
            },
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/android/assets/www/cordova.js",
            "line": 5189,
            "description": "Clears the specified heading watch.",
            "params": [
                {
                    "name": "id",
                    "description": "The ID of the watch returned from #watchPosition",
                    "type": "String"
                }
            ],
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/android/assets/www/cordova.js",
            "line": 5229,
            "description": "Returns the string identifier for the client's current language.\nIt returns the language identifier string to the successCB callback with a\nproperties object as a parameter. If there is an error getting the language,\nthen the errorCB callback is invoked.",
            "params": [
                {
                    "name": "successCB",
                    "description": "",
                    "type": "Function"
                },
                {
                    "name": "errorCB",
                    "description": "",
                    "type": "Function"
                }
            ],
            "return": {
                "description": "Object.value : The language identifier",
                "type": "String"
            },
            "error": "GlobalizationError.UNKNOWN_ERROR\n\nExample\n   globalization.getPreferredLanguage(function (language) {alert('language:' + language.value + '\\n');},\n                               function () {});",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/android/assets/www/cordova.js",
            "line": 5251,
            "description": "Returns the string identifier for the client's current locale setting.\nIt returns the locale identifier string to the successCB callback with a\nproperties object as a parameter. If there is an error getting the locale,\nthen the errorCB callback is invoked.",
            "params": [
                {
                    "name": "successCB",
                    "description": "",
                    "type": "Function"
                },
                {
                    "name": "errorCB",
                    "description": "",
                    "type": "Function"
                }
            ],
            "return": {
                "description": "Object.value : The locale identifier",
                "type": "String"
            },
            "error": "GlobalizationError.UNKNOWN_ERROR\n\nExample\n   globalization.getLocaleName(function (locale) {alert('locale:' + locale.value + '\\n');},\n                               function () {});",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/android/assets/www/cordova.js",
            "line": 5274,
            "description": "Returns a date formatted as a string according to the client's user preferences and\ncalendar using the time zone of the client. It returns the formatted date string to the\nsuccessCB callback with a properties object as a parameter. If there is an error\nformatting the date, then the errorCB callback is invoked.\n\nThe defaults are: formatLenght=\"short\" and selector=\"date and time\"",
            "params": [
                {
                    "name": "date",
                    "description": "",
                    "type": "Date"
                },
                {
                    "name": "successCB",
                    "description": "",
                    "type": "Function"
                },
                {
                    "name": "errorCB",
                    "description": "",
                    "type": "Function"
                },
                {
                    "name": "options",
                    "description": "{optional}\n           formatLength {String}: 'short', 'medium', 'long', or 'full'\n           selector {String}: 'date', 'time', or 'date and time'",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "Object.value : The localized date string",
                "type": "String"
            },
            "error": "GlobalizationError.FORMATTING_ERROR\n\nExample\n   globalization.dateToString(new Date(),\n               function (date) {alert('date:' + date.value + '\\n');},\n               function (errorCode) {alert(errorCode);},\n               {formatLength:'short'});",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/android/assets/www/cordova.js",
            "line": 5306,
            "description": "Parses a date formatted as a string according to the client's user\npreferences and calendar using the time zone of the client and returns\nthe corresponding date object. It returns the date to the successCB\ncallback with a properties object as a parameter. If there is an error\nparsing the date string, then the errorCB callback is invoked.\n\nThe defaults are: formatLength=\"short\" and selector=\"date and time\"",
            "params": [
                {
                    "name": "dateString",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "successCB",
                    "description": "",
                    "type": "Function"
                },
                {
                    "name": "errorCB",
                    "description": "",
                    "type": "Function"
                },
                {
                    "name": "options",
                    "description": "{optional}\n           formatLength {String}: 'short', 'medium', 'long', or 'full'\n           selector {String}: 'date', 'time', or 'date and time'",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "Object.year : The four digit year\n           Object.month {Number}: The month from (0 - 11)\n           Object.day {Number}: The day from (1 - 31)\n           Object.hour {Number}: The hour from (0 - 23)\n           Object.minute {Number}: The minute from (0 - 59)\n           Object.second {Number}: The second from (0 - 59)\n           Object.millisecond {Number}: The milliseconds (from 0 - 999),\n                                       not available on all platforms",
                "type": "Number"
            },
            "error": "GlobalizationError.PARSING_ERROR\n\nExample\n   globalization.stringToDate('4/11/2011',\n               function (date) { alert('Month:' + date.month + '\\n' +\n                   'Day:' + date.day + '\\n' +\n                   'Year:' + date.year + '\\n');},\n               function (errorCode) {alert(errorCode);},\n               {selector:'date'});",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/android/assets/www/cordova.js",
            "line": 5347,
            "description": "Returns a pattern string for formatting and parsing dates according to the client's\nuser preferences. It returns the pattern to the successCB callback with a\nproperties object as a parameter. If there is an error obtaining the pattern,\nthen the errorCB callback is invoked.\n\nThe defaults are: formatLength=\"short\" and selector=\"date and time\"",
            "params": [
                {
                    "name": "successCB",
                    "description": "",
                    "type": "Function"
                },
                {
                    "name": "errorCB",
                    "description": "",
                    "type": "Function"
                },
                {
                    "name": "options",
                    "description": "{optional}\n           formatLength {String}: 'short', 'medium', 'long', or 'full'\n           selector {String}: 'date', 'time', or 'date and time'",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "Object.pattern : The date and time pattern for formatting and parsing dates.\n                                   The patterns follow Unicode Technical Standard #35\n                                   http://unicode.org/reports/tr35/tr35-4.html\n           Object.timezone {String}: The abbreviated name of the time zone on the client\n           Object.utc_offset {Number}: The current difference in seconds between the client's\n                                       time zone and coordinated universal time.\n           Object.dst_offset {Number}: The current daylight saving time offset in seconds\n                                       between the client's non-daylight saving's time zone\n                                       and the client's daylight saving's time zone.",
                "type": "String"
            },
            "error": "GlobalizationError.PATTERN_ERROR\n\nExample\n   globalization.getDatePattern(\n               function (date) {alert('pattern:' + date.pattern + '\\n');},\n               function () {},\n               {formatLength:'short'});",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/android/assets/www/cordova.js",
            "line": 5385,
            "description": "Returns an array of either the names of the months or days of the week\naccording to the client's user preferences and calendar. It returns the array of names to the\nsuccessCB callback with a properties object as a parameter. If there is an error obtaining the\nnames, then the errorCB callback is invoked.\n\nThe defaults are: type=\"wide\" and item=\"months\"",
            "params": [
                {
                    "name": "successCB",
                    "description": "",
                    "type": "Function"
                },
                {
                    "name": "errorCB",
                    "description": "",
                    "type": "Function"
                },
                {
                    "name": "options",
                    "description": "{optional}\n           type {String}: 'narrow' or 'wide'\n           item {String}: 'months', or 'days'",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "Object.value }: The array of names starting from either\n                                       the first month in the year or the\n                                       first day of the week.",
                "type": "ArrayString"
            },
            "error": "GlobalizationError.UNKNOWN_ERROR\n\nExample\n   globalization.getDateNames(function (names) {\n       for(var i = 0; i < names.value.length; i++) {\n           alert('Month:' + names.value[i] + '\\n');}},\n       function () {});",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/android/assets/www/cordova.js",
            "line": 5415,
            "description": "Returns whether daylight savings time is in effect for a given date using the client's\ntime zone and calendar. It returns whether or not daylight savings time is in effect\nto the successCB callback with a properties object as a parameter. If there is an error\nreading the date, then the errorCB callback is invoked.",
            "params": [
                {
                    "name": "date",
                    "description": "",
                    "type": "Date"
                },
                {
                    "name": "successCB",
                    "description": "",
                    "type": "Function"
                },
                {
                    "name": "errorCB",
                    "description": "",
                    "type": "Function"
                }
            ],
            "return": {
                "description": "Object.dst : The value \"true\" indicates that daylight savings time is\n                               in effect for the given date and \"false\" indicate that it is not.",
                "type": "Boolean"
            },
            "error": "GlobalizationError.UNKNOWN_ERROR\n\nExample\n   globalization.isDayLightSavingsTime(new Date(),\n               function (date) {alert('dst:' + date.dst + '\\n');}\n               function () {});",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/android/assets/www/cordova.js",
            "line": 5441,
            "description": "Returns the first day of the week according to the client's user preferences and calendar.\nThe days of the week are numbered starting from 1 where 1 is considered to be Sunday.\nIt returns the day to the successCB callback with a properties object as a parameter.\nIf there is an error obtaining the pattern, then the errorCB callback is invoked.",
            "params": [
                {
                    "name": "successCB",
                    "description": "",
                    "type": "Function"
                },
                {
                    "name": "errorCB",
                    "description": "",
                    "type": "Function"
                }
            ],
            "return": {
                "description": "Object.value : The number of the first day of the week.",
                "type": "Number"
            },
            "error": "GlobalizationError.UNKNOWN_ERROR\n\nExample\n   globalization.getFirstDayOfWeek(function (day)\n               { alert('Day:' + day.value + '\\n');},\n               function () {});",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/android/assets/www/cordova.js",
            "line": 5465,
            "description": "Returns a number formatted as a string according to the client's user preferences.\nIt returns the formatted number string to the successCB callback with a properties object as a\nparameter. If there is an error formatting the number, then the errorCB callback is invoked.\n\nThe defaults are: type=\"decimal\"",
            "params": [
                {
                    "name": "number",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "successCB",
                    "description": "",
                    "type": "Function"
                },
                {
                    "name": "errorCB",
                    "description": "",
                    "type": "Function"
                },
                {
                    "name": "options",
                    "description": "{optional}\n           type {String}: 'decimal', \"percent\", or 'currency'",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "Object.value : The formatted number string.",
                "type": "String"
            },
            "error": "GlobalizationError.FORMATTING_ERROR\n\nExample\n   globalization.numberToString(3.25,\n               function (number) {alert('number:' + number.value + '\\n');},\n               function () {},\n               {type:'decimal'});",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/android/assets/www/cordova.js",
            "line": 5493,
            "description": "Parses a number formatted as a string according to the client's user preferences and\nreturns the corresponding number. It returns the number to the successCB callback with a\nproperties object as a parameter. If there is an error parsing the number string, then\nthe errorCB callback is invoked.\n\nThe defaults are: type=\"decimal\"",
            "params": [
                {
                    "name": "numberString",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "successCB",
                    "description": "",
                    "type": "Function"
                },
                {
                    "name": "errorCB",
                    "description": "",
                    "type": "Function"
                },
                {
                    "name": "options",
                    "description": "{optional}\n           type {String}: 'decimal', \"percent\", or 'currency'",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "Object.value : The parsed number.",
                "type": "Number"
            },
            "error": "GlobalizationError.PARSING_ERROR\n\nExample\n   globalization.stringToNumber('1234.56',\n               function (number) {alert('Number:' + number.value + '\\n');},\n               function () { alert('Error parsing number');});",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/android/assets/www/cordova.js",
            "line": 5521,
            "description": "Returns a pattern string for formatting and parsing numbers according to the client's user\npreferences. It returns the pattern to the successCB callback with a properties object as a\nparameter. If there is an error obtaining the pattern, then the errorCB callback is invoked.\n\nThe defaults are: type=\"decimal\"",
            "params": [
                {
                    "name": "successCB",
                    "description": "",
                    "type": "Function"
                },
                {
                    "name": "errorCB",
                    "description": "",
                    "type": "Function"
                },
                {
                    "name": "options",
                    "description": "{optional}\n           type {String}: 'decimal', \"percent\", or 'currency'",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "Object.pattern : The number pattern for formatting and parsing numbers.\n                                   The patterns follow Unicode Technical Standard #35.\n                                   http://unicode.org/reports/tr35/tr35-4.html\n           Object.symbol {String}: The symbol to be used when formatting and parsing\n                                   e.g., percent or currency symbol.\n           Object.fraction {Number}: The number of fractional digits to use when parsing and\n                                   formatting numbers.\n           Object.rounding {Number}: The rounding increment to use when parsing and formatting.\n           Object.positive {String}: The symbol to use for positive numbers when parsing and formatting.\n           Object.negative: {String}: The symbol to use for negative numbers when parsing and formatting.\n           Object.decimal: {String}: The decimal symbol to use for parsing and formatting.\n           Object.grouping: {String}: The grouping symbol to use for parsing and formatting.",
                "type": "String"
            },
            "error": "GlobalizationError.PATTERN_ERROR\n\nExample\n   globalization.getNumberPattern(\n               function (pattern) {alert('Pattern:' + pattern.pattern + '\\n');},\n               function () {});",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/android/assets/www/cordova.js",
            "line": 5558,
            "description": "Returns a pattern string for formatting and parsing currency values according to the client's\nuser preferences and ISO 4217 currency code. It returns the pattern to the successCB callback with a\nproperties object as a parameter. If there is an error obtaining the pattern, then the errorCB\ncallback is invoked.",
            "params": [
                {
                    "name": "currencyCode",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "successCB",
                    "description": "",
                    "type": "Function"
                },
                {
                    "name": "errorCB",
                    "description": "",
                    "type": "Function"
                }
            ],
            "return": {
                "description": "Object.pattern : The currency pattern for formatting and parsing currency values.\n                                   The patterns follow Unicode Technical Standard #35\n                                   http://unicode.org/reports/tr35/tr35-4.html\n           Object.code {String}: The ISO 4217 currency code for the pattern.\n           Object.fraction {Number}: The number of fractional digits to use when parsing and\n                                   formatting currency.\n           Object.rounding {Number}: The rounding increment to use when parsing and formatting.\n           Object.decimal: {String}: The decimal symbol to use for parsing and formatting.\n           Object.grouping: {String}: The grouping symbol to use for parsing and formatting.",
                "type": "String"
            },
            "error": "GlobalizationError.FORMATTING_ERROR\n\nExample\n   globalization.getCurrencyPattern('EUR',\n               function (currency) {alert('Pattern:' + currency.pattern + '\\n');}\n               function () {});",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/android/assets/www/cordova.js",
            "line": 5651,
            "description": "Logging levels",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/android/assets/www/cordova.js",
            "line": 5677,
            "description": "Getter/Setter for the logging level\n\nReturns the current logging level.\n\nWhen a value is passed, sets the logging level to that value.\nThe values should be one of the following constants:\n   logger.LOG\n   logger.ERROR\n   logger.WARN\n   logger.INFO\n   logger.DEBUG\n\nThe value used determines which messages get printed.  The logging\nvalues above are in order, and only messages logged at the logging\nlevel or above will actually be displayed to the user.  E.g., the\ndefault level is WARN, so only messages logged with LOG, ERROR, or\nWARN will be displayed; INFO and DEBUG messages will be ignored.",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/android/assets/www/cordova.js",
            "line": 5707,
            "description": "Getter/Setter for the useConsole functionality\n\nWhen useConsole is true, the logger will log via the\nbrowser 'console' object.  Otherwise, it will use the\nnative Logger plugin.",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/android/assets/www/cordova.js",
            "line": 5736,
            "description": "Logs a message at the LOG level.\n\nParameters passed after message are used applied to\nthe message with utils.format()",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/android/assets/www/cordova.js",
            "line": 5744,
            "description": "Logs a message at the ERROR level.\n\nParameters passed after message are used applied to\nthe message with utils.format()",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/android/assets/www/cordova.js",
            "line": 5752,
            "description": "Logs a message at the WARN level.\n\nParameters passed after message are used applied to\nthe message with utils.format()",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/android/assets/www/cordova.js",
            "line": 5760,
            "description": "Logs a message at the INFO level.\n\nParameters passed after message are used applied to\nthe message with utils.format()",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/android/assets/www/cordova.js",
            "line": 5768,
            "description": "Logs a message at the DEBUG level.\n\nParameters passed after message are used applied to\nthe message with utils.format()",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/android/assets/www/cordova.js",
            "line": 5782,
            "description": "Logs a message at the specified level.\n\nParameters passed after message are used applied to\nthe message with utils.format()",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/android/assets/www/cordova.js",
            "line": 5887,
            "description": "Get connection info",
            "params": [
                {
                    "name": "successCallback",
                    "description": "The function to call when the Connection data is available",
                    "type": "Function"
                },
                {
                    "name": "errorCallback",
                    "description": "The function to call when there is an error getting the Connection data. (OPTIONAL)",
                    "type": "Function"
                }
            ],
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/android/assets/www/cordova.js",
            "line": 5955,
            "description": "Provides access to notifications on the device.",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/android/assets/www/cordova.js",
            "line": 5961,
            "description": "Open a native alert dialog, with a customizable title and button text.",
            "params": [
                {
                    "name": "message",
                    "description": "Message to print in the body of the alert",
                    "type": "String"
                },
                {
                    "name": "completeCallback",
                    "description": "The callback that is called when user clicks on a button.",
                    "type": "Function"
                },
                {
                    "name": "title",
                    "description": "Title of the alert dialog (default: Alert)",
                    "type": "String"
                },
                {
                    "name": "buttonLabel",
                    "description": "Label of the close button (default: OK)",
                    "type": "String"
                }
            ],
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/android/assets/www/cordova.js",
            "line": 5975,
            "description": "Open a native confirm dialog, with a customizable title and button text.\nThe result that the user selects is returned to the result callback.",
            "params": [
                {
                    "name": "message",
                    "description": "Message to print in the body of the alert",
                    "type": "String"
                },
                {
                    "name": "resultCallback",
                    "description": "The callback that is called when user clicks on a button.",
                    "type": "Function"
                },
                {
                    "name": "title",
                    "description": "Title of the alert dialog (default: Confirm)",
                    "type": "String"
                },
                {
                    "name": "buttonLabels",
                    "description": "Comma separated list of the labels of the buttons (default: 'OK,Cancel')",
                    "type": "String"
                }
            ],
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/android/assets/www/cordova.js",
            "line": 5990,
            "description": "Causes the device to vibrate.",
            "params": [
                {
                    "name": "mills",
                    "description": "The number of milliseconds to vibrate for.",
                    "type": "Integer"
                }
            ],
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/android/assets/www/cordova.js",
            "line": 5999,
            "description": "Causes the device to beep.\nOn Android, the default notification ringtone is played \"count\" times.",
            "params": [
                {
                    "name": "count",
                    "description": "The number of beeps.",
                    "type": "Integer"
                }
            ],
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/android/assets/www/cordova.js",
            "line": 6031,
            "description": "Request a file system in which to store application data.",
            "params": [
                {
                    "name": "type",
                    "description": "local file system type"
                },
                {
                    "name": "size",
                    "description": "indicates how much storage space, in bytes, the application expects to need"
                },
                {
                    "name": "successCallback",
                    "description": "invoked with a FileSystem object"
                },
                {
                    "name": "errorCallback",
                    "description": "invoked if error occurs retrieving file system"
                }
            ],
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/android/assets/www/cordova.js",
            "line": 6078,
            "description": "Look up file system Entry referred to by local URI.",
            "params": [
                {
                    "name": "uri",
                    "description": "URI referring to a local file or directory",
                    "type": "DOMString"
                },
                {
                    "name": "successCallback",
                    "description": "invoked with Entry object corresponding to URI"
                },
                {
                    "name": "errorCallback",
                    "description": "invoked if error occurs retrieving file system entry"
                }
            ],
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/android/assets/www/cordova.js",
            "line": 6164,
            "description": "Defines a property getter / setter for obj[key].",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/android/assets/www/cordova.js",
            "line": 6185,
            "description": "Defines a property getter for obj[key].",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/android/assets/www/cordova.js",
            "line": 6203,
            "description": "Returns whether the item was found in the array.",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/android/assets/www/cordova.js",
            "line": 6218,
            "description": "Returns an indication of whether the argument is an array or not",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/android/assets/www/cordova.js",
            "line": 6225,
            "description": "Returns an indication of whether the argument is a Date or not",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/android/assets/www/cordova.js",
            "line": 6232,
            "description": "Does a deep clone of the object.",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/android/assets/www/cordova.js",
            "line": 6259,
            "description": "Returns a wrapped version of the function",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/android/assets/www/cordova.js",
            "line": 6274,
            "description": "Create a UUID",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/android/assets/www/cordova.js",
            "line": 6285,
            "description": "Extends a child object from a parent object using classical inheritance\npattern.",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/android/assets/www/cordova.js",
            "line": 6301,
            "description": "Alerts a message in any available way: alert or console.log.",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/android/assets/www/cordova.js",
            "line": 6312,
            "description": "Formats a string and arguments following it ala sprintf()\n\nsee utils.vformat() for more information",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/android/assets/www/cordova.js",
            "line": 6322,
            "description": "Formats a string and arguments following it ala vsprintf()\n\nformat chars:\n  %j - format arg as JSON\n  %o - format arg as JSON\n  %c - format arg as ''\n  %% - replace with '%'\nany other char following % will format it's\narg via toString().\n\nfor rationale, see FireBug's Console API:\n   http://getfirebug.com/wiki/index.php/Console_API",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/android/assets/www/cordova.js",
            "line": 6422,
            "description": "Create all cordova objects once page has fully loaded and native side is ready.",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/build/YASMFDemoApp.app/www/framework/PKObject.js",
            "line": 1,
            "description": "BASE PKOBJECT\n\n*****************************************************************************\nThe Object class provides the top object that all other objects inherit\n from. This provides object inheritance via a subclass/superclass mechanism\n without having to worry about prototype or constructor inheritance.\nPKObjects provide simple subclassing and a limited form of KVO in the form\n of tags and tag listeners.",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/build/YASMFDemoApp.app/www/framework/PKObject.js",
            "line": 38,
            "description": "We need a way to provide inheritance. Most methods only provide\n inheritance across the constructor chain, not across any possible\n method. But for our purposes, we need to be able to provide for\n overriding any method (such as drawing, touch responses, etc.),\n and so we implement inheritance in a different way.\nFirst, the _classHierarchy, a private property, provides the\n inheritance tree. All objects inherit from \"Object\".",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/build/YASMFDemoApp.app/www/framework/PKObject.js",
            "line": 52,
            "description": "Objects are subclassed using this method. The newClass is the\n unique class name of the object (and should match the class'\n actual name.",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/build/YASMFDemoApp.app/www/framework/PKObject.js",
            "line": 64,
            "description": "getClass returns the current class of the object. The\n \"class\" property can be used as well. Note that there\n is no \"setter\" for this property; an object's class\n can *not* be changed.",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/build/YASMFDemoApp.app/www/framework/PKObject.js",
            "line": 78,
            "description": "Returns the super class for the given class. If the\n class is not supplied, the class is assumed to be the\n object's own class.\nThe property \"superClass\" uses this to return the\n object's direct superclass, but getSuperClassOfClass\n can be used to determine superclasses higher up\n the hierarchy.",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/build/YASMFDemoApp.app/www/framework/PKObject.js",
            "line": 105,
            "description": "_super is an object that stores overridden functions by class and method\n name. This is how we get the ability to arbitrarily override any method\n already present in the superclass.",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/build/YASMFDemoApp.app/www/framework/PKObject.js",
            "line": 114,
            "description": "Must be called prior to defining the overridden function as this moves\n the original function into the _super object. The functionName must\n match the name of the method exactly, since there may be a long tree\n of code that depends on it.",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/build/YASMFDemoApp.app/www/framework/PKObject.js",
            "line": 132,
            "description": "Calls a super function with up to 10 arguments.",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/build/YASMFDemoApp.app/www/framework/PKObject.js",
            "line": 151,
            "description": "initializes the object",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/build/YASMFDemoApp.app/www/framework/PKObject.js",
            "line": 161,
            "description": "Objects have some properties that we want all objects to have...",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/build/YASMFDemoApp.app/www/framework/PKObject.js",
            "line": 210,
            "description": "All objects subject notifications for events",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/build/YASMFDemoApp.app/www/framework/PKObject.js",
            "line": 256,
            "description": "//http://stackoverflow.com/a/11462081\nfunction clone(obj){\n    var clonedObjectsArray = [];\n    var originalObjectsArray = []; //used to remove the unique ids when finished\n    var next_objid = 0;\n\n    function objectId(obj) {\n        if (obj == null) return null;\n        if (obj.__obj_id == undefined){\n            obj.__obj_id = next_objid++;\n            originalObjectsArray[obj.__obj_id] = obj;\n        }\n        return obj.__obj_id;\n    }\n\n    function cloneRecursive(obj) {\n        if (null == obj || typeof obj == \"string\" || typeof obj == \"number\" || typeof obj == \"boolean\") return obj;\n\n        // Handle Date\n        if (obj instanceof Date) {\n            var copy = new Date();\n            copy.setTime(obj.getTime());\n            return copy;\n        }\n\n        // Handle Array\n        if (obj instanceof Array) {\n            var copy = [];\n            for (var i = 0; i < obj.length; ++i) {\n                copy[i] = cloneRecursive(obj[i]);\n            }\n            return copy;\n        }\n\n        // Handle Object\n        if (obj instanceof Object) {\n            if (clonedObjectsArray[objectId(obj)] != undefined)\n                return clonedObjectsArray[objectId(obj)];\n\n            var copy;\n            if (obj instanceof Function)//Handle Function\n                copy = function(){return obj.apply(this, arguments);};\n            else\n                copy = {};\n\n            clonedObjectsArray[objectId(obj)] = copy;\n\n            for (var attr in obj)\n                if (attr != \"__obj_id\" && obj.hasOwnProperty(attr))\n                    copy[attr] = cloneRecursive(obj[attr]);                 \n\n            return copy;\n        }       \n\n\n        throw new Error(\"Unable to copy obj! Its type isn't supported.\");\n    }\n    var cloneObj = cloneRecursive(obj);\n\n\n\n    //remove the unique ids\n    for (var i = 0; i < originalObjectsArray.length; i++)\n    {\n        delete originalObjectsArray[i].__obj_id;\n    };\n\n    return cloneObj;\n}",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/build/YASMFDemoApp.app/www/framework/device.js",
            "line": 1,
            "description": "DEVICE\n Author: Kerri Shotts\nThis library includes functions that reflect the device and its current\n state",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/build/YASMFDemoApp.app/www/framework/device.js",
            "line": 42,
            "description": "Returns the device platform, lowercased. If PKDEVICE.platformOverride is\n other than \"false\", it is returned instead.",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/build/YASMFDemoApp.app/www/framework/device.js",
            "line": 73,
            "description": "Returns the device's form factor. Possible values are \"tablet\" and\n \"phone\". If PKDEVICE.formFactorOverride is not false, it is returned\n instead.",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/build/YASMFDemoApp.app/www/framework/device.js",
            "line": 104,
            "description": "Determines if the device is in Portrait orientation.",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/build/YASMFDemoApp.app/www/framework/device.js",
            "line": 113,
            "description": "Determines if the device is in Landscape orientation.",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/build/YASMFDemoApp.app/www/framework/device.js",
            "line": 126,
            "description": "Determines if the device is a hiDPI device (aka retina)",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/build/YASMFDemoApp.app/www/framework/fileutil.js",
            "line": 1,
            "description": "FILEUTIL\n Author: Kerri Shotts\nThis library includes routines to deal with the FILE API, (which is... a bit\n painful.) The purpose of the library is to reduce the amount of work necessary\n to go through obtaining a file system, working with directories and files,\n etc. That isn't to say that we can eliminate callbacks or even callback\n chaining -- but it is significantly easier without all the intervening cruft,\n which is essentially (for all intents and purposes) boilerplate.\nIMPORTANT NOTE:\nThis library provides various conveniences that make referencing persistent\n and temporary storage a bit easier as well. For example, you can use a\n path like the following:\n    doc://photo.jpg   -->   /some/gobbledygook/yourApp/Documents/photo.jpg\n     tmp://photo.jpg   -->   /some/gobbledygook/yourApp/tmp/photo.jpg\nSeveral APIs (such as camera capture) may also refer to paths with\n \"file://localhost\" attached. The routines will gracefully remove this so that\n the reference is a true file.\nCONVENIENCE:\nFor those who are more comfortable with *nix/BSD commands, nearly each method\n has a version that correlates to a roughly *nix name. The parameters are the\n same, however.\nMETHODS\n   copyFileTo ( source, target, success, failure )         |   cp ()\n   moveFileTo ( source, target, success, failure )         |   mv ()\n   removeFile ( theFile, success, failure )                |   rm ()\n   renameFile ( source, newName, success, failure )        |   -\n   createFileWriter ( theFile, success, failure )          |   fcreate ()\n   writeFileData ( writer, theData, success, failure )     |   fwrite ()\nPLANNED METHODS\n  getListing ( path, filters, success, failure )          |    ls ()\n   createDirectory ( path, newDirectory, success, failure )|    mkdir()\n   removeDirectory ( path, theDirectory, success, failure )|    rmdir()\n   createFileReader ( theFile, success, failure )          |    fopen()\n   readFileData ( reader, success, failure )               |    fread()",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/build/YASMFDemoApp.app/www/framework/fileutil.js",
            "line": 101,
            "description": "Determines the persistent and temporary file systems prior\n to file operations. While it's unlikely that these will\n change during application execution, it certainly doesn't\n hurt to re-read them whenever possible (just in case!).\nWhen both are read, the success method is called. If we\n can't obtain one or the other, the failure method is called.",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/build/YASMFDemoApp.app/www/framework/fileutil.js",
            "line": 140,
            "description": "Handles substition strings within a file path.\n doc:/ translates to the persistent storage. We don't use \"//\" here\n        since the persistentFS doesn't have a trailing \"/\", so we leave\n        that in the original.\n  tmp:/ translates to the temporary storage.\n  file://localhost translates to nothing.",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/build/YASMFDemoApp.app/www/framework/fileutil.js",
            "line": 159,
            "description": "Copies the file identified by @source to the file identified by @target.\n If the copy is successful, success() is called. If not, failure() is\n called.\nThe target will generally be of the form \"doc://filename\", but it can\n be any path and file name that the application has access to.\nNOTE: Copying will fail if the target exists.",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/build/YASMFDemoApp.app/www/framework/fileutil.js",
            "line": 193,
            "description": "*nix convenience method.",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/build/YASMFDemoApp.app/www/framework/fileutil.js",
            "line": 203,
            "description": "Moves the file identified by @source to the file identified by @target.\n If the move is successful, success() is called. If not, failure() is\n called.\nThe target will generally be of the form \"doc://filename\", but it can\n be any path and file name that the application has access to.\nNOTE: The move will overwrite the target if it exists.",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/build/YASMFDemoApp.app/www/framework/fileutil.js",
            "line": 237,
            "description": "Convenience method that allows renaming a file in the same\n directory as the source. The source's path will prepended\n to the new name.\nNOTE: The move will overwrite the target if it exists.",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/build/YASMFDemoApp.app/www/framework/fileutil.js",
            "line": 252,
            "description": "*nix convenience method.",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/build/YASMFDemoApp.app/www/framework/fileutil.js",
            "line": 262,
            "description": "Removes the file identified by @theFile. The full path must\n be specified.",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/build/YASMFDemoApp.app/www/framework/fileutil.js",
            "line": 283,
            "description": "*nix convenience method.",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/build/YASMFDemoApp.app/www/framework/fileutil.js",
            "line": 293,
            "description": "Creates a fileWriter for @theFile. If successful, it will\n call success() with the created writer. If unsuccessful, it\n will call failure().\nOnce in success(), writeFileData() may be used to finish\n the writing of data to the file.\nNote: if the file exists, it will be overwritten.",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/build/YASMFDemoApp.app/www/framework/fileutil.js",
            "line": 320,
            "description": "*nix convenience method.",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/build/YASMFDemoApp.app/www/framework/fileutil.js",
            "line": 330,
            "description": "Writes @theData to the specified writer. When complete,\n success() will be called. If it fails, failure().",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/build/YASMFDemoApp.app/www/framework/fileutil.js",
            "line": 343,
            "description": "*nix convenience method.",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/build/YASMFDemoApp.app/www/framework/localization.js",
            "line": 2,
            "description": "localization.js\n Author: Kerri Shotts\nProvides simple localization, as described in Chapter 1 of PhoneGap HotShot.\nRelies on JQuery/Globalize.js, as found at https://github.com/jquery/globalize",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/build/YASMFDemoApp.app/www/framework/localization.js",
            "line": 49,
            "description": "Loads the JQuery Globalize script from the framework directory\n as well as the underlying cultures definitions.",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/build/YASMFDemoApp.app/www/framework/localization.js",
            "line": 59,
            "description": "Loads the appropriate locale from the JQuery Globalize script.",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/build/YASMFDemoApp.app/www/framework/localization.js",
            "line": 72,
            "description": "Sets the current locale for the JQuery Globalize script.",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/build/YASMFDemoApp.app/www/framework/localization.js",
            "line": 81,
            "description": "Add a translation to the existing translation matrix",
            "params": [
                {
                    "name": "locale:",
                    "description": "the locale for which to add the translation"
                },
                {
                    "name": "key:",
                    "description": "the key for the translation (generally the word or phrase)"
                },
                {
                    "name": "value:",
                    "description": "the translated value."
                }
            ],
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/build/YASMFDemoApp.app/www/framework/localization.js",
            "line": 103,
            "description": "Return the user's locale (e.g., en-US or fr-FR)\n for proper localization.",
            "return": {
                "description": "the user's current locale. If one can't be\n found, \"en-US\" is returned."
            },
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/build/YASMFDemoApp.app/www/framework/localization.js",
            "line": 177,
            "description": "Convenience function for translating text.",
            "params": [
                {
                    "name": "key:",
                    "description": "the text to translate. Case doesn't matter."
                },
                {
                    "name": "locale:",
                    "description": "the locale to use for translation. If not defined, defaults\n                    to the user's current locale."
                },
                {
                    "name": "parms:",
                    "description": "(optional) An indexed array of replacement values."
                }
            ],
            "return": {
                "description": "the translated text, or the original key if no translation was found."
            },
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/build/YASMFDemoApp.app/www/framework/localization.js",
            "line": 217,
            "description": "Convenience function for localizing numbers.",
            "params": [
                {
                    "name": "theNumber:",
                    "description": "the number to localize"
                },
                {
                    "name": "theFormat:",
                    "description": "the number of decimal places to use. Defaults to \"n\" if not supplied"
                },
                {
                    "name": "theLocale:",
                    "description": "(optional) the locale. If not specified, current locale is assumed."
                }
            ],
            "return": {
                "description": "the number formatted according to the locale. If the number of digits after\n the decimal point is less than the actual number of digits, rounding is performed. If\n the number of digits is more than the actual number of digits, zeroes are added."
            },
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/build/YASMFDemoApp.app/www/framework/localization.js",
            "line": 241,
            "description": "Convenience function for localizing currency.",
            "params": [
                {
                    "name": "theNumber:",
                    "description": "the number to localize"
                },
                {
                    "name": "theFormat:",
                    "description": "the number of decimal places, defaults to two if not specified"
                },
                {
                    "name": "theLocale:",
                    "description": "(optional) the locale. If not specified, current locale is assumed."
                }
            ],
            "return": {
                "description": "the number formatted according to the locale's currency. If the number of digits after\n the decimal point is less than the actual number of digits, rounding is performed. If\n the number of digits is more than the actual number of digits, zeroes are added."
            },
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/build/YASMFDemoApp.app/www/framework/localization.js",
            "line": 264,
            "description": "Convenience function for localizing percentages.",
            "params": [
                {
                    "name": "theNumber:",
                    "description": "the number to localize"
                },
                {
                    "name": "theFormat:",
                    "description": "the number of decimal places, defaults to two if not specified"
                },
                {
                    "name": "theLocale:",
                    "description": "(optional) the locale. If not specified, current locale is assumed."
                }
            ],
            "return": {
                "description": "the number formatted according to the locale's percent settings."
            },
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/build/YASMFDemoApp.app/www/framework/localization.js",
            "line": 285,
            "description": "Convenience function for localizing dates.",
            "params": [
                {
                    "name": "theDate:",
                    "description": "the date to localize"
                },
                {
                    "name": "theFormat:",
                    "description": "(optional) The format of the date; \"d\" is assumed if not provided."
                },
                {
                    "name": "theLocale:",
                    "description": "(optional) the locale. If not specified, current locale is assumed."
                }
            ],
            "return": {
                "description": "the date formatted according to the locale's settings."
            },
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/build/YASMFDemoApp.app/www/framework/pk-object.js",
            "line": 1,
            "description": "BASE PKOBJECT\n\n*****************************************************************************\nThe Object class provides the top object that all other objects inherit\n from. This provides object inheritance via a subclass/superclass mechanism\n without having to worry about prototype or constructor inheritance.\nPKObjects provide simple subclassing and a limited form of KVO in the form\n of tags and tag listeners.",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/build/YASMFDemoApp.app/www/framework/pk-object.js",
            "line": 42,
            "description": "We need a way to provide inheritance. Most methods only provide\n inheritance across the constructor chain, not across any possible\n method. But for our purposes, we need to be able to provide for\n overriding any method (such as drawing, touch responses, etc.),\n and so we implement inheritance in a different way.\nFirst, the _classHierarchy, a private property, provides the\n inheritance tree. All objects inherit from \"Object\".",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/build/YASMFDemoApp.app/www/framework/pk-object.js",
            "line": 56,
            "description": "Objects are subclassed using this method. The newClass is the\n unique class name of the object (and should match the class'\n actual name.",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/build/YASMFDemoApp.app/www/framework/pk-object.js",
            "line": 68,
            "description": "getClass returns the current class of the object. The\n \"class\" property can be used as well. Note that there\n is no \"setter\" for this property; an object's class\n can *not* be changed.",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/build/YASMFDemoApp.app/www/framework/pk-object.js",
            "line": 82,
            "description": "Returns the super class for the given class. If the\n class is not supplied, the class is assumed to be the\n object's own class.\nThe property \"superClass\" uses this to return the\n object's direct superclass, but getSuperClassOfClass\n can be used to determine superclasses higher up\n the hierarchy.",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/build/YASMFDemoApp.app/www/framework/pk-object.js",
            "line": 109,
            "description": "_super is an object that stores overridden functions by class and method\n name. This is how we get the ability to arbitrarily override any method\n already present in the superclass.",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/build/YASMFDemoApp.app/www/framework/pk-object.js",
            "line": 118,
            "description": "Must be called prior to defining the overridden function as this moves\n the original function into the _super object. The functionName must\n match the name of the method exactly, since there may be a long tree\n of code that depends on it.",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/build/YASMFDemoApp.app/www/framework/pk-object.js",
            "line": 136,
            "description": "Calls a super function with up to 10 arguments.",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/build/YASMFDemoApp.app/www/framework/pk-object.js",
            "line": 155,
            "description": "initializes the object",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/build/YASMFDemoApp.app/www/framework/pk-object.js",
            "line": 165,
            "description": "Objects have some properties that we want all objects to have...",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/build/YASMFDemoApp.app/www/framework/pk-object.js",
            "line": 214,
            "description": "All objects subject notifications for events",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/build/YASMFDemoApp.app/www/framework/pk-object.js",
            "line": 261,
            "description": "//http://stackoverflow.com/a/11462081\nfunction clone(obj){\n    var clonedObjectsArray = [];\n    var originalObjectsArray = []; //used to remove the unique ids when finished\n    var next_objid = 0;\n\n    function objectId(obj) {\n        if (obj == null) return null;\n        if (obj.__obj_id == undefined){\n            obj.__obj_id = next_objid++;\n            originalObjectsArray[obj.__obj_id] = obj;\n        }\n        return obj.__obj_id;\n    }\n\n    function cloneRecursive(obj) {\n        if (null == obj || typeof obj == \"string\" || typeof obj == \"number\" || typeof obj == \"boolean\") return obj;\n\n        // Handle Date\n        if (obj instanceof Date) {\n            var copy = new Date();\n            copy.setTime(obj.getTime());\n            return copy;\n        }\n\n        // Handle Array\n        if (obj instanceof Array) {\n            var copy = [];\n            for (var i = 0; i < obj.length; ++i) {\n                copy[i] = cloneRecursive(obj[i]);\n            }\n            return copy;\n        }\n\n        // Handle Object\n        if (obj instanceof Object) {\n            if (clonedObjectsArray[objectId(obj)] != undefined)\n                return clonedObjectsArray[objectId(obj)];\n\n            var copy;\n            if (obj instanceof Function)//Handle Function\n                copy = function(){return obj.apply(this, arguments);};\n            else\n                copy = {};\n\n            clonedObjectsArray[objectId(obj)] = copy;\n\n            for (var attr in obj)\n                if (attr != \"__obj_id\" && obj.hasOwnProperty(attr))\n                    copy[attr] = cloneRecursive(obj[attr]);                 \n\n            return copy;\n        }       \n\n\n        throw new Error(\"Unable to copy obj! Its type isn't supported.\");\n    }\n    var cloneObj = cloneRecursive(obj);\n\n\n\n    //remove the unique ids\n    for (var i = 0; i < originalObjectsArray.length; i++)\n    {\n        delete originalObjectsArray[i].__obj_id;\n    };\n\n    return cloneObj;\n}",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/build/YASMFDemoApp.app/www/framework/scroller.js",
            "line": 1,
            "description": "SCROLLER\n Author:  Kerri Shotts\n Version: 0.1 alpha\n License: MIT\nThis library is intended to be similar to iScroll-lite in that it should be\n a relatively fast method of scrolling content without being horribly laggy\n or cause incorrect \"clicks\" to be registered.\nThis library does *NOT* support physics-based scrolling, except for a small\n inertia animation at the end of a scroll. It is not intended to replicate\n native scrolling /at all/. There are no bounces at the top or bottom. There\n is no visible scroll bar either. Essentially, overflow:scroll as supported\n on iOS 5 with no bounce/inertia scrolling.\nConsider this library an experiment. The idea is to be simpler than iScroll\n to use -- for example, the scroller only needs to be created once -- it does\n not need to be refreshed when AJAX content loads. It is intended to be at\n least as fast as iScroll, if not a little faster. It is not, however,\n intended to be a native scrolling solution. At this time, I do not believe\n it truly possible or practice, and users will notice any non-native solution\n that tries to match, so why try?\nUsage:\nvar yourScroller = new SCROLLER.GenericScroller ( \"the_element_to_scroll\" );\nwhere you have the following DOM tree:\n    container_element\n     - the_element_to_scroll\nFuture Goals:\n - Detect native physics scrolling and use it when possible\n  - Detect native overflow:scroll (non-physics) and use it when possible\n  - Improve the inertial scrolling at end (this is a very rough implementation)\n  - Become irrelevant. I hope for a day when all mobile browsers can scroll\n    complex content natively and smoothly.\nSupported Platforms:\n - Android 2.3+\n  - iOS 4.3+\n  - probably any webkit browser?\nKnown Issues:\n  - A little too willing to call a scroll a \"click\".",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/build/YASMFDemoApp.app/www/framework/scroller.js",
            "line": 107,
            "description": "Attaches the scroller to a new element. The element MUST be contained within\n another element that can support the setting of scrollTop/Left.\nAny overflow values will be overridden. Any webkit transforms may also be\n overridden.",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/build/YASMFDemoApp.app/www/framework/scroller.js",
            "line": 148,
            "description": "Get the scroll position",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/build/YASMFDemoApp.app/www/framework/scroller.js",
            "line": 161,
            "description": "Scroll to a given location. If the location can't be scrolled to,\n the nearest location will be used.",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/build/YASMFDemoApp.app/www/framework/scroller.js",
            "line": 174,
            "description": "touchStart initializes all our values when a touch is received.",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/build/YASMFDemoApp.app/www/framework/scroller.js",
            "line": 204,
            "description": "When a touch moves, we'll receive the event here.",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/build/YASMFDemoApp.app/www/framework/scroller.js",
            "line": 238,
            "description": "When a finger is lifted from the screen, we'll get this event.\n We can determine whether or not it was a click if we scrolled at all,\n and if we scrolled a certain distance, we'll do a little inertial\n scrolling",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/build/YASMFDemoApp.app/www/framework/ui-base.js",
            "line": 1,
            "description": "UI-BASE\n Author: Kerri Shotts\n Version: 0.3\nThis provides the basics of the UI model, including poings, rects, and more.",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/build/YASMFDemoApp.app/www/framework/ui-base.js",
            "line": 37,
            "description": "Points are of the form { x: #, y: # }",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/build/YASMFDemoApp.app/www/framework/ui-base.js",
            "line": 50,
            "description": "offsets a point by the values in another point. For example,\n if pointA = { x:100, y:100 } and pointB = { x:-5, y:10 }, the\n returned point will be { x:95, y:110 }.",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/build/YASMFDemoApp.app/www/framework/ui-base.js",
            "line": 62,
            "description": "Sizes are similar to points, but they are of the form\n { w: width, h: height }",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/build/YASMFDemoApp.app/www/framework/ui-base.js",
            "line": 89,
            "description": "Rects are of the form { origin: point, size: size }, or\n { origin: {x: #, y: #}, size: {w: width, h: height} }",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/build/YASMFDemoApp.app/www/framework/ui-base.js",
            "line": 105,
            "description": "Offsets a rect's origin point by the supplied point.",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/build/YASMFDemoApp.app/www/framework/ui-base.js",
            "line": 115,
            "description": "Offsets a rect's origin by the origin of the second rect,\n and offsets the rect's size by the size of the second rect.\nThis implies that the second rect does not need to be \"real\",\n as in, it can have negative sizes and such.",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/build/YASMFDemoApp.app/www/framework/ui-base.js",
            "line": 130,
            "description": "Returns true if the two rects supplied intersect. Note that this\n will not work if the rectangles are non-canonical.",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/build/YASMFDemoApp.app/www/framework/ui-base.js",
            "line": 155,
            "description": "Think of these as constants, except you have to call them like a \n method.\nzeroPoint() returns a point of {0,0}\n zeroSize() returns a size of {0,0}\n zeroRect() returns a rect of { {0,0}, {0,0} }\n screenSize() returns a **point** representing the size of the screen (or browser).\n screenBounds() returns a **rect** representing the size of the screen (with a {0,0} origin).",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/build/YASMFDemoApp.app/www/framework/ui-base.js",
            "line": 173,
            "description": "fonts",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/build/YASMFDemoApp.app/www/framework/ui-base.js",
            "line": 237,
            "description": "Shadows",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/build/YASMFDemoApp.app/www/framework/ui-base.js",
            "line": 291,
            "description": "Colors",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/build/YASMFDemoApp.app/www/framework/ui-base.js",
            "line": 338,
            "description": "events",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/build/YASMFDemoApp.app/www/framework/ui-core.js",
            "line": 1,
            "description": "UI-CORE\n Author: Kerri Shotts\nThis script provides a lot of the core user interface framework, such as\n loading content via AJAX, transitions, and more.",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/build/YASMFDemoApp.app/www/framework/ui-core.js",
            "line": 84,
            "description": "Global back button handler, since doing it per-view and per-\n message is buggy. This will call backButtonPressed() on any\n active message or view. If said method isn't found, it will\n pop the view on its own.\nNOTE: if backButtonPressed() is defined, it is expected to\n pop the view, if the method is also a view. If the view is\n not popped, the back button will have no effect.\nSECOND NOTE: Since back buttons received in quick succession\n are problematic, we force the user to wait 1s before the next\n back button is accepted.",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/build/YASMFDemoApp.app/www/framework/ui-core.js",
            "line": 129,
            "description": "Initializes the application framework\n  - in this version of the framework, we force an orientation update.\n  - by default, we attach a global back button handler\n  - we deisable animations and transforms for Android and WP7.",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/build/YASMFDemoApp.app/www/framework/ui-core.js",
            "line": 177,
            "description": "Called on first-start and whenever the orientation changes. It updates the\n body's class to reflect the device, formfactor, orientation, and scaling.",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/build/YASMFDemoApp.app/www/framework/ui-core.js",
            "line": 261,
            "description": "Shows a view and pushes it on the viewStack. NO ANIMATION.\n DOES NOT PROPERLY CALL viewWillHide/viewDidHide of any view, since there\n may be no view visible.",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/build/YASMFDemoApp.app/www/framework/ui-core.js",
            "line": 288,
            "description": "Hides a view and pops it off the viewStack. NO ANIMATION.\n DOES NOT ATTEMPT TO CALL viewWillShow or viewDidShow of any view\n on the stack, as there may not be any view visible.",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/build/YASMFDemoApp.app/www/framework/ui-core.js",
            "line": 314,
            "description": "Swaps a view on the stack with the desired view. NO ANIMATION.",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/build/YASMFDemoApp.app/www/framework/ui-core.js",
            "line": 505,
            "description": "Shows a view WITH ANIMATION and pushes it onto the view stack.\n The animation is a slide from right to left.",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/build/YASMFDemoApp.app/www/framework/ui-core.js",
            "line": 664,
            "description": "Hides a view WITH ANIMATION and pops it from the stack.",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/build/YASMFDemoApp.app/www/framework/ui-core.js",
            "line": 924,
            "description": "Applies touch listeners to various items in the dom.\nIn this version of the framework, we apply it to BUTTONs.",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/build/YASMFDemoApp.app/www/framework/ui-gestures.js",
            "line": 1,
            "description": "UI-GESTURES\n Author:  Kerri Shotts\n Version: 0.1 alpha\n License: MIT\nA simple, no-frills gesture recognizer. Permits long-press recognition,\n horizontal swipe recognition, and vertical swipe recognition. Recognizing\n swipes in a particular direction (left, right, up, down) should be easy to\n add later.\nThe SimpleGesture class represents the basic recognizer -- it implements all\n the tracking of touch and mouse events. Every 100ms it calls\n a recognition function, which by default does nothing. Essentially, Simple-\n Gesture is abstract. This method is expected to be overridden by a specific\n recognizer, which the LongPressGesture, HorizontalSwipeGesture, and\n VerticalSwipeGesture do.\nThe LongPressGesture will fire off an event when a longpress is recognized.\n How this is recognized is partially defined by the caller -- that is,\n two durations can be supplied. By default, the long-press is recognized at\n 1s and cancelled at 3s (assuming no previous recognition). It is also\n cancelled should any movement outside of a 25px radius occur.\nThe HorizontalSwipeGesture and VerticalSwipeGesture will fire off an event\n when a swipe in the given axis is detected. This swipe is detected when the\n length of the swipe exceeds 75px (or the provided override), and will be\n fired as long as the duration of the swipe is less than the cancel duration\n (3s by default). The line must not deviate by more than 25px in the specified\n axis, or the gesture will fail to be recognized.\nUsage:\nvar anElement = document.getElementById(\"abc\");\n var aLongPressGesture = new GESTURES.LongPressGesture\n                             ( anElement, theFunctionToCallWhenRecognized,\n                               [ thePressDuration, [ theCancelDelay ]] );\nvar aHorizontalSwipeGesture = new GESTURES.HorizontalSwipeGesture\n                               ( anElement, theFunctionToCallWhenRecognized,\n                                 [ theSwipeLength, [ theCancelDelay ]] );\nvar aVerticalSwipeGesture = new GESTURES.VerticalSwipeGesture\n                             ( anElement, theFunctionToCallWhenRecognized,\n                               [ theSwipeLength, [ theCancelDelay ]] );\n\nWhere: anElement is an HTML DOM element\n        theFunctionToCallWhenRecognized is a function that will be called\n            when the gesture is recognized. It will be passed the recognizer,\n            and as such, one can store & retrieve data in this manner:\n                aLongPressGesture.data = \"Hello\";\n                 function theFunctionToCallWhenRecognized ( gr )\n                 { alert (gr.data); }\n           This will generate an alert of \"Hello\" when the element is long-\n            pressed.\n       thePressDuration: Optional, defaults to 1s. The amount of time required\n            to recognize a long-press.\n        theSwipeLength: Optional, defaults to 75px. The length of a swipe\n            required to recognize a swipe.\n        theCancelDelay: Optional, defaults to 3s. If a gesture is not recognized\n            prior to this delay, the gesture is cancelled, that is, it will\n            never be recognized.",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/build/YASMFDemoApp.app/www/framework/ui-label.js",
            "line": 1,
            "description": "UI-LABEL\n Author: Kerri Shotts\n Version: 0.3\nUI-LABEL provides the UI.Label object",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/build/YASMFDemoApp.app/www/framework/ui-label.js",
            "line": 48,
            "description": "labels have the following properties:\n  - text (properlly innerHTML)\n  - textColor ( font Color )\n  - shadow\n  - shadowColor\n  - shadowOffset\n  - textAlignment\n  - font",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/build/YASMFDemoApp.app/www/framework/ui-label.js",
            "line": 124,
            "description": "init",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/build/YASMFDemoApp.app/www/framework/ui-msg.js",
            "line": 1,
            "description": "UI-MSG\n Author: Kerri Shotts\nThis script provides a mechanism by which alerts, prompts, and confirmations\n can be displayed to the end user.",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/build/YASMFDemoApp.app/www/framework/ui-view.js",
            "line": 1,
            "description": "UI-VIEW\n Author: Kerri Shotts\n Version: 0.3\nUI-VIEW provides the UI.View object",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/build/YASMFDemoApp.app/www/framework/ui-view.js",
            "line": 53,
            "description": "All views have direct DOM representations",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/build/YASMFDemoApp.app/www/framework/ui-view.js",
            "line": 59,
            "description": "All views have subviews",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/build/YASMFDemoApp.app/www/framework/ui-view.js",
            "line": 97,
            "description": "All views have bounds and frames.",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/build/YASMFDemoApp.app/www/framework/ui-view.js",
            "line": 203,
            "description": "recalculates the element's position based on\n the frame. It also calls calcElement() for the\n object, if defined. After that, it calls the\n _calcElement for every subview, in case they\n decide to be re-positioned.",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/build/YASMFDemoApp.app/www/framework/ui-view.js",
            "line": 256,
            "description": "Every view has a background color, even if it is transparent.",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/build/YASMFDemoApp.app/www/framework/ui-view.js",
            "line": 276,
            "description": "Every view can be shown or hidden",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/build/YASMFDemoApp.app/www/framework/ui-view.js",
            "line": 300,
            "description": "Every view has opacity",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/build/YASMFDemoApp.app/www/framework/ui-view.js",
            "line": 322,
            "description": "Views can override their scrolling",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/build/YASMFDemoApp.app/www/framework/ui-view.js",
            "line": 340,
            "description": "event processing",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/build/YASMFDemoApp.app/www/framework/ui-view.js",
            "line": 386,
            "description": "init",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/build/YASMFDemoApp.app/www/framework/utility.js",
            "line": 1,
            "description": "UTILITY\n Author: Kerri Shotts\nThis library includes simple utility functions",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/build/YASMFDemoApp.app/www/framework/utility.js",
            "line": 46,
            "description": "Checks to see if the dependency has already been loaded.",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/build/YASMFDemoApp.app/www/framework/utility.js",
            "line": 105,
            "description": "Returns an element specified by elementId. Similar to (but not exactly like) jQuery's $()",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/build/YASMFDemoApp.app/www/framework/utility.js",
            "line": 115,
            "description": "Returns an element specified by elementId, but with localization. Localization assumes\n you have at least one element of the form <elementId_enus>, and that all other localized\n elements have the locale after the elementId appended with an underscore.\n (eg: thisElementIsLocalized_enus and thisElementIsLocalized_eses)",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/build/YASMFDemoApp.app/www/framework/utility.js",
            "line": 153,
            "description": "Similar to $$. Returns all classes matching a selector.",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/build/YASMFDemoApp.app/www/framework/utility.js",
            "line": 163,
            "description": "Utility function to delay execution of code",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/build/YASMFDemoApp.app/www/framework/utility.js",
            "line": 172,
            "description": "Loads a file or URL and returns it to the completion\n handler. The completion handler must be of the form\n fn(success/failure, data).",
            "params": [
                {
                    "name": "theFileName",
                    "description": "the file or URL to load"
                },
                {
                    "name": "aSync",
                    "description": "if TRUE, load asynchronously"
                },
                {
                    "name": "completion",
                    "description": "completion block"
                }
            ],
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/build/YASMFDemoApp.app/www/framework/utility.js",
            "line": 272,
            "description": "Javascript doesn't provide any native include functionality,\n which tends to bloat code and result in long scripts that are\n brittle. Here's our tiny effort to help stem the tide and\n make Javascript just a /little/ nicer.\nNOTE: includes are loaded SYNCHRONOUSLY. This is done as further\n includes may rely upon the one being loaded now. However, it does\n mean that larger files may take longer to process.",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/build/YASMFDemoApp.app/www/framework/utility.js",
            "line": 314,
            "description": "Loads an HTML fragment, creates a DIV, and adds it to the DOM.\n Any script tags inside will be executed.",
            "params": [
                {
                    "name": "theFileName",
                    "description": "the file or URL to laod"
                },
                {
                    "name": "options",
                    "description": "An array of options, as follows:"
                },
                {
                    "name": "aSync",
                    "description": "Determines if the file is loaded\n                                 asynchronously or not."
                },
                {
                    "name": "id",
                    "description": "The ID to attach to the DIV created\n                                 to surround the content."
                },
                {
                    "name": "className",
                    "description": "The class name to attach to the DIV\n                                 created to surround the content."
                },
                {
                    "name": "attachTo",
                    "description": "Indicates the element to append the\n                                 content to. If not specified,\n                                 document.body is used."
                },
                {
                    "name": "completion",
                    "description": "A function called when loading is\n                              complete. Of the form fn ( successOrFailure )\n                              so that success or failure of the load\n                              can be determined."
                }
            ],
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/build/YASMFDemoApp.app/www/framework/utility.js",
            "line": 407,
            "description": "Retrieves a JSON string from the specified URL, and executes completion.\n Completion must be of the form ( success, data ).",
            "params": [
                {
                    "name": "theURL",
                    "description": "the URL or Filename"
                },
                {
                    "name": "completion",
                    "description": "function of the from ( success, data )"
                }
            ],
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/build/YASMFDemoApp.app/www/framework/utility.js",
            "line": 442,
            "description": "Loads a URL in a popup window. Uses ChildBrowser for PG 2.2.x or\n lower, and in-app browser for 2.3 or higher.",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/build/YASMFDemoApp.app/www/framework/utility.js",
            "line": 476,
            "description": "instanceOfTemplate returns an HTML string ready for insertion into the DOM\n as an instance of the supplied template (templateElement). Any %VAR% are\n replaced by VAR from the replacements object.",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/build/YASMFDemoApp.app/www/framework/utility.js",
            "line": 496,
            "description": "Filename Handling",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/build/YASMFDemoApp.app/www/cordova.js",
            "line": 98,
            "description": "Listen for DOMContentLoaded and notify our channel subscribers.",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/build/YASMFDemoApp.app/www/cordova.js",
            "line": 108,
            "description": "Intercept calls to addEventListener + removeEventListener and handle deviceready,\nresume, and pause events.",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/build/YASMFDemoApp.app/www/cordova.js",
            "line": 117,
            "description": "Houses custom event handlers to intercept on document + window event listeners.",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/build/YASMFDemoApp.app/www/cordova.js",
            "line": 183,
            "description": "Methods to add/remove your own addEventListener hijacking on document + window.",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/build/YASMFDemoApp.app/www/cordova.js",
            "line": 201,
            "description": "Retrieve original event handlers that were replaced by Cordova",
            "return": {
                "description": "object"
            },
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/build/YASMFDemoApp.app/www/cordova.js",
            "line": 210,
            "description": "Method to fire event from native code\nbNoDetach is required for events which cause an exception which needs to be caught in native code",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/build/YASMFDemoApp.app/www/cordova.js",
            "line": 240,
            "description": "Plugin callback mechanism.",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/build/YASMFDemoApp.app/www/cordova.js",
            "line": 260,
            "description": "Called by native code when returning successful result from an action.",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/build/YASMFDemoApp.app/www/cordova.js",
            "line": 271,
            "description": "Called by native code when returning error result from an action.",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/build/YASMFDemoApp.app/www/cordova.js",
            "line": 284,
            "description": "Called by native code when returning the result from an action.",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/build/YASMFDemoApp.app/www/cordova.js",
            "line": 462,
            "description": "Merge properties from one object onto another recursively.  Properties from\nthe src object will overwrite existing target property.",
            "params": [
                {
                    "name": "target",
                    "description": "Object to merge properties into."
                },
                {
                    "name": "src",
                    "description": "Object to merge properties from."
                }
            ],
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/build/YASMFDemoApp.app/www/cordova.js",
            "line": 507,
            "description": "Custom pub-sub \"channel\" that can have functions subscribed to it\nThis object is used to define and control firing of events for\ncordova initialization, as well as for custom events thereafter.\n\nThe order of events during page load and Cordova startup is as follows:\n\nonDOMContentLoaded*         Internal event that is received when the web page is loaded and parsed.\nonNativeReady*              Internal event that indicates the Cordova native side is ready.\nonCordovaReady*             Internal event fired when all Cordova JavaScript objects have been created.\nonCordovaInfoReady*         Internal event fired when device properties are available.\nonCordovaConnectionReady*   Internal event fired when the connection property has been set.\nonDeviceReady*              User event fired to indicate that Cordova is ready\nonResume                    User event fired to indicate a start/resume lifecycle event\nonPause                     User event fired to indicate a pause lifecycle event\nonDestroy*                  Internal event fired when app is being destroyed (User should use window.onunload event, not this one).\n\nThe events marked with an * are sticky. Once they have fired, they will stay in the fired state.\nAll listeners that subscribe after the event is fired will be executed right away.\n\nThe only Cordova events that user code should register for are:\n     deviceready           Cordova native code is initialized and Cordova APIs can be called from JavaScript\n     pause                 App has moved to background\n     resume                App has returned to foreground\n\nListeners can be registered as:\n     document.addEventListener(\"deviceready\", myDeviceReadyListener, false);\n     document.addEventListener(\"resume\", myResumeListener, false);\n     document.addEventListener(\"pause\", myPauseListener, false);\n\nThe DOM lifecycle events should be used for saving and restoring state\n     window.onload\n     window.onunload",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/build/YASMFDemoApp.app/www/cordova.js",
            "line": 543,
            "description": "Channel",
            "is_constructor": 1,
            "params": [
                {
                    "name": "type",
                    "description": "String the channel name"
                }
            ],
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/build/YASMFDemoApp.app/www/cordova.js",
            "line": 563,
            "description": "Calls the provided function only after all of the channels specified\nhave been fired. All channels must be sticky channels.",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/build/YASMFDemoApp.app/www/cordova.js",
            "line": 588,
            "description": "cordova Channels that must fire before \"deviceready\" is fired.",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/build/YASMFDemoApp.app/www/cordova.js",
            "line": 594,
            "description": "Indicate that a feature needs to be initialized before it is ready to be used.\nThis holds up Cordova's \"deviceready\" event until the feature has been initialized\nand Cordova.initComplete(feature) is called.",
            "params": [
                {
                    "name": "feature",
                    "description": "The unique feature name",
                    "type": "String"
                }
            ],
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/build/YASMFDemoApp.app/www/cordova.js",
            "line": 609,
            "description": "Indicate that initialization code has completed and the feature is ready to be used.",
            "params": [
                {
                    "name": "feature",
                    "description": "The unique feature name",
                    "type": "String"
                }
            ],
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/build/YASMFDemoApp.app/www/cordova.js",
            "line": 626,
            "description": "Subscribes the given function to the channel. Any time that\nChannel.fire is called so too will the function.\nOptionally specify an execution context for the function\nand a guid that can be used to stop subscribing to the channel.\nReturns the guid.",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/build/YASMFDemoApp.app/www/cordova.js",
            "line": 662,
            "description": "Unsubscribes the function with the given guid from the channel.",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/build/YASMFDemoApp.app/www/cordova.js",
            "line": 680,
            "description": "Calls all functions subscribed to this channel.",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/build/YASMFDemoApp.app/www/cordova.js",
            "line": 780,
            "description": "Creates a gap bridge iframe used to notify the native code about queued\ncommands.",
            "access": "private",
            "tagname": "",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/build/YASMFDemoApp.app/www/cordova.js",
            "line": 1138,
            "description": "Gets a picture from source defined by \"options.sourceType\", and returns the\nimage as defined by the \"options.destinationType\" option.\n\nThe defaults are sourceType=CAMERA and destinationType=FILE_URI.",
            "params": [
                {
                    "name": "successCallback",
                    "description": "",
                    "type": "Function"
                },
                {
                    "name": "errorCallback",
                    "description": "",
                    "type": "Function"
                },
                {
                    "name": "options",
                    "description": "",
                    "type": "Object"
                }
            ],
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/build/YASMFDemoApp.app/www/cordova.js",
            "line": 1219,
            "description": "A handle to an image picker popover.",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/build/YASMFDemoApp.app/www/cordova.js",
            "line": 1238,
            "description": "Encapsulates options for iOS Popover image picker",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/build/YASMFDemoApp.app/www/cordova.js",
            "line": 1258,
            "description": "Encapsulates all audio capture operation configuration options.",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/build/YASMFDemoApp.app/www/cordova.js",
            "line": 1277,
            "description": "The CaptureError interface encapsulates all errors in the Capture API.",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/build/YASMFDemoApp.app/www/cordova.js",
            "line": 1302,
            "description": "Encapsulates all image capture operation configuration options.",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/build/YASMFDemoApp.app/www/cordova.js",
            "line": 1319,
            "description": "Encapsulates all video capture operation configuration options.",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/build/YASMFDemoApp.app/www/cordova.js",
            "line": 1338,
            "description": "CompassError.\nAn error code assigned by an implementation when an error has occurred",
            "is_constructor": 1,
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/build/YASMFDemoApp.app/www/cordova.js",
            "line": 1371,
            "description": "Encapsulates a set of parameters that the capture device supports.",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/build/YASMFDemoApp.app/www/cordova.js",
            "line": 1392,
            "description": "Network status",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/build/YASMFDemoApp.app/www/cordova.js",
            "line": 1416,
            "description": "Converts primitives into Complex Object\nCurrently only used for Date fields",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/build/YASMFDemoApp.app/www/cordova.js",
            "line": 1430,
            "description": "Converts Complex objects into primitives\nOnly conversion at present is for Dates.",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/build/YASMFDemoApp.app/www/cordova.js",
            "line": 1454,
            "description": "Contains information about a single contact.",
            "is_constructor": 1,
            "params": [
                {
                    "name": "id",
                    "description": "unique identifier",
                    "type": "DOMString"
                },
                {
                    "name": "displayName",
                    "description": "",
                    "type": "DOMString"
                },
                {
                    "name": "name",
                    "description": "",
                    "type": "ContactName"
                },
                {
                    "name": "nickname",
                    "description": "",
                    "type": "DOMString"
                },
                {
                    "name": "phoneNumbers",
                    "description": "array of phone numbers",
                    "type": "Array.<ContactField>"
                },
                {
                    "name": "emails",
                    "description": "array of email addresses",
                    "type": "Array.<ContactField>"
                },
                {
                    "name": "addresses",
                    "description": "array of addresses",
                    "type": "Array.<ContactAddress>"
                },
                {
                    "name": "ims",
                    "description": "instant messaging user ids",
                    "type": "Array.<ContactField>"
                },
                {
                    "name": "organizations",
                    "description": "",
                    "type": "Array.<ContactOrganization>"
                },
                {
                    "name": "birthday",
                    "description": "contact's birthday",
                    "type": "DOMString"
                },
                {
                    "name": "note",
                    "description": "user notes about contact",
                    "type": "DOMString"
                },
                {
                    "name": "photos",
                    "description": "",
                    "type": "Array.<ContactField>"
                },
                {
                    "name": "categories",
                    "description": "",
                    "type": "Array.<ContactField>"
                },
                {
                    "name": "urls",
                    "description": "contact's web sites",
                    "type": "Array.<ContactField>"
                }
            ],
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/build/YASMFDemoApp.app/www/cordova.js",
            "line": 1491,
            "description": "Removes contact from device storage.",
            "params": [
                {
                    "name": "successCB",
                    "description": "success callback"
                },
                {
                    "name": "errorCB",
                    "description": "error callback"
                }
            ],
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/build/YASMFDemoApp.app/www/cordova.js",
            "line": 1509,
            "description": "Creates a deep copy of this Contact.\nWith the contact ID set to null.",
            "return": {
                "description": "copy of this Contact"
            },
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/build/YASMFDemoApp.app/www/cordova.js",
            "line": 1539,
            "description": "Persists contact to device storage.",
            "params": [
                {
                    "name": "successCB",
                    "description": "success callback"
                },
                {
                    "name": "errorCB",
                    "description": "error callback"
                }
            ],
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/build/YASMFDemoApp.app/www/cordova.js",
            "line": 1573,
            "description": "Contact address.",
            "is_constructor": 1,
            "params": [
                {
                    "name": "id",
                    "description": "unique identifier, should only be set by native code",
                    "type": "DOMString"
                },
                {
                    "name": "formatted",
                    "description": "// NOTE: not a W3C standard"
                },
                {
                    "name": "streetAddress",
                    "description": ""
                },
                {
                    "name": "locality",
                    "description": ""
                },
                {
                    "name": "region",
                    "description": ""
                },
                {
                    "name": "postalCode",
                    "description": ""
                },
                {
                    "name": "country",
                    "description": ""
                }
            ],
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/build/YASMFDemoApp.app/www/cordova.js",
            "line": 1604,
            "description": "ContactError.\nAn error code assigned by an implementation when an error has occurred",
            "is_constructor": 1,
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/build/YASMFDemoApp.app/www/cordova.js",
            "line": 1613,
            "description": "Error codes",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/build/YASMFDemoApp.app/www/cordova.js",
            "line": 1631,
            "description": "Generic contact field.",
            "is_constructor": 1,
            "params": [
                {
                    "name": "id",
                    "description": "unique identifier, should only be set by native code // NOTE: not a W3C standard",
                    "type": "DOMString"
                },
                {
                    "name": "type",
                    "description": ""
                },
                {
                    "name": "value",
                    "description": ""
                },
                {
                    "name": "pref",
                    "description": ""
                }
            ],
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/build/YASMFDemoApp.app/www/cordova.js",
            "line": 1653,
            "description": "ContactFindOptions.",
            "is_constructor": 1,
            "params": [
                {
                    "name": "filter",
                    "description": "used to match contacts against"
                },
                {
                    "name": "multiple",
                    "description": "boolean used to determine if more than one contact should be returned"
                }
            ],
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/build/YASMFDemoApp.app/www/cordova.js",
            "line": 1672,
            "description": "Contact name.",
            "is_constructor": 1,
            "params": [
                {
                    "name": "formatted",
                    "description": "// NOTE: not part of W3C standard"
                },
                {
                    "name": "familyName",
                    "description": ""
                },
                {
                    "name": "givenName",
                    "description": ""
                },
                {
                    "name": "middle",
                    "description": ""
                },
                {
                    "name": "prefix",
                    "description": ""
                },
                {
                    "name": "suffix",
                    "description": ""
                }
            ],
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/build/YASMFDemoApp.app/www/cordova.js",
            "line": 1698,
            "description": "Contact organization.",
            "is_constructor": 1,
            "params": [
                {
                    "name": "id",
                    "description": "unique identifier, should only be set by native code // NOTE: not a W3C standard",
                    "type": "DOMString"
                },
                {
                    "name": "name",
                    "description": ""
                },
                {
                    "name": "dept",
                    "description": ""
                },
                {
                    "name": "title",
                    "description": ""
                },
                {
                    "name": "startDate",
                    "description": ""
                },
                {
                    "name": "endDate",
                    "description": ""
                },
                {
                    "name": "location",
                    "description": ""
                },
                {
                    "name": "desc",
                    "description": ""
                }
            ],
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/build/YASMFDemoApp.app/www/cordova.js",
            "line": 1727,
            "description": "This class contains position information.",
            "params": [
                {
                    "name": "lat",
                    "description": "",
                    "type": "Object"
                },
                {
                    "name": "lng",
                    "description": "",
                    "type": "Object"
                },
                {
                    "name": "alt",
                    "description": "",
                    "type": "Object"
                },
                {
                    "name": "acc",
                    "description": "",
                    "type": "Object"
                },
                {
                    "name": "head",
                    "description": "",
                    "type": "Object"
                },
                {
                    "name": "vel",
                    "description": "",
                    "type": "Object"
                },
                {
                    "name": "altacc",
                    "description": "",
                    "type": "Object"
                }
            ],
            "is_constructor": 1,
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/build/YASMFDemoApp.app/www/cordova.js",
            "line": 1739,
            "description": "The latitude of the position.",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/build/YASMFDemoApp.app/www/cordova.js",
            "line": 1743,
            "description": "The longitude of the position,",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/build/YASMFDemoApp.app/www/cordova.js",
            "line": 1747,
            "description": "The accuracy of the position.",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/build/YASMFDemoApp.app/www/cordova.js",
            "line": 1751,
            "description": "The altitude of the position.",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/build/YASMFDemoApp.app/www/cordova.js",
            "line": 1755,
            "description": "The direction the device is moving at the position.",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/build/YASMFDemoApp.app/www/cordova.js",
            "line": 1759,
            "description": "The velocity with which the device is moving at the position.",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/build/YASMFDemoApp.app/www/cordova.js",
            "line": 1768,
            "description": "The altitude accuracy of the position.",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/build/YASMFDemoApp.app/www/cordova.js",
            "line": 1788,
            "description": "An interface representing a directory on the file system.\n\n{boolean} isFile always false (readonly)\n{boolean} isDirectory always true (readonly)\n{DOMString} name of the directory, excluding the path leading to it (readonly)\n{DOMString} fullPath the absolute full path to the directory (readonly)\nTODO: implement this!!! {FileSystem} filesystem on which the directory resides (readonly)",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/build/YASMFDemoApp.app/www/cordova.js",
            "line": 1803,
            "description": "Creates a new DirectoryReader to read entries from this directory",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/build/YASMFDemoApp.app/www/cordova.js",
            "line": 1810,
            "description": "Creates or looks up a directory",
            "params": [
                {
                    "name": "path",
                    "description": "either a relative or absolute path from this directory in which to look up or create a directory",
                    "type": "DOMString"
                },
                {
                    "name": "options",
                    "description": "to create or exclusively create the directory",
                    "type": "Flags"
                },
                {
                    "name": "successCallback",
                    "description": "is called with the new entry",
                    "type": "Function"
                },
                {
                    "name": "errorCallback",
                    "description": "is called with a FileError",
                    "type": "Function"
                }
            ],
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/build/YASMFDemoApp.app/www/cordova.js",
            "line": 1830,
            "description": "Deletes a directory and all of it's contents",
            "params": [
                {
                    "name": "successCallback",
                    "description": "is called with no parameters",
                    "type": "Function"
                },
                {
                    "name": "errorCallback",
                    "description": "is called with a FileError",
                    "type": "Function"
                }
            ],
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/build/YASMFDemoApp.app/www/cordova.js",
            "line": 1844,
            "description": "Creates or looks up a file",
            "params": [
                {
                    "name": "path",
                    "description": "either a relative or absolute path from this directory in which to look up or create a file",
                    "type": "DOMString"
                },
                {
                    "name": "options",
                    "description": "to create or exclusively create the file",
                    "type": "Flags"
                },
                {
                    "name": "successCallback",
                    "description": "is called with the new entry",
                    "type": "Function"
                },
                {
                    "name": "errorCallback",
                    "description": "is called with a FileError",
                    "type": "Function"
                }
            ],
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/build/YASMFDemoApp.app/www/cordova.js",
            "line": 1875,
            "description": "An interface that lists the files and directories in a directory.",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/build/YASMFDemoApp.app/www/cordova.js",
            "line": 1882,
            "description": "Returns a list of entries from a directory.",
            "params": [
                {
                    "name": "successCallback",
                    "description": "is called with a list of entries",
                    "type": "Function"
                },
                {
                    "name": "errorCallback",
                    "description": "is called with a FileError",
                    "type": "Function"
                }
            ],
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/build/YASMFDemoApp.app/www/cordova.js",
            "line": 1925,
            "description": "Represents a file or directory on the local file system.",
            "params": [
                {
                    "name": "isFile!~YUIDOC_LINE~!",
                    "description": "true if Entry is a file (readonly)",
                    "type": "Boolean"
                },
                {
                    "name": "isDirectory!~YUIDOC_LINE~!",
                    "description": "true if Entry is a directory (readonly)",
                    "type": "Boolean"
                },
                {
                    "name": "name!~YUIDOC_LINE~!",
                    "description": "name of the file or directory, excluding the path\n           leading to it (readonly)",
                    "type": "DOMString"
                },
                {
                    "name": "fullPath!~YUIDOC_LINE~!",
                    "description": "the absolute full path to the file or directory\n           (readonly)",
                    "type": "DOMString"
                }
            ],
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/build/YASMFDemoApp.app/www/cordova.js",
            "line": 1947,
            "description": "Look up the metadata of the entry.",
            "params": [
                {
                    "name": "successCallback!~YUIDOC_LINE~!",
                    "description": "is called with a Metadata object",
                    "type": "Function"
                },
                {
                    "name": "errorCallback!~YUIDOC_LINE~!",
                    "description": "is called with a FileError",
                    "type": "Function"
                }
            ],
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/build/YASMFDemoApp.app/www/cordova.js",
            "line": 1968,
            "description": "Set the metadata of the entry.",
            "params": [
                {
                    "name": "successCallback!~YUIDOC_LINE~!",
                    "description": "is called with a Metadata object",
                    "type": "Function"
                },
                {
                    "name": "errorCallback!~YUIDOC_LINE~!",
                    "description": "is called with a FileError",
                    "type": "Function"
                },
                {
                    "name": "metadataObject!~YUIDOC_LINE~!",
                    "description": "keys and values to set",
                    "type": "Object"
                }
            ],
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/build/YASMFDemoApp.app/www/cordova.js",
            "line": 1983,
            "description": "Move a file or directory to a new location.",
            "params": [
                {
                    "name": "parent!~YUIDOC_LINE~!",
                    "description": "the directory to which to move this entry",
                    "type": "DirectoryEntry"
                },
                {
                    "name": "newName!~YUIDOC_LINE~!",
                    "description": "new name of the entry, defaults to the current name",
                    "type": "DOMString"
                },
                {
                    "name": "successCallback!~YUIDOC_LINE~!",
                    "description": "called with the new DirectoryEntry object",
                    "type": "Function"
                },
                {
                    "name": "errorCallback!~YUIDOC_LINE~!",
                    "description": "called with a FileError",
                    "type": "Function"
                }
            ],
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/build/YASMFDemoApp.app/www/cordova.js",
            "line": 2022,
            "description": "Copy a directory to a different location.",
            "params": [
                {
                    "name": "parent!~YUIDOC_LINE~!",
                    "description": "the directory to which to copy the entry",
                    "type": "DirectoryEntry"
                },
                {
                    "name": "newName!~YUIDOC_LINE~!",
                    "description": "new name of the entry, defaults to the current name",
                    "type": "DOMString"
                },
                {
                    "name": "successCallback!~YUIDOC_LINE~!",
                    "description": "called with the new Entry object",
                    "type": "Function"
                },
                {
                    "name": "errorCallback!~YUIDOC_LINE~!",
                    "description": "called with a FileError",
                    "type": "Function"
                }
            ],
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/build/YASMFDemoApp.app/www/cordova.js",
            "line": 2063,
            "description": "Return a URL that can be used to identify this entry.",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/build/YASMFDemoApp.app/www/cordova.js",
            "line": 2071,
            "description": "Returns a URI that can be used to identify this entry.",
            "params": [
                {
                    "name": "mimeType",
                    "description": "for a FileEntry, the mime type to be used to interpret the file, when loaded through this URI.",
                    "type": "DOMString"
                }
            ],
            "return": {
                "description": "uri"
            },
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/build/YASMFDemoApp.app/www/cordova.js",
            "line": 2083,
            "description": "Remove a file or directory. It is an error to attempt to delete a\ndirectory that is not empty. It is an error to attempt to delete a\nroot directory of a file system.",
            "params": [
                {
                    "name": "successCallback",
                    "description": "called with no parameters",
                    "type": "Function"
                },
                {
                    "name": "errorCallback",
                    "description": "called with a FileError",
                    "type": "Function"
                }
            ],
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/build/YASMFDemoApp.app/www/cordova.js",
            "line": 2099,
            "description": "Look up the parent DirectoryEntry of this entry.",
            "params": [
                {
                    "name": "successCallback",
                    "description": "called with the parent DirectoryEntry object",
                    "type": "Function"
                },
                {
                    "name": "errorCallback",
                    "description": "called with a FileError",
                    "type": "Function"
                }
            ],
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/build/YASMFDemoApp.app/www/cordova.js",
            "line": 2125,
            "description": "Constructor.\nname {DOMString} name of the file, without path information\nfullPath {DOMString} the full path of the file, including the name\ntype {DOMString} mime type\nlastModifiedDate {Date} last modified date\nsize {Number} size of the file in bytes",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/build/YASMFDemoApp.app/www/cordova.js",
            "line": 2146,
            "description": "Returns a \"slice\" of the file. Since Cordova Files don't contain the actual\ncontent, this really returns a File with adjusted start and end.\nSlices of slices are supported.\nstart {Number} The index at which to start the slice (inclusive).\nend {Number} The index at which to end the slice (exclusive).",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/build/YASMFDemoApp.app/www/cordova.js",
            "line": 2194,
            "description": "An interface representing a file on the file system.\n\n{boolean} isFile always true (readonly)\n{boolean} isDirectory always false (readonly)\n{DOMString} name of the file, excluding the path leading to it (readonly)\n{DOMString} fullPath the absolute full path to the file (readonly)\n{FileSystem} filesystem on which the file resides (readonly)",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/build/YASMFDemoApp.app/www/cordova.js",
            "line": 2209,
            "description": "Creates a new FileWriter associated with the file that this FileEntry represents.",
            "params": [
                {
                    "name": "successCallback",
                    "description": "is called with the new FileWriter",
                    "type": "Function"
                },
                {
                    "name": "errorCallback",
                    "description": "is called with a FileError",
                    "type": "Function"
                }
            ],
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/build/YASMFDemoApp.app/www/cordova.js",
            "line": 2227,
            "description": "Returns a File that represents the current state of the file that this FileEntry represents.",
            "params": [
                {
                    "name": "successCallback",
                    "description": "is called with the new File object",
                    "type": "Function"
                },
                {
                    "name": "errorCallback",
                    "description": "is called with a FileError",
                    "type": "Function"
                }
            ],
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/build/YASMFDemoApp.app/www/cordova.js",
            "line": 2252,
            "description": "FileError",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/build/YASMFDemoApp.app/www/cordova.js",
            "line": 2291,
            "description": "This class reads the mobile device file system.\n\nFor Android:\n     The root directory is the root of the file system.\n     To read from the SD card, the file name is \"sdcard/my_file.txt\"",
            "is_constructor": 1,
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/build/YASMFDemoApp.app/www/cordova.js",
            "line": 2362,
            "description": "Abort reading file.",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/build/YASMFDemoApp.app/www/cordova.js",
            "line": 2387,
            "description": "Read text file.",
            "params": [
                {
                    "name": "file",
                    "description": "File object containing file properties",
                    "type": "File"
                },
                {
                    "name": "encoding",
                    "description": "[Optional] (see http://www.iana.org/assignments/character-sets)"
                }
            ],
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/build/YASMFDemoApp.app/www/cordova.js",
            "line": 2464,
            "description": "Read file and return data as a base64 encoded data url.\nA data url is of the form:\n     data:[<mediatype>][;base64],<data>",
            "params": [
                {
                    "name": "file",
                    "description": "File object containing file properties",
                    "type": "File"
                }
            ],
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/build/YASMFDemoApp.app/www/cordova.js",
            "line": 2538,
            "description": "Read file and return data as a binary data.",
            "params": [
                {
                    "name": "file",
                    "description": "File object containing file properties",
                    "type": "File"
                }
            ],
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/build/YASMFDemoApp.app/www/cordova.js",
            "line": 2552,
            "description": "Read file and return data as a binary data.",
            "params": [
                {
                    "name": "file",
                    "description": "File object containing file properties",
                    "type": "File"
                }
            ],
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/build/YASMFDemoApp.app/www/cordova.js",
            "line": 2575,
            "description": "An interface representing a file system",
            "is_constructor": 1,
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/build/YASMFDemoApp.app/www/cordova.js",
            "line": 2611,
            "description": "FileTransfer uploads a file to a remote server.",
            "is_constructor": 1,
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/build/YASMFDemoApp.app/www/cordova.js",
            "line": 2620,
            "description": "Given an absolute file path, uploads a file on the device to a remote server\nusing a multipart HTTP request.",
            "params": [
                {
                    "name": "filePath",
                    "description": "Full path of the file on the device",
                    "type": "String"
                },
                {
                    "name": "server",
                    "description": "URL of the server to receive the file",
                    "type": "String"
                },
                {
                    "name": "successCallback",
                    "description": "(Function}  Callback to be invoked when upload has completed"
                },
                {
                    "name": "errorCallback",
                    "description": "Callback to be invoked upon error",
                    "type": "Function"
                },
                {
                    "name": "options",
                    "description": "Optional parameters such as file name and mimetype",
                    "type": "FileUploadOptions"
                },
                {
                    "name": "trustAllHosts",
                    "description": "Optional trust all hosts (e.g. for self-signed certs), defaults to false",
                    "type": "Boolean"
                }
            ],
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/build/YASMFDemoApp.app/www/cordova.js",
            "line": 2673,
            "description": "Downloads a file form a given URL and saves it to the specified directory.",
            "params": [
                {
                    "name": "source",
                    "description": "URL of the server to receive the file",
                    "type": "String"
                },
                {
                    "name": "target",
                    "description": "Full path of the file on the device",
                    "type": "String"
                },
                {
                    "name": "successCallback",
                    "description": "(Function}  Callback to be invoked when upload has completed"
                },
                {
                    "name": "errorCallback",
                    "description": "Callback to be invoked upon error",
                    "type": "Function"
                },
                {
                    "name": "trustAllHosts",
                    "description": "Optional trust all hosts (e.g. for self-signed certs), defaults to false",
                    "type": "Boolean"
                }
            ],
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/build/YASMFDemoApp.app/www/cordova.js",
            "line": 2713,
            "description": "Aborts the ongoing file transfer on this object",
            "params": [
                {
                    "name": "successCallback",
                    "description": "Callback to be invoked upon success",
                    "type": "Function"
                },
                {
                    "name": "errorCallback",
                    "description": "Callback to be invoked upon error",
                    "type": "Function"
                }
            ],
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/build/YASMFDemoApp.app/www/cordova.js",
            "line": 2729,
            "description": "FileTransferError",
            "is_constructor": 1,
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/build/YASMFDemoApp.app/www/cordova.js",
            "line": 2753,
            "description": "Options to customize the HTTP request used to upload files.",
            "is_constructor": 1,
            "params": [
                {
                    "name": "fileKey",
                    "description": "Name of file request parameter.",
                    "type": "String"
                },
                {
                    "name": "fileName",
                    "description": "Filename to be used by the server. Defaults to image.jpg.",
                    "type": "String"
                },
                {
                    "name": "mimeType",
                    "description": "Mimetype of the uploaded file. Defaults to image/jpeg.",
                    "type": "String"
                },
                {
                    "name": "params",
                    "description": "Object with key: value params to send to the server.",
                    "type": "Object"
                },
                {
                    "name": "headers",
                    "description": "Keys are header names, values are header values. Multiple\n                          headers of the same name are not supported.",
                    "type": "Object"
                }
            ],
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/build/YASMFDemoApp.app/www/cordova.js",
            "line": 2778,
            "description": "FileUploadResult",
            "is_constructor": 1,
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/build/YASMFDemoApp.app/www/cordova.js",
            "line": 2799,
            "description": "This class writes to the mobile device file system.\n\nFor Android:\n     The root directory is the root of the file system.\n     To write to the SD card, the file name is \"sdcard/my_file.txt\"",
            "is_constructor": 1,
            "params": [
                {
                    "name": "file",
                    "description": "File object containing file properties",
                    "type": "File"
                },
                {
                    "name": "append",
                    "description": "if true write to the end of the file, otherwise overwrite the file"
                }
            ],
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/build/YASMFDemoApp.app/www/cordova.js",
            "line": 2841,
            "description": "Abort writing file.",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/build/YASMFDemoApp.app/www/cordova.js",
            "line": 2866,
            "description": "Writes data to the file",
            "params": [
                {
                    "name": "text",
                    "description": "to be written"
                }
            ],
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/build/YASMFDemoApp.app/www/cordova.js",
            "line": 2940,
            "description": "Moves the file pointer to the location specified.\n\nIf the offset is a negative number the position of the file\npointer is rewound.  If the offset is greater than the file\nsize the position is set to the end of the file.",
            "params": [
                {
                    "name": "offset",
                    "description": "is the location to move the file pointer to."
                }
            ],
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/build/YASMFDemoApp.app/www/cordova.js",
            "line": 2975,
            "description": "Truncates the file to the size specified.",
            "params": [
                {
                    "name": "size",
                    "description": "to chop the file at."
                }
            ],
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/build/YASMFDemoApp.app/www/cordova.js",
            "line": 3054,
            "description": "Supplies arguments to methods that lookup or create files and directories.",
            "params": [
                {
                    "name": "create!~YUIDOC_LINE~!",
                    "description": "file or directory if it doesn't exist",
                    "type": "Boolean"
                },
                {
                    "name": "exclusive!~YUIDOC_LINE~!",
                    "description": "used with create; if true the command will fail if\n           target path exists",
                    "type": "Boolean"
                }
            ],
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/build/YASMFDemoApp.app/www/cordova.js",
            "line": 3076,
            "description": "Globalization error object",
            "is_constructor": 1,
            "params": [
                {
                    "name": "code",
                    "description": ""
                },
                {
                    "name": "message",
                    "description": ""
                }
            ],
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/build/YASMFDemoApp.app/www/cordova.js",
            "line": 3150,
            "description": "Represents a local file system.",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/build/YASMFDemoApp.app/www/cordova.js",
            "line": 3173,
            "description": "This class provides access to the device media, interfaces to both sound and video",
            "is_constructor": 1,
            "params": [
                {
                    "name": "src",
                    "description": "The file name or url to play"
                },
                {
                    "name": "successCallback",
                    "description": "The callback to be called when the file is done playing or recording.\n                                 successCallback()"
                },
                {
                    "name": "errorCallback",
                    "description": "The callback to be called if there is an error.\n                                 errorCallback(int errorCode) - OPTIONAL"
                },
                {
                    "name": "statusCallback",
                    "description": "The callback to be called when media status has changed.\n                                 statusCallback(int statusCode) - OPTIONAL"
                }
            ],
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/build/YASMFDemoApp.app/www/cordova.js",
            "line": 3217,
            "description": "Start or resume playing audio file.",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/build/YASMFDemoApp.app/www/cordova.js",
            "line": 3224,
            "description": "Stop playing audio file.",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/build/YASMFDemoApp.app/www/cordova.js",
            "line": 3234,
            "description": "Seek or jump to a new time in the track..",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/build/YASMFDemoApp.app/www/cordova.js",
            "line": 3244,
            "description": "Pause playing audio file.",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/build/YASMFDemoApp.app/www/cordova.js",
            "line": 3251,
            "description": "Get duration of an audio file.\nThe duration is only set for audio that is playing, paused or stopped.",
            "return": {
                "description": "duration or -1 if not known."
            },
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/build/YASMFDemoApp.app/www/cordova.js",
            "line": 3261,
            "description": "Get position of audio.",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/build/YASMFDemoApp.app/www/cordova.js",
            "line": 3272,
            "description": "Start recording audio file.",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/build/YASMFDemoApp.app/www/cordova.js",
            "line": 3279,
            "description": "Stop recording audio file.",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/build/YASMFDemoApp.app/www/cordova.js",
            "line": 3286,
            "description": "Release the resources.",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/build/YASMFDemoApp.app/www/cordova.js",
            "line": 3293,
            "description": "Adjust the volume.",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/build/YASMFDemoApp.app/www/cordova.js",
            "line": 3300,
            "description": "Audio has status update.\nPRIVATE",
            "params": [
                {
                    "name": "id",
                    "description": "The media object id (string)"
                },
                {
                    "name": "msgType",
                    "description": "The 'type' of update this is"
                },
                {
                    "name": "value",
                    "description": "Use of value is determined by the msgType"
                }
            ],
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/build/YASMFDemoApp.app/www/cordova.js",
            "line": 3347,
            "description": "This class contains information about any Media errors.",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/build/YASMFDemoApp.app/www/cordova.js",
            "line": 3391,
            "description": "Represents a single file.\n\nname {DOMString} name of the file, without path information\nfullPath {DOMString} the full path of the file, including the name\ntype {DOMString} mime type\nlastModifiedDate {Date} last modified date\nsize {Number} size of the file in bytes",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/build/YASMFDemoApp.app/www/cordova.js",
            "line": 3406,
            "description": "Request capture format data for a specific file and type",
            "params": [
                {
                    "name": "successCB",
                    "description": "",
                    "type": "Function"
                },
                {
                    "name": "errorCB",
                    "description": "",
                    "type": "Function"
                }
            ],
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/build/YASMFDemoApp.app/www/cordova.js",
            "line": 3427,
            "description": "MediaFileData encapsulates format information of a media file.",
            "params": [
                {
                    "name": "codecs",
                    "description": "",
                    "type": "DOMString"
                },
                {
                    "name": "bitrate",
                    "description": "",
                    "type": "Long"
                },
                {
                    "name": "height",
                    "description": "",
                    "type": "Long"
                },
                {
                    "name": "width",
                    "description": "",
                    "type": "Long"
                },
                {
                    "name": "duration",
                    "description": "",
                    "type": "Float"
                }
            ],
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/build/YASMFDemoApp.app/www/cordova.js",
            "line": 3451,
            "description": "Information about the state of the file or directory\n\n{Date} modificationTime (readonly)",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/build/YASMFDemoApp.app/www/cordova.js",
            "line": 3485,
            "description": "Position error object",
            "is_constructor": 1,
            "params": [
                {
                    "name": "code",
                    "description": ""
                },
                {
                    "name": "message",
                    "description": ""
                }
            ],
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/build/YASMFDemoApp.app/www/cordova.js",
            "line": 3560,
            "description": "This class provides access to device accelerometer data.",
            "is_constructor": 1,
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/build/YASMFDemoApp.app/www/cordova.js",
            "line": 3621,
            "description": "Asynchronously acquires the current acceleration.",
            "params": [
                {
                    "name": "successCallback",
                    "description": "The function to call when the acceleration data is available",
                    "type": "Function"
                },
                {
                    "name": "errorCallback",
                    "description": "The function to call when there is an error getting the acceleration data. (OPTIONAL)",
                    "type": "Function"
                },
                {
                    "name": "options",
                    "description": "The options for getting the accelerometer data such as timeout. (OPTIONAL)",
                    "type": "AccelerationOptions"
                }
            ],
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/build/YASMFDemoApp.app/www/cordova.js",
            "line": 3649,
            "description": "Asynchronously acquires the acceleration repeatedly at a given interval.",
            "params": [
                {
                    "name": "successCallback",
                    "description": "The function to call each time the acceleration data is available",
                    "type": "Function"
                },
                {
                    "name": "errorCallback",
                    "description": "The function to call when there is an error getting the acceleration data. (OPTIONAL)",
                    "type": "Function"
                },
                {
                    "name": "options",
                    "description": "The options for getting the accelerometer data such as timeout. (OPTIONAL)",
                    "type": "AccelerationOptions"
                }
            ],
            "return": {
                "description": "String                       The watch id that must be passed to #clearWatch to stop watching."
            },
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/build/YASMFDemoApp.app/www/cordova.js",
            "line": 3693,
            "description": "Clears the specified accelerometer watch.",
            "params": [
                {
                    "name": "id",
                    "description": "The id of the watch returned from #watchAcceleration.",
                    "type": "String"
                }
            ],
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/build/YASMFDemoApp.app/www/cordova.js",
            "line": 3726,
            "description": "This class contains information about the current battery status.",
            "is_constructor": 1,
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/build/YASMFDemoApp.app/www/cordova.js",
            "line": 3752,
            "description": "Event handlers for when callbacks get registered for the battery.\nKeep track of how many handlers we have so we can start and stop the native battery listener\nappropriately (and hopefully save on battery life!).",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/build/YASMFDemoApp.app/www/cordova.js",
            "line": 3766,
            "description": "Callback for battery status",
            "params": [
                {
                    "name": "info",
                    "description": "keys: level, isPlugged",
                    "type": "Object"
                }
            ],
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/build/YASMFDemoApp.app/www/cordova.js",
            "line": 3794,
            "description": "Error callback for battery start",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/build/YASMFDemoApp.app/www/cordova.js",
            "line": 3835,
            "description": "Launches a capture of different types.",
            "params": [
                {
                    "name": "(DOMString}",
                    "description": "type"
                },
                {
                    "name": "successCB",
                    "description": "",
                    "type": "Function"
                },
                {
                    "name": "errorCB",
                    "description": "",
                    "type": "Function"
                },
                {
                    "name": "options",
                    "description": "",
                    "type": "CaptureVideoOptions"
                }
            ],
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/build/YASMFDemoApp.app/www/cordova.js",
            "line": 3860,
            "description": "The Capture interface exposes an interface to the camera and microphone of the hosting device.",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/build/YASMFDemoApp.app/www/cordova.js",
            "line": 3869,
            "description": "Launch audio recorder application for recording audio clip(s).",
            "params": [
                {
                    "name": "successCB",
                    "description": "",
                    "type": "Function"
                },
                {
                    "name": "errorCB",
                    "description": "",
                    "type": "Function"
                },
                {
                    "name": "options",
                    "description": "",
                    "type": "CaptureAudioOptions"
                }
            ],
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/build/YASMFDemoApp.app/www/cordova.js",
            "line": 3880,
            "description": "Launch camera application for taking image(s).",
            "params": [
                {
                    "name": "successCB",
                    "description": "",
                    "type": "Function"
                },
                {
                    "name": "errorCB",
                    "description": "",
                    "type": "Function"
                },
                {
                    "name": "options",
                    "description": "",
                    "type": "CaptureImageOptions"
                }
            ],
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/build/YASMFDemoApp.app/www/cordova.js",
            "line": 3891,
            "description": "Launch device camera application for recording video(s).",
            "params": [
                {
                    "name": "successCB",
                    "description": "",
                    "type": "Function"
                },
                {
                    "name": "errorCB",
                    "description": "",
                    "type": "Function"
                },
                {
                    "name": "options",
                    "description": "",
                    "type": "CaptureVideoOptions"
                }
            ],
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/build/YASMFDemoApp.app/www/cordova.js",
            "line": 3933,
            "description": "Asynchronously acquires the current heading.",
            "params": [
                {
                    "name": "successCallback",
                    "description": "The function to call when the heading\ndata is available",
                    "type": "Function"
                },
                {
                    "name": "errorCallback",
                    "description": "The function to call when there is an error\ngetting the heading data.",
                    "type": "Function"
                },
                {
                    "name": "options",
                    "description": "The options for getting the heading data (not used).",
                    "type": "CompassOptions"
                }
            ],
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/build/YASMFDemoApp.app/www/cordova.js",
            "line": 3957,
            "description": "Asynchronously acquires the heading repeatedly at a given interval.",
            "params": [
                {
                    "name": "successCallback",
                    "description": "The function to call each time the heading\ndata is available",
                    "type": "Function"
                },
                {
                    "name": "errorCallback",
                    "description": "The function to call when there is an error\ngetting the heading data.",
                    "type": "Function"
                },
                {
                    "name": "options",
                    "description": "The options for getting the heading data\nsuch as timeout and the frequency of the watch. For iOS, filter parameter\nspecifies to watch via a distance filter rather than time.",
                    "type": "HeadingOptions"
                }
            ],
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/build/YASMFDemoApp.app/www/cordova.js",
            "line": 3988,
            "description": "Clears the specified heading watch.",
            "params": [
                {
                    "name": "watchId",
                    "description": "The ID of the watch returned from #watchHeading.",
                    "type": "String"
                }
            ],
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/build/YASMFDemoApp.app/www/cordova.js",
            "line": 4203,
            "description": "Represents a group of Contacts.",
            "is_constructor": 1,
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/build/YASMFDemoApp.app/www/cordova.js",
            "line": 4208,
            "description": "Returns an array of Contacts matching the search criteria.",
            "params": [
                {
                    "name": "fields",
                    "description": "that should be searched"
                },
                {
                    "name": "successCB",
                    "description": "success callback"
                },
                {
                    "name": "errorCB",
                    "description": "error callback"
                },
                {
                    "name": "options",
                    "description": "that can be applied to contact searching",
                    "type": "ContactFindOptions"
                }
            ],
            "return": {
                "description": "array of Contacts matching search criteria"
            },
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/build/YASMFDemoApp.app/www/cordova.js",
            "line": 4232,
            "description": "This function creates a new contact, but it does not persist the contact\nto device storage. To persist the contact to device storage, invoke\ncontact.save().",
            "params": [
                {
                    "name": "properties",
                    "description": "an object whose properties will be examined to create a new Contact"
                }
            ],
            "return": {
                "description": "new Contact object"
            },
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/build/YASMFDemoApp.app/www/cordova.js",
            "line": 4283,
            "description": "This represents the mobile device, and provides properties for inspecting the model, version, UUID of the\nphone, etc.",
            "is_constructor": 1,
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/build/YASMFDemoApp.app/www/cordova.js",
            "line": 4316,
            "description": "Get device info",
            "params": [
                {
                    "name": "successCallback",
                    "description": "The function to call when the heading data is available",
                    "type": "Function"
                },
                {
                    "name": "errorCallback",
                    "description": "The function to call when there is an error getting the heading data. (OPTIONAL)",
                    "type": "Function"
                }
            ],
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/build/YASMFDemoApp.app/www/cordova.js",
            "line": 4346,
            "description": "Sends the given message through exec() to the Echo plugin, which sends it back to the successCallback.",
            "params": [
                {
                    "name": "successCallback",
                    "description": "invoked with a FileSystem object"
                },
                {
                    "name": "errorCallback",
                    "description": "invoked if error occurs retrieving file system"
                },
                {
                    "name": "message",
                    "description": "The string to be echoed."
                },
                {
                    "name": "forceAsync",
                    "description": "Whether to force an async return value (for testing native->js bridge)."
                }
            ],
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/build/YASMFDemoApp.app/www/cordova.js",
            "line": 4465,
            "description": "Asynchronously acquires the current position.",
            "params": [
                {
                    "name": "successCallback",
                    "description": "The function to call when the position data is available",
                    "type": "Function"
                },
                {
                    "name": "errorCallback",
                    "description": "The function to call when there is an error getting the heading position. (OPTIONAL)",
                    "type": "Function"
                },
                {
                    "name": "options",
                    "description": "The options for getting the position data. (OPTIONAL)",
                    "type": "PositionOptions"
                }
            ],
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/build/YASMFDemoApp.app/www/cordova.js",
            "line": 4539,
            "description": "Asynchronously watches the geolocation for changes to geolocation.  When a change occurs,\nthe successCallback is called with the new location.",
            "params": [
                {
                    "name": "successCallback",
                    "description": "The function to call each time the location data is available",
                    "type": "Function"
                },
                {
                    "name": "errorCallback",
                    "description": "The function to call when there is an error getting the location data. (OPTIONAL)",
                    "type": "Function"
                },
                {
                    "name": "options",
                    "description": "The options for getting the location data such as frequency. (OPTIONAL)",
                    "type": "PositionOptions"
                }
            ],
            "return": {
                "description": "String                       The watch id that must be passed to #clearWatch to stop watching."
            },
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/build/YASMFDemoApp.app/www/cordova.js",
            "line": 4590,
            "description": "Clears the specified heading watch.",
            "params": [
                {
                    "name": "id",
                    "description": "The ID of the watch returned from #watchPosition",
                    "type": "String"
                }
            ],
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/build/YASMFDemoApp.app/www/cordova.js",
            "line": 4630,
            "description": "Returns the string identifier for the client's current language.\nIt returns the language identifier string to the successCB callback with a\nproperties object as a parameter. If there is an error getting the language,\nthen the errorCB callback is invoked.",
            "params": [
                {
                    "name": "successCB",
                    "description": "",
                    "type": "Function"
                },
                {
                    "name": "errorCB",
                    "description": "",
                    "type": "Function"
                }
            ],
            "return": {
                "description": "Object.value : The language identifier",
                "type": "String"
            },
            "error": "GlobalizationError.UNKNOWN_ERROR\n\nExample\n   globalization.getPreferredLanguage(function (language) {alert('language:' + language.value + '\\n');},\n                               function () {});",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/build/YASMFDemoApp.app/www/cordova.js",
            "line": 4652,
            "description": "Returns the string identifier for the client's current locale setting.\nIt returns the locale identifier string to the successCB callback with a\nproperties object as a parameter. If there is an error getting the locale,\nthen the errorCB callback is invoked.",
            "params": [
                {
                    "name": "successCB",
                    "description": "",
                    "type": "Function"
                },
                {
                    "name": "errorCB",
                    "description": "",
                    "type": "Function"
                }
            ],
            "return": {
                "description": "Object.value : The locale identifier",
                "type": "String"
            },
            "error": "GlobalizationError.UNKNOWN_ERROR\n\nExample\n   globalization.getLocaleName(function (locale) {alert('locale:' + locale.value + '\\n');},\n                               function () {});",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/build/YASMFDemoApp.app/www/cordova.js",
            "line": 4675,
            "description": "Returns a date formatted as a string according to the client's user preferences and\ncalendar using the time zone of the client. It returns the formatted date string to the\nsuccessCB callback with a properties object as a parameter. If there is an error\nformatting the date, then the errorCB callback is invoked.\n\nThe defaults are: formatLenght=\"short\" and selector=\"date and time\"",
            "params": [
                {
                    "name": "date",
                    "description": "",
                    "type": "Date"
                },
                {
                    "name": "successCB",
                    "description": "",
                    "type": "Function"
                },
                {
                    "name": "errorCB",
                    "description": "",
                    "type": "Function"
                },
                {
                    "name": "options",
                    "description": "{optional}\n           formatLength {String}: 'short', 'medium', 'long', or 'full'\n           selector {String}: 'date', 'time', or 'date and time'",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "Object.value : The localized date string",
                "type": "String"
            },
            "error": "GlobalizationError.FORMATTING_ERROR\n\nExample\n   globalization.dateToString(new Date(),\n               function (date) {alert('date:' + date.value + '\\n');},\n               function (errorCode) {alert(errorCode);},\n               {formatLength:'short'});",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/build/YASMFDemoApp.app/www/cordova.js",
            "line": 4707,
            "description": "Parses a date formatted as a string according to the client's user\npreferences and calendar using the time zone of the client and returns\nthe corresponding date object. It returns the date to the successCB\ncallback with a properties object as a parameter. If there is an error\nparsing the date string, then the errorCB callback is invoked.\n\nThe defaults are: formatLength=\"short\" and selector=\"date and time\"",
            "params": [
                {
                    "name": "dateString",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "successCB",
                    "description": "",
                    "type": "Function"
                },
                {
                    "name": "errorCB",
                    "description": "",
                    "type": "Function"
                },
                {
                    "name": "options",
                    "description": "{optional}\n           formatLength {String}: 'short', 'medium', 'long', or 'full'\n           selector {String}: 'date', 'time', or 'date and time'",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "Object.year : The four digit year\n           Object.month {Number}: The month from (0 - 11)\n           Object.day {Number}: The day from (1 - 31)\n           Object.hour {Number}: The hour from (0 - 23)\n           Object.minute {Number}: The minute from (0 - 59)\n           Object.second {Number}: The second from (0 - 59)\n           Object.millisecond {Number}: The milliseconds (from 0 - 999),\n                                       not available on all platforms",
                "type": "Number"
            },
            "error": "GlobalizationError.PARSING_ERROR\n\nExample\n   globalization.stringToDate('4/11/2011',\n               function (date) { alert('Month:' + date.month + '\\n' +\n                   'Day:' + date.day + '\\n' +\n                   'Year:' + date.year + '\\n');},\n               function (errorCode) {alert(errorCode);},\n               {selector:'date'});",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/build/YASMFDemoApp.app/www/cordova.js",
            "line": 4748,
            "description": "Returns a pattern string for formatting and parsing dates according to the client's\nuser preferences. It returns the pattern to the successCB callback with a\nproperties object as a parameter. If there is an error obtaining the pattern,\nthen the errorCB callback is invoked.\n\nThe defaults are: formatLength=\"short\" and selector=\"date and time\"",
            "params": [
                {
                    "name": "successCB",
                    "description": "",
                    "type": "Function"
                },
                {
                    "name": "errorCB",
                    "description": "",
                    "type": "Function"
                },
                {
                    "name": "options",
                    "description": "{optional}\n           formatLength {String}: 'short', 'medium', 'long', or 'full'\n           selector {String}: 'date', 'time', or 'date and time'",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "Object.pattern : The date and time pattern for formatting and parsing dates.\n                                   The patterns follow Unicode Technical Standard #35\n                                   http://unicode.org/reports/tr35/tr35-4.html\n           Object.timezone {String}: The abbreviated name of the time zone on the client\n           Object.utc_offset {Number}: The current difference in seconds between the client's\n                                       time zone and coordinated universal time.\n           Object.dst_offset {Number}: The current daylight saving time offset in seconds\n                                       between the client's non-daylight saving's time zone\n                                       and the client's daylight saving's time zone.",
                "type": "String"
            },
            "error": "GlobalizationError.PATTERN_ERROR\n\nExample\n   globalization.getDatePattern(\n               function (date) {alert('pattern:' + date.pattern + '\\n');},\n               function () {},\n               {formatLength:'short'});",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/build/YASMFDemoApp.app/www/cordova.js",
            "line": 4786,
            "description": "Returns an array of either the names of the months or days of the week\naccording to the client's user preferences and calendar. It returns the array of names to the\nsuccessCB callback with a properties object as a parameter. If there is an error obtaining the\nnames, then the errorCB callback is invoked.\n\nThe defaults are: type=\"wide\" and item=\"months\"",
            "params": [
                {
                    "name": "successCB",
                    "description": "",
                    "type": "Function"
                },
                {
                    "name": "errorCB",
                    "description": "",
                    "type": "Function"
                },
                {
                    "name": "options",
                    "description": "{optional}\n           type {String}: 'narrow' or 'wide'\n           item {String}: 'months', or 'days'",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "Object.value }: The array of names starting from either\n                                       the first month in the year or the\n                                       first day of the week.",
                "type": "ArrayString"
            },
            "error": "GlobalizationError.UNKNOWN_ERROR\n\nExample\n   globalization.getDateNames(function (names) {\n       for(var i = 0; i < names.value.length; i++) {\n           alert('Month:' + names.value[i] + '\\n');}},\n       function () {});",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/build/YASMFDemoApp.app/www/cordova.js",
            "line": 4816,
            "description": "Returns whether daylight savings time is in effect for a given date using the client's\ntime zone and calendar. It returns whether or not daylight savings time is in effect\nto the successCB callback with a properties object as a parameter. If there is an error\nreading the date, then the errorCB callback is invoked.",
            "params": [
                {
                    "name": "date",
                    "description": "",
                    "type": "Date"
                },
                {
                    "name": "successCB",
                    "description": "",
                    "type": "Function"
                },
                {
                    "name": "errorCB",
                    "description": "",
                    "type": "Function"
                }
            ],
            "return": {
                "description": "Object.dst : The value \"true\" indicates that daylight savings time is\n                               in effect for the given date and \"false\" indicate that it is not.",
                "type": "Boolean"
            },
            "error": "GlobalizationError.UNKNOWN_ERROR\n\nExample\n   globalization.isDayLightSavingsTime(new Date(),\n               function (date) {alert('dst:' + date.dst + '\\n');}\n               function () {});",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/build/YASMFDemoApp.app/www/cordova.js",
            "line": 4842,
            "description": "Returns the first day of the week according to the client's user preferences and calendar.\nThe days of the week are numbered starting from 1 where 1 is considered to be Sunday.\nIt returns the day to the successCB callback with a properties object as a parameter.\nIf there is an error obtaining the pattern, then the errorCB callback is invoked.",
            "params": [
                {
                    "name": "successCB",
                    "description": "",
                    "type": "Function"
                },
                {
                    "name": "errorCB",
                    "description": "",
                    "type": "Function"
                }
            ],
            "return": {
                "description": "Object.value : The number of the first day of the week.",
                "type": "Number"
            },
            "error": "GlobalizationError.UNKNOWN_ERROR\n\nExample\n   globalization.getFirstDayOfWeek(function (day)\n               { alert('Day:' + day.value + '\\n');},\n               function () {});",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/build/YASMFDemoApp.app/www/cordova.js",
            "line": 4866,
            "description": "Returns a number formatted as a string according to the client's user preferences.\nIt returns the formatted number string to the successCB callback with a properties object as a\nparameter. If there is an error formatting the number, then the errorCB callback is invoked.\n\nThe defaults are: type=\"decimal\"",
            "params": [
                {
                    "name": "number",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "successCB",
                    "description": "",
                    "type": "Function"
                },
                {
                    "name": "errorCB",
                    "description": "",
                    "type": "Function"
                },
                {
                    "name": "options",
                    "description": "{optional}\n           type {String}: 'decimal', \"percent\", or 'currency'",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "Object.value : The formatted number string.",
                "type": "String"
            },
            "error": "GlobalizationError.FORMATTING_ERROR\n\nExample\n   globalization.numberToString(3.25,\n               function (number) {alert('number:' + number.value + '\\n');},\n               function () {},\n               {type:'decimal'});",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/build/YASMFDemoApp.app/www/cordova.js",
            "line": 4894,
            "description": "Parses a number formatted as a string according to the client's user preferences and\nreturns the corresponding number. It returns the number to the successCB callback with a\nproperties object as a parameter. If there is an error parsing the number string, then\nthe errorCB callback is invoked.\n\nThe defaults are: type=\"decimal\"",
            "params": [
                {
                    "name": "numberString",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "successCB",
                    "description": "",
                    "type": "Function"
                },
                {
                    "name": "errorCB",
                    "description": "",
                    "type": "Function"
                },
                {
                    "name": "options",
                    "description": "{optional}\n           type {String}: 'decimal', \"percent\", or 'currency'",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "Object.value : The parsed number.",
                "type": "Number"
            },
            "error": "GlobalizationError.PARSING_ERROR\n\nExample\n   globalization.stringToNumber('1234.56',\n               function (number) {alert('Number:' + number.value + '\\n');},\n               function () { alert('Error parsing number');});",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/build/YASMFDemoApp.app/www/cordova.js",
            "line": 4922,
            "description": "Returns a pattern string for formatting and parsing numbers according to the client's user\npreferences. It returns the pattern to the successCB callback with a properties object as a\nparameter. If there is an error obtaining the pattern, then the errorCB callback is invoked.\n\nThe defaults are: type=\"decimal\"",
            "params": [
                {
                    "name": "successCB",
                    "description": "",
                    "type": "Function"
                },
                {
                    "name": "errorCB",
                    "description": "",
                    "type": "Function"
                },
                {
                    "name": "options",
                    "description": "{optional}\n           type {String}: 'decimal', \"percent\", or 'currency'",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "Object.pattern : The number pattern for formatting and parsing numbers.\n                                   The patterns follow Unicode Technical Standard #35.\n                                   http://unicode.org/reports/tr35/tr35-4.html\n           Object.symbol {String}: The symbol to be used when formatting and parsing\n                                   e.g., percent or currency symbol.\n           Object.fraction {Number}: The number of fractional digits to use when parsing and\n                                   formatting numbers.\n           Object.rounding {Number}: The rounding increment to use when parsing and formatting.\n           Object.positive {String}: The symbol to use for positive numbers when parsing and formatting.\n           Object.negative: {String}: The symbol to use for negative numbers when parsing and formatting.\n           Object.decimal: {String}: The decimal symbol to use for parsing and formatting.\n           Object.grouping: {String}: The grouping symbol to use for parsing and formatting.",
                "type": "String"
            },
            "error": "GlobalizationError.PATTERN_ERROR\n\nExample\n   globalization.getNumberPattern(\n               function (pattern) {alert('Pattern:' + pattern.pattern + '\\n');},\n               function () {});",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/build/YASMFDemoApp.app/www/cordova.js",
            "line": 4959,
            "description": "Returns a pattern string for formatting and parsing currency values according to the client's\nuser preferences and ISO 4217 currency code. It returns the pattern to the successCB callback with a\nproperties object as a parameter. If there is an error obtaining the pattern, then the errorCB\ncallback is invoked.",
            "params": [
                {
                    "name": "currencyCode",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "successCB",
                    "description": "",
                    "type": "Function"
                },
                {
                    "name": "errorCB",
                    "description": "",
                    "type": "Function"
                }
            ],
            "return": {
                "description": "Object.pattern : The currency pattern for formatting and parsing currency values.\n                                   The patterns follow Unicode Technical Standard #35\n                                   http://unicode.org/reports/tr35/tr35-4.html\n           Object.code {String}: The ISO 4217 currency code for the pattern.\n           Object.fraction {Number}: The number of fractional digits to use when parsing and\n                                   formatting currency.\n           Object.rounding {Number}: The rounding increment to use when parsing and formatting.\n           Object.decimal: {String}: The decimal symbol to use for parsing and formatting.\n           Object.grouping: {String}: The grouping symbol to use for parsing and formatting.",
                "type": "String"
            },
            "error": "GlobalizationError.FORMATTING_ERROR\n\nExample\n   globalization.getCurrencyPattern('EUR',\n               function (currency) {alert('Pattern:' + currency.pattern + '\\n');}\n               function () {});",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/build/YASMFDemoApp.app/www/cordova.js",
            "line": 5024,
            "description": "Provides iOS Contact.display API.",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/build/YASMFDemoApp.app/www/cordova.js",
            "line": 5076,
            "description": "create a nice string for an object",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/build/YASMFDemoApp.app/www/cordova.js",
            "line": 5096,
            "description": "Wrapper one of the console logging methods, so that\nthe Cordova logging native is called, then the original.",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/build/YASMFDemoApp.app/www/cordova.js",
            "line": 5153,
            "description": "Provides iOS enhanced contacts API.",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/build/YASMFDemoApp.app/www/cordova.js",
            "line": 5272,
            "description": "Logging levels",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/build/YASMFDemoApp.app/www/cordova.js",
            "line": 5298,
            "description": "Getter/Setter for the logging level\n\nReturns the current logging level.\n\nWhen a value is passed, sets the logging level to that value.\nThe values should be one of the following constants:\n   logger.LOG\n   logger.ERROR\n   logger.WARN\n   logger.INFO\n   logger.DEBUG\n\nThe value used determines which messages get printed.  The logging\nvalues above are in order, and only messages logged at the logging\nlevel or above will actually be displayed to the user.  E.g., the\ndefault level is WARN, so only messages logged with LOG, ERROR, or\nWARN will be displayed; INFO and DEBUG messages will be ignored.",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/build/YASMFDemoApp.app/www/cordova.js",
            "line": 5328,
            "description": "Getter/Setter for the useConsole functionality\n\nWhen useConsole is true, the logger will log via the\nbrowser 'console' object.  Otherwise, it will use the\nnative Logger plugin.",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/build/YASMFDemoApp.app/www/cordova.js",
            "line": 5357,
            "description": "Logs a message at the LOG level.\n\nParameters passed after message are used applied to\nthe message with utils.format()",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/build/YASMFDemoApp.app/www/cordova.js",
            "line": 5365,
            "description": "Logs a message at the ERROR level.\n\nParameters passed after message are used applied to\nthe message with utils.format()",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/build/YASMFDemoApp.app/www/cordova.js",
            "line": 5373,
            "description": "Logs a message at the WARN level.\n\nParameters passed after message are used applied to\nthe message with utils.format()",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/build/YASMFDemoApp.app/www/cordova.js",
            "line": 5381,
            "description": "Logs a message at the INFO level.\n\nParameters passed after message are used applied to\nthe message with utils.format()",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/build/YASMFDemoApp.app/www/cordova.js",
            "line": 5389,
            "description": "Logs a message at the DEBUG level.\n\nParameters passed after message are used applied to\nthe message with utils.format()",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/build/YASMFDemoApp.app/www/cordova.js",
            "line": 5403,
            "description": "Logs a message at the specified level.\n\nParameters passed after message are used applied to\nthe message with utils.format()",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/build/YASMFDemoApp.app/www/cordova.js",
            "line": 5508,
            "description": "Get connection info",
            "params": [
                {
                    "name": "successCallback",
                    "description": "The function to call when the Connection data is available",
                    "type": "Function"
                },
                {
                    "name": "errorCallback",
                    "description": "The function to call when there is an error getting the Connection data. (OPTIONAL)",
                    "type": "Function"
                }
            ],
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/build/YASMFDemoApp.app/www/cordova.js",
            "line": 5576,
            "description": "Provides access to notifications on the device.",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/build/YASMFDemoApp.app/www/cordova.js",
            "line": 5582,
            "description": "Open a native alert dialog, with a customizable title and button text.",
            "params": [
                {
                    "name": "message",
                    "description": "Message to print in the body of the alert",
                    "type": "String"
                },
                {
                    "name": "completeCallback",
                    "description": "The callback that is called when user clicks on a button.",
                    "type": "Function"
                },
                {
                    "name": "title",
                    "description": "Title of the alert dialog (default: Alert)",
                    "type": "String"
                },
                {
                    "name": "buttonLabel",
                    "description": "Label of the close button (default: OK)",
                    "type": "String"
                }
            ],
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/build/YASMFDemoApp.app/www/cordova.js",
            "line": 5596,
            "description": "Open a native confirm dialog, with a customizable title and button text.\nThe result that the user selects is returned to the result callback.",
            "params": [
                {
                    "name": "message",
                    "description": "Message to print in the body of the alert",
                    "type": "String"
                },
                {
                    "name": "resultCallback",
                    "description": "The callback that is called when user clicks on a button.",
                    "type": "Function"
                },
                {
                    "name": "title",
                    "description": "Title of the alert dialog (default: Confirm)",
                    "type": "String"
                },
                {
                    "name": "buttonLabels",
                    "description": "Comma separated list of the labels of the buttons (default: 'OK,Cancel')",
                    "type": "String"
                }
            ],
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/build/YASMFDemoApp.app/www/cordova.js",
            "line": 5611,
            "description": "Causes the device to vibrate.",
            "params": [
                {
                    "name": "mills",
                    "description": "The number of milliseconds to vibrate for.",
                    "type": "Integer"
                }
            ],
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/build/YASMFDemoApp.app/www/cordova.js",
            "line": 5620,
            "description": "Causes the device to beep.\nOn Android, the default notification ringtone is played \"count\" times.",
            "params": [
                {
                    "name": "count",
                    "description": "The number of beeps.",
                    "type": "Integer"
                }
            ],
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/build/YASMFDemoApp.app/www/cordova.js",
            "line": 5652,
            "description": "Request a file system in which to store application data.",
            "params": [
                {
                    "name": "type",
                    "description": "local file system type"
                },
                {
                    "name": "size",
                    "description": "indicates how much storage space, in bytes, the application expects to need"
                },
                {
                    "name": "successCallback",
                    "description": "invoked with a FileSystem object"
                },
                {
                    "name": "errorCallback",
                    "description": "invoked if error occurs retrieving file system"
                }
            ],
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/build/YASMFDemoApp.app/www/cordova.js",
            "line": 5699,
            "description": "Look up file system Entry referred to by local URI.",
            "params": [
                {
                    "name": "uri",
                    "description": "URI referring to a local file or directory",
                    "type": "DOMString"
                },
                {
                    "name": "successCallback",
                    "description": "invoked with Entry object corresponding to URI"
                },
                {
                    "name": "errorCallback",
                    "description": "invoked if error occurs retrieving file system entry"
                }
            ],
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/build/YASMFDemoApp.app/www/cordova.js",
            "line": 5785,
            "description": "Defines a property getter / setter for obj[key].",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/build/YASMFDemoApp.app/www/cordova.js",
            "line": 5806,
            "description": "Defines a property getter for obj[key].",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/build/YASMFDemoApp.app/www/cordova.js",
            "line": 5824,
            "description": "Returns whether the item was found in the array.",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/build/YASMFDemoApp.app/www/cordova.js",
            "line": 5839,
            "description": "Returns an indication of whether the argument is an array or not",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/build/YASMFDemoApp.app/www/cordova.js",
            "line": 5846,
            "description": "Returns an indication of whether the argument is a Date or not",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/build/YASMFDemoApp.app/www/cordova.js",
            "line": 5853,
            "description": "Does a deep clone of the object.",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/build/YASMFDemoApp.app/www/cordova.js",
            "line": 5880,
            "description": "Returns a wrapped version of the function",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/build/YASMFDemoApp.app/www/cordova.js",
            "line": 5895,
            "description": "Create a UUID",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/build/YASMFDemoApp.app/www/cordova.js",
            "line": 5906,
            "description": "Extends a child object from a parent object using classical inheritance\npattern.",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/build/YASMFDemoApp.app/www/cordova.js",
            "line": 5922,
            "description": "Alerts a message in any available way: alert or console.log.",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/build/YASMFDemoApp.app/www/cordova.js",
            "line": 5933,
            "description": "Formats a string and arguments following it ala sprintf()\n\nsee utils.vformat() for more information",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/build/YASMFDemoApp.app/www/cordova.js",
            "line": 5943,
            "description": "Formats a string and arguments following it ala vsprintf()\n\nformat chars:\n  %j - format arg as JSON\n  %o - format arg as JSON\n  %c - format arg as ''\n  %% - replace with '%'\nany other char following % will format it's\narg via toString().\n\nfor rationale, see FireBug's Console API:\n   http://getfirebug.com/wiki/index.php/Console_API",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/build/YASMFDemoApp.app/www/cordova.js",
            "line": 6043,
            "description": "Create all cordova objects once page has fully loaded and native side is ready.",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/www/framework/PKObject.js",
            "line": 1,
            "description": "BASE PKOBJECT\n\n*****************************************************************************\nThe Object class provides the top object that all other objects inherit\n from. This provides object inheritance via a subclass/superclass mechanism\n without having to worry about prototype or constructor inheritance.\nPKObjects provide simple subclassing and a limited form of KVO in the form\n of tags and tag listeners.",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/www/framework/PKObject.js",
            "line": 38,
            "description": "We need a way to provide inheritance. Most methods only provide\n inheritance across the constructor chain, not across any possible\n method. But for our purposes, we need to be able to provide for\n overriding any method (such as drawing, touch responses, etc.),\n and so we implement inheritance in a different way.\nFirst, the _classHierarchy, a private property, provides the\n inheritance tree. All objects inherit from \"Object\".",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/www/framework/PKObject.js",
            "line": 52,
            "description": "Objects are subclassed using this method. The newClass is the\n unique class name of the object (and should match the class'\n actual name.",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/www/framework/PKObject.js",
            "line": 64,
            "description": "getClass returns the current class of the object. The\n \"class\" property can be used as well. Note that there\n is no \"setter\" for this property; an object's class\n can *not* be changed.",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/www/framework/PKObject.js",
            "line": 78,
            "description": "Returns the super class for the given class. If the\n class is not supplied, the class is assumed to be the\n object's own class.\nThe property \"superClass\" uses this to return the\n object's direct superclass, but getSuperClassOfClass\n can be used to determine superclasses higher up\n the hierarchy.",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/www/framework/PKObject.js",
            "line": 105,
            "description": "_super is an object that stores overridden functions by class and method\n name. This is how we get the ability to arbitrarily override any method\n already present in the superclass.",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/www/framework/PKObject.js",
            "line": 114,
            "description": "Must be called prior to defining the overridden function as this moves\n the original function into the _super object. The functionName must\n match the name of the method exactly, since there may be a long tree\n of code that depends on it.",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/www/framework/PKObject.js",
            "line": 132,
            "description": "Calls a super function with up to 10 arguments.",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/www/framework/PKObject.js",
            "line": 151,
            "description": "initializes the object",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/www/framework/PKObject.js",
            "line": 161,
            "description": "Objects have some properties that we want all objects to have...",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/www/framework/PKObject.js",
            "line": 210,
            "description": "All objects subject notifications for events",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/www/framework/PKObject.js",
            "line": 256,
            "description": "//http://stackoverflow.com/a/11462081\nfunction clone(obj){\n    var clonedObjectsArray = [];\n    var originalObjectsArray = []; //used to remove the unique ids when finished\n    var next_objid = 0;\n\n    function objectId(obj) {\n        if (obj == null) return null;\n        if (obj.__obj_id == undefined){\n            obj.__obj_id = next_objid++;\n            originalObjectsArray[obj.__obj_id] = obj;\n        }\n        return obj.__obj_id;\n    }\n\n    function cloneRecursive(obj) {\n        if (null == obj || typeof obj == \"string\" || typeof obj == \"number\" || typeof obj == \"boolean\") return obj;\n\n        // Handle Date\n        if (obj instanceof Date) {\n            var copy = new Date();\n            copy.setTime(obj.getTime());\n            return copy;\n        }\n\n        // Handle Array\n        if (obj instanceof Array) {\n            var copy = [];\n            for (var i = 0; i < obj.length; ++i) {\n                copy[i] = cloneRecursive(obj[i]);\n            }\n            return copy;\n        }\n\n        // Handle Object\n        if (obj instanceof Object) {\n            if (clonedObjectsArray[objectId(obj)] != undefined)\n                return clonedObjectsArray[objectId(obj)];\n\n            var copy;\n            if (obj instanceof Function)//Handle Function\n                copy = function(){return obj.apply(this, arguments);};\n            else\n                copy = {};\n\n            clonedObjectsArray[objectId(obj)] = copy;\n\n            for (var attr in obj)\n                if (attr != \"__obj_id\" && obj.hasOwnProperty(attr))\n                    copy[attr] = cloneRecursive(obj[attr]);                 \n\n            return copy;\n        }       \n\n\n        throw new Error(\"Unable to copy obj! Its type isn't supported.\");\n    }\n    var cloneObj = cloneRecursive(obj);\n\n\n\n    //remove the unique ids\n    for (var i = 0; i < originalObjectsArray.length; i++)\n    {\n        delete originalObjectsArray[i].__obj_id;\n    };\n\n    return cloneObj;\n}",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/www/framework/device.js",
            "line": 1,
            "description": "DEVICE\n Author: Kerri Shotts\nThis library includes functions that reflect the device and its current\n state",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/www/framework/device.js",
            "line": 42,
            "description": "Returns the device platform, lowercased. If PKDEVICE.platformOverride is\n other than \"false\", it is returned instead.",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/www/framework/device.js",
            "line": 97,
            "description": "Returns the device's form factor. Possible values are \"tablet\" and\n \"phone\". If PKDEVICE.formFactorOverride is not false, it is returned\n instead.",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/www/framework/device.js",
            "line": 128,
            "description": "Determines if the device is in Portrait orientation.",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/www/framework/device.js",
            "line": 137,
            "description": "Determines if the device is in Landscape orientation.",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/www/framework/device.js",
            "line": 150,
            "description": "Determines if the device is a hiDPI device (aka retina)",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/www/framework/fileutil.js",
            "line": 1,
            "description": "FILEUTIL\n Author: Kerri Shotts\nThis library includes routines to deal with the FILE API, (which is... a bit\n painful.) The purpose of the library is to reduce the amount of work necessary\n to go through obtaining a file system, working with directories and files,\n etc. That isn't to say that we can eliminate callbacks or even callback\n chaining -- but it is significantly easier without all the intervening cruft,\n which is essentially (for all intents and purposes) boilerplate.\nIMPORTANT NOTE:\nThis library provides various conveniences that make referencing persistent\n and temporary storage a bit easier as well. For example, you can use a\n path like the following:\n    doc://photo.jpg   -->   /some/gobbledygook/yourApp/Documents/photo.jpg\n     tmp://photo.jpg   -->   /some/gobbledygook/yourApp/tmp/photo.jpg\nSeveral APIs (such as camera capture) may also refer to paths with\n \"file://localhost\" attached. The routines will gracefully remove this so that\n the reference is a true file.\nCONVENIENCE:\nFor those who are more comfortable with *nix/BSD commands, nearly each method\n has a version that correlates to a roughly *nix name. The parameters are the\n same, however.\nMETHODS\n   copyFileTo ( source, target, success, failure )         |   cp ()\n   moveFileTo ( source, target, success, failure )         |   mv ()\n   removeFile ( theFile, success, failure )                |   rm ()\n   renameFile ( source, newName, success, failure )        |   -\n   createFileWriter ( theFile, success, failure )          |   fcreate ()\n   writeFileData ( writer, theData, success, failure )     |   fwrite ()\nPLANNED METHODS\n  getListing ( path, filters, success, failure )          |    ls ()\n   createDirectory ( path, newDirectory, success, failure )|    mkdir()\n   removeDirectory ( path, theDirectory, success, failure )|    rmdir()\n   createFileReader ( theFile, success, failure )          |    fopen()\n   readFileData ( reader, success, failure )               |    fread()",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/www/framework/fileutil.js",
            "line": 101,
            "description": "Determines the persistent and temporary file systems prior\n to file operations. While it's unlikely that these will\n change during application execution, it certainly doesn't\n hurt to re-read them whenever possible (just in case!).\nWhen both are read, the success method is called. If we\n can't obtain one or the other, the failure method is called.",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/www/framework/fileutil.js",
            "line": 140,
            "description": "Handles substition strings within a file path.\n doc:/ translates to the persistent storage. We don't use \"//\" here\n        since the persistentFS doesn't have a trailing \"/\", so we leave\n        that in the original.\n  tmp:/ translates to the temporary storage.\n  file://localhost translates to nothing.",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/www/framework/fileutil.js",
            "line": 159,
            "description": "Copies the file identified by @source to the file identified by @target.\n If the copy is successful, success() is called. If not, failure() is\n called.\nThe target will generally be of the form \"doc://filename\", but it can\n be any path and file name that the application has access to.\nNOTE: Copying will fail if the target exists.",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/www/framework/fileutil.js",
            "line": 193,
            "description": "*nix convenience method.",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/www/framework/fileutil.js",
            "line": 203,
            "description": "Moves the file identified by @source to the file identified by @target.\n If the move is successful, success() is called. If not, failure() is\n called.\nThe target will generally be of the form \"doc://filename\", but it can\n be any path and file name that the application has access to.\nNOTE: The move will overwrite the target if it exists.",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/www/framework/fileutil.js",
            "line": 237,
            "description": "Convenience method that allows renaming a file in the same\n directory as the source. The source's path will prepended\n to the new name.\nNOTE: The move will overwrite the target if it exists.",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/www/framework/fileutil.js",
            "line": 252,
            "description": "*nix convenience method.",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/www/framework/fileutil.js",
            "line": 262,
            "description": "Removes the file identified by @theFile. The full path must\n be specified.",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/www/framework/fileutil.js",
            "line": 283,
            "description": "*nix convenience method.",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/www/framework/fileutil.js",
            "line": 293,
            "description": "Creates a fileWriter for @theFile. If successful, it will\n call success() with the created writer. If unsuccessful, it\n will call failure().\nOnce in success(), writeFileData() may be used to finish\n the writing of data to the file.\nNote: if the file exists, it will be overwritten.",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/www/framework/fileutil.js",
            "line": 320,
            "description": "*nix convenience method.",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/www/framework/fileutil.js",
            "line": 330,
            "description": "Writes @theData to the specified writer. When complete,\n success() will be called. If it fails, failure().",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/www/framework/fileutil.js",
            "line": 343,
            "description": "*nix convenience method.",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/www/framework/localization.js",
            "line": 2,
            "description": "localization.js\n Author: Kerri Shotts\nProvides simple localization, as described in Chapter 1 of PhoneGap HotShot.\nRelies on JQuery/Globalize.js, as found at https://github.com/jquery/globalize",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/www/framework/localization.js",
            "line": 49,
            "description": "Loads the JQuery Globalize script from the framework directory\n as well as the underlying cultures definitions.",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/www/framework/localization.js",
            "line": 59,
            "description": "Loads the appropriate locale from the JQuery Globalize script.",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/www/framework/localization.js",
            "line": 72,
            "description": "Sets the current locale for the JQuery Globalize script.",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/www/framework/localization.js",
            "line": 81,
            "description": "Add a translation to the existing translation matrix",
            "params": [
                {
                    "name": "locale:",
                    "description": "the locale for which to add the translation"
                },
                {
                    "name": "key:",
                    "description": "the key for the translation (generally the word or phrase)"
                },
                {
                    "name": "value:",
                    "description": "the translated value."
                }
            ],
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/www/framework/localization.js",
            "line": 103,
            "description": "Return the user's locale (e.g., en-US or fr-FR)\n for proper localization.",
            "return": {
                "description": "the user's current locale. If one can't be\n found, \"en-US\" is returned."
            },
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/www/framework/localization.js",
            "line": 177,
            "description": "Convenience function for translating text.",
            "params": [
                {
                    "name": "key:",
                    "description": "the text to translate. Case doesn't matter."
                },
                {
                    "name": "locale:",
                    "description": "the locale to use for translation. If not defined, defaults\n                    to the user's current locale."
                },
                {
                    "name": "parms:",
                    "description": "(optional) An indexed array of replacement values."
                }
            ],
            "return": {
                "description": "the translated text, or the original key if no translation was found."
            },
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/www/framework/localization.js",
            "line": 217,
            "description": "Convenience function for localizing numbers.",
            "params": [
                {
                    "name": "theNumber:",
                    "description": "the number to localize"
                },
                {
                    "name": "theFormat:",
                    "description": "the number of decimal places to use. Defaults to \"n\" if not supplied"
                },
                {
                    "name": "theLocale:",
                    "description": "(optional) the locale. If not specified, current locale is assumed."
                }
            ],
            "return": {
                "description": "the number formatted according to the locale. If the number of digits after\n the decimal point is less than the actual number of digits, rounding is performed. If\n the number of digits is more than the actual number of digits, zeroes are added."
            },
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/www/framework/localization.js",
            "line": 241,
            "description": "Convenience function for localizing currency.",
            "params": [
                {
                    "name": "theNumber:",
                    "description": "the number to localize"
                },
                {
                    "name": "theFormat:",
                    "description": "the number of decimal places, defaults to two if not specified"
                },
                {
                    "name": "theLocale:",
                    "description": "(optional) the locale. If not specified, current locale is assumed."
                }
            ],
            "return": {
                "description": "the number formatted according to the locale's currency. If the number of digits after\n the decimal point is less than the actual number of digits, rounding is performed. If\n the number of digits is more than the actual number of digits, zeroes are added."
            },
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/www/framework/localization.js",
            "line": 264,
            "description": "Convenience function for localizing percentages.",
            "params": [
                {
                    "name": "theNumber:",
                    "description": "the number to localize"
                },
                {
                    "name": "theFormat:",
                    "description": "the number of decimal places, defaults to two if not specified"
                },
                {
                    "name": "theLocale:",
                    "description": "(optional) the locale. If not specified, current locale is assumed."
                }
            ],
            "return": {
                "description": "the number formatted according to the locale's percent settings."
            },
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/www/framework/localization.js",
            "line": 285,
            "description": "Convenience function for localizing dates.",
            "params": [
                {
                    "name": "theDate:",
                    "description": "the date to localize"
                },
                {
                    "name": "theFormat:",
                    "description": "(optional) The format of the date; \"d\" is assumed if not provided."
                },
                {
                    "name": "theLocale:",
                    "description": "(optional) the locale. If not specified, current locale is assumed."
                }
            ],
            "return": {
                "description": "the date formatted according to the locale's settings."
            },
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/www/framework/pk-object.js",
            "line": 1,
            "description": "BASE PKOBJECT\n\n*****************************************************************************\nThe Object class provides the top object that all other objects inherit\n from. This provides object inheritance via a subclass/superclass mechanism\n without having to worry about prototype or constructor inheritance.\nPKObjects provide simple subclassing and a limited form of KVO in the form\n of tags and tag listeners.",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/www/framework/pk-object.js",
            "line": 42,
            "description": "We need a way to provide inheritance. Most methods only provide\n inheritance across the constructor chain, not across any possible\n method. But for our purposes, we need to be able to provide for\n overriding any method (such as drawing, touch responses, etc.),\n and so we implement inheritance in a different way.\nFirst, the _classHierarchy, a private property, provides the\n inheritance tree. All objects inherit from \"Object\".",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/www/framework/pk-object.js",
            "line": 56,
            "description": "Objects are subclassed using this method. The newClass is the\n unique class name of the object (and should match the class'\n actual name.",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/www/framework/pk-object.js",
            "line": 68,
            "description": "getClass returns the current class of the object. The\n \"class\" property can be used as well. Note that there\n is no \"setter\" for this property; an object's class\n can *not* be changed.",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/www/framework/pk-object.js",
            "line": 82,
            "description": "Returns the super class for the given class. If the\n class is not supplied, the class is assumed to be the\n object's own class.\nThe property \"superClass\" uses this to return the\n object's direct superclass, but getSuperClassOfClass\n can be used to determine superclasses higher up\n the hierarchy.",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/www/framework/pk-object.js",
            "line": 109,
            "description": "_super is an object that stores overridden functions by class and method\n name. This is how we get the ability to arbitrarily override any method\n already present in the superclass.",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/www/framework/pk-object.js",
            "line": 118,
            "description": "Must be called prior to defining the overridden function as this moves\n the original function into the _super object. The functionName must\n match the name of the method exactly, since there may be a long tree\n of code that depends on it.",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/www/framework/pk-object.js",
            "line": 136,
            "description": "Calls a super function with up to 10 arguments.",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/www/framework/pk-object.js",
            "line": 155,
            "description": "initializes the object",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/www/framework/pk-object.js",
            "line": 165,
            "description": "Objects have some properties that we want all objects to have...",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/www/framework/pk-object.js",
            "line": 214,
            "description": "All objects subject notifications for events",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/www/framework/pk-object.js",
            "line": 261,
            "description": "//http://stackoverflow.com/a/11462081\nfunction clone(obj){\n    var clonedObjectsArray = [];\n    var originalObjectsArray = []; //used to remove the unique ids when finished\n    var next_objid = 0;\n\n    function objectId(obj) {\n        if (obj == null) return null;\n        if (obj.__obj_id == undefined){\n            obj.__obj_id = next_objid++;\n            originalObjectsArray[obj.__obj_id] = obj;\n        }\n        return obj.__obj_id;\n    }\n\n    function cloneRecursive(obj) {\n        if (null == obj || typeof obj == \"string\" || typeof obj == \"number\" || typeof obj == \"boolean\") return obj;\n\n        // Handle Date\n        if (obj instanceof Date) {\n            var copy = new Date();\n            copy.setTime(obj.getTime());\n            return copy;\n        }\n\n        // Handle Array\n        if (obj instanceof Array) {\n            var copy = [];\n            for (var i = 0; i < obj.length; ++i) {\n                copy[i] = cloneRecursive(obj[i]);\n            }\n            return copy;\n        }\n\n        // Handle Object\n        if (obj instanceof Object) {\n            if (clonedObjectsArray[objectId(obj)] != undefined)\n                return clonedObjectsArray[objectId(obj)];\n\n            var copy;\n            if (obj instanceof Function)//Handle Function\n                copy = function(){return obj.apply(this, arguments);};\n            else\n                copy = {};\n\n            clonedObjectsArray[objectId(obj)] = copy;\n\n            for (var attr in obj)\n                if (attr != \"__obj_id\" && obj.hasOwnProperty(attr))\n                    copy[attr] = cloneRecursive(obj[attr]);                 \n\n            return copy;\n        }       \n\n\n        throw new Error(\"Unable to copy obj! Its type isn't supported.\");\n    }\n    var cloneObj = cloneRecursive(obj);\n\n\n\n    //remove the unique ids\n    for (var i = 0; i < originalObjectsArray.length; i++)\n    {\n        delete originalObjectsArray[i].__obj_id;\n    };\n\n    return cloneObj;\n}",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/www/framework/scroller.js",
            "line": 1,
            "description": "SCROLLER\n Author:  Kerri Shotts\n Version: 0.1 alpha\n License: MIT\nThis library is intended to be similar to iScroll-lite in that it should be\n a relatively fast method of scrolling content without being horribly laggy\n or cause incorrect \"clicks\" to be registered.\nThis library does *NOT* support physics-based scrolling, except for a small\n inertia animation at the end of a scroll. It is not intended to replicate\n native scrolling /at all/. There are no bounces at the top or bottom. There\n is no visible scroll bar either. Essentially, overflow:scroll as supported\n on iOS 5 with no bounce/inertia scrolling.\nConsider this library an experiment. The idea is to be simpler than iScroll\n to use -- for example, the scroller only needs to be created once -- it does\n not need to be refreshed when AJAX content loads. It is intended to be at\n least as fast as iScroll, if not a little faster. It is not, however,\n intended to be a native scrolling solution. At this time, I do not believe\n it truly possible or practice, and users will notice any non-native solution\n that tries to match, so why try?\nUsage:\nvar yourScroller = new SCROLLER.GenericScroller ( \"the_element_to_scroll\" );\nwhere you have the following DOM tree:\n    container_element\n     - the_element_to_scroll\nFuture Goals:\n - Detect native physics scrolling and use it when possible\n  - Detect native overflow:scroll (non-physics) and use it when possible\n  - Improve the inertial scrolling at end (this is a very rough implementation)\n  - Become irrelevant. I hope for a day when all mobile browsers can scroll\n    complex content natively and smoothly.\nSupported Platforms:\n - Android 2.3+\n  - iOS 4.3+\n  - probably any webkit browser?\nKnown Issues:\n  - A little too willing to call a scroll a \"click\".",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/www/framework/scroller.js",
            "line": 107,
            "description": "Attaches the scroller to a new element. The element MUST be contained within\n another element that can support the setting of scrollTop/Left.\nAny overflow values will be overridden. Any webkit transforms may also be\n overridden.",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/www/framework/scroller.js",
            "line": 148,
            "description": "Get the scroll position",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/www/framework/scroller.js",
            "line": 161,
            "description": "Scroll to a given location. If the location can't be scrolled to,\n the nearest location will be used.",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/www/framework/scroller.js",
            "line": 174,
            "description": "touchStart initializes all our values when a touch is received.",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/www/framework/scroller.js",
            "line": 204,
            "description": "When a touch moves, we'll receive the event here.",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/www/framework/scroller.js",
            "line": 238,
            "description": "When a finger is lifted from the screen, we'll get this event.\n We can determine whether or not it was a click if we scrolled at all,\n and if we scrolled a certain distance, we'll do a little inertial\n scrolling",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/www/framework/ui-base.js",
            "line": 1,
            "description": "UI-BASE\n Author: Kerri Shotts\n Version: 0.3\nThis provides the basics of the UI model, including poings, rects, and more.",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/www/framework/ui-base.js",
            "line": 37,
            "description": "Points are of the form { x: #, y: # }",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/www/framework/ui-base.js",
            "line": 50,
            "description": "offsets a point by the values in another point. For example,\n if pointA = { x:100, y:100 } and pointB = { x:-5, y:10 }, the\n returned point will be { x:95, y:110 }.",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/www/framework/ui-base.js",
            "line": 62,
            "description": "Sizes are similar to points, but they are of the form\n { w: width, h: height }",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/www/framework/ui-base.js",
            "line": 89,
            "description": "Rects are of the form { origin: point, size: size }, or\n { origin: {x: #, y: #}, size: {w: width, h: height} }",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/www/framework/ui-base.js",
            "line": 105,
            "description": "Offsets a rect's origin point by the supplied point.",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/www/framework/ui-base.js",
            "line": 115,
            "description": "Offsets a rect's origin by the origin of the second rect,\n and offsets the rect's size by the size of the second rect.\nThis implies that the second rect does not need to be \"real\",\n as in, it can have negative sizes and such.",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/www/framework/ui-base.js",
            "line": 130,
            "description": "Returns true if the two rects supplied intersect. Note that this\n will not work if the rectangles are non-canonical.",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/www/framework/ui-base.js",
            "line": 155,
            "description": "Think of these as constants, except you have to call them like a \n method.\nzeroPoint() returns a point of {0,0}\n zeroSize() returns a size of {0,0}\n zeroRect() returns a rect of { {0,0}, {0,0} }\n screenSize() returns a **point** representing the size of the screen (or browser).\n screenBounds() returns a **rect** representing the size of the screen (with a {0,0} origin).",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/www/framework/ui-base.js",
            "line": 173,
            "description": "fonts",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/www/framework/ui-base.js",
            "line": 237,
            "description": "Shadows",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/www/framework/ui-base.js",
            "line": 314,
            "description": "Colors",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/www/framework/ui-base.js",
            "line": 361,
            "description": "Images",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/www/framework/ui-base.js",
            "line": 458,
            "description": "borders",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/www/framework/ui-base.js",
            "line": 554,
            "description": "events",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/www/framework/ui-core.js",
            "line": 1,
            "description": "UI-CORE\n Author: Kerri Shotts\nThis script provides a lot of the core user interface framework, such as\n loading content via AJAX, transitions, and more.",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/www/framework/ui-core.js",
            "line": 84,
            "description": "Global back button handler, since doing it per-view and per-\n message is buggy. This will call backButtonPressed() on any\n active message or view. If said method isn't found, it will\n pop the view on its own.\nNOTE: if backButtonPressed() is defined, it is expected to\n pop the view, if the method is also a view. If the view is\n not popped, the back button will have no effect.\nSECOND NOTE: Since back buttons received in quick succession\n are problematic, we force the user to wait 1s before the next\n back button is accepted.",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/www/framework/ui-core.js",
            "line": 129,
            "description": "Initializes the application framework\n  - in this version of the framework, we force an orientation update.\n  - by default, we attach a global back button handler\n  - we deisable animations and transforms for Android and WP7.",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/www/framework/ui-core.js",
            "line": 177,
            "description": "Called on first-start and whenever the orientation changes. It updates the\n body's class to reflect the device, formfactor, orientation, and scaling.",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/www/framework/ui-core.js",
            "line": 261,
            "description": "Shows a view and pushes it on the viewStack. NO ANIMATION.\n DOES NOT PROPERLY CALL viewWillHide/viewDidHide of any view, since there\n may be no view visible.",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/www/framework/ui-core.js",
            "line": 288,
            "description": "Hides a view and pops it off the viewStack. NO ANIMATION.\n DOES NOT ATTEMPT TO CALL viewWillShow or viewDidShow of any view\n on the stack, as there may not be any view visible.",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/www/framework/ui-core.js",
            "line": 314,
            "description": "Swaps a view on the stack with the desired view. NO ANIMATION.",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/www/framework/ui-core.js",
            "line": 505,
            "description": "Shows a view WITH ANIMATION and pushes it onto the view stack.\n The animation is a slide from right to left.",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/www/framework/ui-core.js",
            "line": 664,
            "description": "Hides a view WITH ANIMATION and pops it from the stack.",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/www/framework/ui-core.js",
            "line": 924,
            "description": "Applies touch listeners to various items in the dom.\nIn this version of the framework, we apply it to BUTTONs.",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/www/framework/ui-gestures.js",
            "line": 1,
            "description": "UI-GESTURES\n Author:  Kerri Shotts\n Version: 0.1 alpha\n License: MIT\nA simple, no-frills gesture recognizer. Permits long-press recognition,\n horizontal swipe recognition, and vertical swipe recognition. Recognizing\n swipes in a particular direction (left, right, up, down) should be easy to\n add later.\nThe SimpleGesture class represents the basic recognizer -- it implements all\n the tracking of touch and mouse events. Every 100ms it calls\n a recognition function, which by default does nothing. Essentially, Simple-\n Gesture is abstract. This method is expected to be overridden by a specific\n recognizer, which the LongPressGesture, HorizontalSwipeGesture, and\n VerticalSwipeGesture do.\nThe LongPressGesture will fire off an event when a longpress is recognized.\n How this is recognized is partially defined by the caller -- that is,\n two durations can be supplied. By default, the long-press is recognized at\n 1s and cancelled at 3s (assuming no previous recognition). It is also\n cancelled should any movement outside of a 25px radius occur.\nThe HorizontalSwipeGesture and VerticalSwipeGesture will fire off an event\n when a swipe in the given axis is detected. This swipe is detected when the\n length of the swipe exceeds 75px (or the provided override), and will be\n fired as long as the duration of the swipe is less than the cancel duration\n (3s by default). The line must not deviate by more than 25px in the specified\n axis, or the gesture will fail to be recognized.\nUsage:\nvar anElement = document.getElementById(\"abc\");\n var aLongPressGesture = new GESTURES.LongPressGesture\n                             ( anElement, theFunctionToCallWhenRecognized,\n                               [ thePressDuration, [ theCancelDelay ]] );\nvar aHorizontalSwipeGesture = new GESTURES.HorizontalSwipeGesture\n                               ( anElement, theFunctionToCallWhenRecognized,\n                                 [ theSwipeLength, [ theCancelDelay ]] );\nvar aVerticalSwipeGesture = new GESTURES.VerticalSwipeGesture\n                             ( anElement, theFunctionToCallWhenRecognized,\n                               [ theSwipeLength, [ theCancelDelay ]] );\n\nWhere: anElement is an HTML DOM element\n        theFunctionToCallWhenRecognized is a function that will be called\n            when the gesture is recognized. It will be passed the recognizer,\n            and as such, one can store & retrieve data in this manner:\n                aLongPressGesture.data = \"Hello\";\n                 function theFunctionToCallWhenRecognized ( gr )\n                 { alert (gr.data); }\n           This will generate an alert of \"Hello\" when the element is long-\n            pressed.\n       thePressDuration: Optional, defaults to 1s. The amount of time required\n            to recognize a long-press.\n        theSwipeLength: Optional, defaults to 75px. The length of a swipe\n            required to recognize a swipe.\n        theCancelDelay: Optional, defaults to 3s. If a gesture is not recognized\n            prior to this delay, the gesture is cancelled, that is, it will\n            never be recognized.",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/www/framework/ui-label.js",
            "line": 1,
            "description": "UI-LABEL\n Author: Kerri Shotts\n Version: 0.3\nUI-LABEL provides the UI.Label object",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/www/framework/ui-label.js",
            "line": 48,
            "description": "labels have the following properties:\n  - text (properlly innerHTML)\n  - textColor ( font Color )\n  - shadow\n  - shadowColor\n  - shadowOffset\n  - textAlignment\n  - font",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/www/framework/ui-label.js",
            "line": 124,
            "description": "init",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/www/framework/ui-msg.js",
            "line": 1,
            "description": "UI-MSG\n Author: Kerri Shotts\nThis script provides a mechanism by which alerts, prompts, and confirmations\n can be displayed to the end user.",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/www/framework/ui-view.js",
            "line": 1,
            "description": "UI-VIEW\n Author: Kerri Shotts\n Version: 0.3\nUI-VIEW provides the UI.View object",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/www/framework/ui-view.js",
            "line": 60,
            "description": "All views have direct DOM representations",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/www/framework/ui-view.js",
            "line": 66,
            "description": "All views have subviews",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/www/framework/ui-view.js",
            "line": 104,
            "description": "All views have bounds and frames.",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/www/framework/ui-view.js",
            "line": 210,
            "description": "recalculates the element's position based on\n the frame. It also calls calcElement() for the\n object, if defined. After that, it calls the\n _calcElement for every subview, in case they\n decide to be re-positioned.",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/www/framework/ui-view.js",
            "line": 263,
            "description": "Every view has a background color, even if it is transparent.",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/www/framework/ui-view.js",
            "line": 283,
            "description": "Every view can have a background image",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/www/framework/ui-view.js",
            "line": 302,
            "description": "Every view can also have a border",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/www/framework/ui-view.js",
            "line": 323,
            "description": "And every view can also have multiple shadows",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/www/framework/ui-view.js",
            "line": 352,
            "description": "Every view can be shown or hidden",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/www/framework/ui-view.js",
            "line": 376,
            "description": "Every view has opacity",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/www/framework/ui-view.js",
            "line": 398,
            "description": "Views can override their scrolling",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/www/framework/ui-view.js",
            "line": 416,
            "description": "event processing",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/www/framework/ui-view.js",
            "line": 500,
            "description": "init",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/www/framework/utility.js",
            "line": 1,
            "description": "UTILITY\n Author: Kerri Shotts\nThis library includes simple utility functions",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/www/framework/utility.js",
            "line": 46,
            "description": "Checks to see if the dependency has already been loaded.",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/www/framework/utility.js",
            "line": 105,
            "description": "Returns an element specified by elementId. Similar to (but not exactly like) jQuery's $()",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/www/framework/utility.js",
            "line": 115,
            "description": "Returns an element specified by elementId, but with localization. Localization assumes\n you have at least one element of the form <elementId_enus>, and that all other localized\n elements have the locale after the elementId appended with an underscore.\n (eg: thisElementIsLocalized_enus and thisElementIsLocalized_eses)",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/www/framework/utility.js",
            "line": 153,
            "description": "Similar to $$. Returns all classes matching a selector.",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/www/framework/utility.js",
            "line": 163,
            "description": "Utility function to delay execution of code",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/www/framework/utility.js",
            "line": 172,
            "description": "Loads a file or URL and returns it to the completion\n handler. The completion handler must be of the form\n fn(success/failure, data).",
            "params": [
                {
                    "name": "theFileName",
                    "description": "the file or URL to load"
                },
                {
                    "name": "aSync",
                    "description": "if TRUE, load asynchronously"
                },
                {
                    "name": "completion",
                    "description": "completion block"
                }
            ],
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/www/framework/utility.js",
            "line": 272,
            "description": "Javascript doesn't provide any native include functionality,\n which tends to bloat code and result in long scripts that are\n brittle. Here's our tiny effort to help stem the tide and\n make Javascript just a /little/ nicer.\nNOTE: includes are loaded SYNCHRONOUSLY. This is done as further\n includes may rely upon the one being loaded now. However, it does\n mean that larger files may take longer to process.",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/www/framework/utility.js",
            "line": 314,
            "description": "Loads an HTML fragment, creates a DIV, and adds it to the DOM.\n Any script tags inside will be executed.",
            "params": [
                {
                    "name": "theFileName",
                    "description": "the file or URL to laod"
                },
                {
                    "name": "options",
                    "description": "An array of options, as follows:"
                },
                {
                    "name": "aSync",
                    "description": "Determines if the file is loaded\n                                 asynchronously or not."
                },
                {
                    "name": "id",
                    "description": "The ID to attach to the DIV created\n                                 to surround the content."
                },
                {
                    "name": "className",
                    "description": "The class name to attach to the DIV\n                                 created to surround the content."
                },
                {
                    "name": "attachTo",
                    "description": "Indicates the element to append the\n                                 content to. If not specified,\n                                 document.body is used."
                },
                {
                    "name": "completion",
                    "description": "A function called when loading is\n                              complete. Of the form fn ( successOrFailure )\n                              so that success or failure of the load\n                              can be determined."
                }
            ],
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/www/framework/utility.js",
            "line": 407,
            "description": "Retrieves a JSON string from the specified URL, and executes completion.\n Completion must be of the form ( success, data ).",
            "params": [
                {
                    "name": "theURL",
                    "description": "the URL or Filename"
                },
                {
                    "name": "completion",
                    "description": "function of the from ( success, data )"
                }
            ],
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/www/framework/utility.js",
            "line": 442,
            "description": "Loads a URL in a popup window. Uses ChildBrowser for PG 2.2.x or\n lower, and in-app browser for 2.3 or higher.",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/www/framework/utility.js",
            "line": 476,
            "description": "instanceOfTemplate returns an HTML string ready for insertion into the DOM\n as an instance of the supplied template (templateElement). Any %VAR% are\n replaced by VAR from the replacements object.",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/www/framework/utility.js",
            "line": 496,
            "description": "Filename Handling",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/www/cordova.js",
            "line": 98,
            "description": "Listen for DOMContentLoaded and notify our channel subscribers.",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/www/cordova.js",
            "line": 108,
            "description": "Intercept calls to addEventListener + removeEventListener and handle deviceready,\nresume, and pause events.",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/www/cordova.js",
            "line": 117,
            "description": "Houses custom event handlers to intercept on document + window event listeners.",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/www/cordova.js",
            "line": 183,
            "description": "Methods to add/remove your own addEventListener hijacking on document + window.",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/www/cordova.js",
            "line": 201,
            "description": "Retrieve original event handlers that were replaced by Cordova",
            "return": {
                "description": "object"
            },
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/www/cordova.js",
            "line": 210,
            "description": "Method to fire event from native code\nbNoDetach is required for events which cause an exception which needs to be caught in native code",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/www/cordova.js",
            "line": 240,
            "description": "Plugin callback mechanism.",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/www/cordova.js",
            "line": 260,
            "description": "Called by native code when returning successful result from an action.",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/www/cordova.js",
            "line": 271,
            "description": "Called by native code when returning error result from an action.",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/www/cordova.js",
            "line": 284,
            "description": "Called by native code when returning the result from an action.",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/www/cordova.js",
            "line": 462,
            "description": "Merge properties from one object onto another recursively.  Properties from\nthe src object will overwrite existing target property.",
            "params": [
                {
                    "name": "target",
                    "description": "Object to merge properties into."
                },
                {
                    "name": "src",
                    "description": "Object to merge properties from."
                }
            ],
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/www/cordova.js",
            "line": 507,
            "description": "Custom pub-sub \"channel\" that can have functions subscribed to it\nThis object is used to define and control firing of events for\ncordova initialization, as well as for custom events thereafter.\n\nThe order of events during page load and Cordova startup is as follows:\n\nonDOMContentLoaded*         Internal event that is received when the web page is loaded and parsed.\nonNativeReady*              Internal event that indicates the Cordova native side is ready.\nonCordovaReady*             Internal event fired when all Cordova JavaScript objects have been created.\nonCordovaInfoReady*         Internal event fired when device properties are available.\nonCordovaConnectionReady*   Internal event fired when the connection property has been set.\nonDeviceReady*              User event fired to indicate that Cordova is ready\nonResume                    User event fired to indicate a start/resume lifecycle event\nonPause                     User event fired to indicate a pause lifecycle event\nonDestroy*                  Internal event fired when app is being destroyed (User should use window.onunload event, not this one).\n\nThe events marked with an * are sticky. Once they have fired, they will stay in the fired state.\nAll listeners that subscribe after the event is fired will be executed right away.\n\nThe only Cordova events that user code should register for are:\n     deviceready           Cordova native code is initialized and Cordova APIs can be called from JavaScript\n     pause                 App has moved to background\n     resume                App has returned to foreground\n\nListeners can be registered as:\n     document.addEventListener(\"deviceready\", myDeviceReadyListener, false);\n     document.addEventListener(\"resume\", myResumeListener, false);\n     document.addEventListener(\"pause\", myPauseListener, false);\n\nThe DOM lifecycle events should be used for saving and restoring state\n     window.onload\n     window.onunload",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/www/cordova.js",
            "line": 543,
            "description": "Channel",
            "is_constructor": 1,
            "params": [
                {
                    "name": "type",
                    "description": "String the channel name"
                }
            ],
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/www/cordova.js",
            "line": 563,
            "description": "Calls the provided function only after all of the channels specified\nhave been fired. All channels must be sticky channels.",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/www/cordova.js",
            "line": 588,
            "description": "cordova Channels that must fire before \"deviceready\" is fired.",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/www/cordova.js",
            "line": 594,
            "description": "Indicate that a feature needs to be initialized before it is ready to be used.\nThis holds up Cordova's \"deviceready\" event until the feature has been initialized\nand Cordova.initComplete(feature) is called.",
            "params": [
                {
                    "name": "feature",
                    "description": "The unique feature name",
                    "type": "String"
                }
            ],
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/www/cordova.js",
            "line": 609,
            "description": "Indicate that initialization code has completed and the feature is ready to be used.",
            "params": [
                {
                    "name": "feature",
                    "description": "The unique feature name",
                    "type": "String"
                }
            ],
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/www/cordova.js",
            "line": 626,
            "description": "Subscribes the given function to the channel. Any time that\nChannel.fire is called so too will the function.\nOptionally specify an execution context for the function\nand a guid that can be used to stop subscribing to the channel.\nReturns the guid.",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/www/cordova.js",
            "line": 662,
            "description": "Unsubscribes the function with the given guid from the channel.",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/www/cordova.js",
            "line": 680,
            "description": "Calls all functions subscribed to this channel.",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/www/cordova.js",
            "line": 780,
            "description": "Creates a gap bridge iframe used to notify the native code about queued\ncommands.",
            "access": "private",
            "tagname": "",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/www/cordova.js",
            "line": 1138,
            "description": "Gets a picture from source defined by \"options.sourceType\", and returns the\nimage as defined by the \"options.destinationType\" option.\n\nThe defaults are sourceType=CAMERA and destinationType=FILE_URI.",
            "params": [
                {
                    "name": "successCallback",
                    "description": "",
                    "type": "Function"
                },
                {
                    "name": "errorCallback",
                    "description": "",
                    "type": "Function"
                },
                {
                    "name": "options",
                    "description": "",
                    "type": "Object"
                }
            ],
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/www/cordova.js",
            "line": 1219,
            "description": "A handle to an image picker popover.",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/www/cordova.js",
            "line": 1238,
            "description": "Encapsulates options for iOS Popover image picker",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/www/cordova.js",
            "line": 1258,
            "description": "Encapsulates all audio capture operation configuration options.",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/www/cordova.js",
            "line": 1277,
            "description": "The CaptureError interface encapsulates all errors in the Capture API.",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/www/cordova.js",
            "line": 1302,
            "description": "Encapsulates all image capture operation configuration options.",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/www/cordova.js",
            "line": 1319,
            "description": "Encapsulates all video capture operation configuration options.",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/www/cordova.js",
            "line": 1338,
            "description": "CompassError.\nAn error code assigned by an implementation when an error has occurred",
            "is_constructor": 1,
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/www/cordova.js",
            "line": 1371,
            "description": "Encapsulates a set of parameters that the capture device supports.",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/www/cordova.js",
            "line": 1392,
            "description": "Network status",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/www/cordova.js",
            "line": 1416,
            "description": "Converts primitives into Complex Object\nCurrently only used for Date fields",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/www/cordova.js",
            "line": 1430,
            "description": "Converts Complex objects into primitives\nOnly conversion at present is for Dates.",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/www/cordova.js",
            "line": 1454,
            "description": "Contains information about a single contact.",
            "is_constructor": 1,
            "params": [
                {
                    "name": "id",
                    "description": "unique identifier",
                    "type": "DOMString"
                },
                {
                    "name": "displayName",
                    "description": "",
                    "type": "DOMString"
                },
                {
                    "name": "name",
                    "description": "",
                    "type": "ContactName"
                },
                {
                    "name": "nickname",
                    "description": "",
                    "type": "DOMString"
                },
                {
                    "name": "phoneNumbers",
                    "description": "array of phone numbers",
                    "type": "Array.<ContactField>"
                },
                {
                    "name": "emails",
                    "description": "array of email addresses",
                    "type": "Array.<ContactField>"
                },
                {
                    "name": "addresses",
                    "description": "array of addresses",
                    "type": "Array.<ContactAddress>"
                },
                {
                    "name": "ims",
                    "description": "instant messaging user ids",
                    "type": "Array.<ContactField>"
                },
                {
                    "name": "organizations",
                    "description": "",
                    "type": "Array.<ContactOrganization>"
                },
                {
                    "name": "birthday",
                    "description": "contact's birthday",
                    "type": "DOMString"
                },
                {
                    "name": "note",
                    "description": "user notes about contact",
                    "type": "DOMString"
                },
                {
                    "name": "photos",
                    "description": "",
                    "type": "Array.<ContactField>"
                },
                {
                    "name": "categories",
                    "description": "",
                    "type": "Array.<ContactField>"
                },
                {
                    "name": "urls",
                    "description": "contact's web sites",
                    "type": "Array.<ContactField>"
                }
            ],
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/www/cordova.js",
            "line": 1491,
            "description": "Removes contact from device storage.",
            "params": [
                {
                    "name": "successCB",
                    "description": "success callback"
                },
                {
                    "name": "errorCB",
                    "description": "error callback"
                }
            ],
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/www/cordova.js",
            "line": 1509,
            "description": "Creates a deep copy of this Contact.\nWith the contact ID set to null.",
            "return": {
                "description": "copy of this Contact"
            },
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/www/cordova.js",
            "line": 1539,
            "description": "Persists contact to device storage.",
            "params": [
                {
                    "name": "successCB",
                    "description": "success callback"
                },
                {
                    "name": "errorCB",
                    "description": "error callback"
                }
            ],
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/www/cordova.js",
            "line": 1573,
            "description": "Contact address.",
            "is_constructor": 1,
            "params": [
                {
                    "name": "id",
                    "description": "unique identifier, should only be set by native code",
                    "type": "DOMString"
                },
                {
                    "name": "formatted",
                    "description": "// NOTE: not a W3C standard"
                },
                {
                    "name": "streetAddress",
                    "description": ""
                },
                {
                    "name": "locality",
                    "description": ""
                },
                {
                    "name": "region",
                    "description": ""
                },
                {
                    "name": "postalCode",
                    "description": ""
                },
                {
                    "name": "country",
                    "description": ""
                }
            ],
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/www/cordova.js",
            "line": 1604,
            "description": "ContactError.\nAn error code assigned by an implementation when an error has occurred",
            "is_constructor": 1,
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/www/cordova.js",
            "line": 1613,
            "description": "Error codes",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/www/cordova.js",
            "line": 1631,
            "description": "Generic contact field.",
            "is_constructor": 1,
            "params": [
                {
                    "name": "id",
                    "description": "unique identifier, should only be set by native code // NOTE: not a W3C standard",
                    "type": "DOMString"
                },
                {
                    "name": "type",
                    "description": ""
                },
                {
                    "name": "value",
                    "description": ""
                },
                {
                    "name": "pref",
                    "description": ""
                }
            ],
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/www/cordova.js",
            "line": 1653,
            "description": "ContactFindOptions.",
            "is_constructor": 1,
            "params": [
                {
                    "name": "filter",
                    "description": "used to match contacts against"
                },
                {
                    "name": "multiple",
                    "description": "boolean used to determine if more than one contact should be returned"
                }
            ],
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/www/cordova.js",
            "line": 1672,
            "description": "Contact name.",
            "is_constructor": 1,
            "params": [
                {
                    "name": "formatted",
                    "description": "// NOTE: not part of W3C standard"
                },
                {
                    "name": "familyName",
                    "description": ""
                },
                {
                    "name": "givenName",
                    "description": ""
                },
                {
                    "name": "middle",
                    "description": ""
                },
                {
                    "name": "prefix",
                    "description": ""
                },
                {
                    "name": "suffix",
                    "description": ""
                }
            ],
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/www/cordova.js",
            "line": 1698,
            "description": "Contact organization.",
            "is_constructor": 1,
            "params": [
                {
                    "name": "id",
                    "description": "unique identifier, should only be set by native code // NOTE: not a W3C standard",
                    "type": "DOMString"
                },
                {
                    "name": "name",
                    "description": ""
                },
                {
                    "name": "dept",
                    "description": ""
                },
                {
                    "name": "title",
                    "description": ""
                },
                {
                    "name": "startDate",
                    "description": ""
                },
                {
                    "name": "endDate",
                    "description": ""
                },
                {
                    "name": "location",
                    "description": ""
                },
                {
                    "name": "desc",
                    "description": ""
                }
            ],
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/www/cordova.js",
            "line": 1727,
            "description": "This class contains position information.",
            "params": [
                {
                    "name": "lat",
                    "description": "",
                    "type": "Object"
                },
                {
                    "name": "lng",
                    "description": "",
                    "type": "Object"
                },
                {
                    "name": "alt",
                    "description": "",
                    "type": "Object"
                },
                {
                    "name": "acc",
                    "description": "",
                    "type": "Object"
                },
                {
                    "name": "head",
                    "description": "",
                    "type": "Object"
                },
                {
                    "name": "vel",
                    "description": "",
                    "type": "Object"
                },
                {
                    "name": "altacc",
                    "description": "",
                    "type": "Object"
                }
            ],
            "is_constructor": 1,
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/www/cordova.js",
            "line": 1739,
            "description": "The latitude of the position.",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/www/cordova.js",
            "line": 1743,
            "description": "The longitude of the position,",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/www/cordova.js",
            "line": 1747,
            "description": "The accuracy of the position.",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/www/cordova.js",
            "line": 1751,
            "description": "The altitude of the position.",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/www/cordova.js",
            "line": 1755,
            "description": "The direction the device is moving at the position.",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/www/cordova.js",
            "line": 1759,
            "description": "The velocity with which the device is moving at the position.",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/www/cordova.js",
            "line": 1768,
            "description": "The altitude accuracy of the position.",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/www/cordova.js",
            "line": 1788,
            "description": "An interface representing a directory on the file system.\n\n{boolean} isFile always false (readonly)\n{boolean} isDirectory always true (readonly)\n{DOMString} name of the directory, excluding the path leading to it (readonly)\n{DOMString} fullPath the absolute full path to the directory (readonly)\nTODO: implement this!!! {FileSystem} filesystem on which the directory resides (readonly)",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/www/cordova.js",
            "line": 1803,
            "description": "Creates a new DirectoryReader to read entries from this directory",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/www/cordova.js",
            "line": 1810,
            "description": "Creates or looks up a directory",
            "params": [
                {
                    "name": "path",
                    "description": "either a relative or absolute path from this directory in which to look up or create a directory",
                    "type": "DOMString"
                },
                {
                    "name": "options",
                    "description": "to create or exclusively create the directory",
                    "type": "Flags"
                },
                {
                    "name": "successCallback",
                    "description": "is called with the new entry",
                    "type": "Function"
                },
                {
                    "name": "errorCallback",
                    "description": "is called with a FileError",
                    "type": "Function"
                }
            ],
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/www/cordova.js",
            "line": 1830,
            "description": "Deletes a directory and all of it's contents",
            "params": [
                {
                    "name": "successCallback",
                    "description": "is called with no parameters",
                    "type": "Function"
                },
                {
                    "name": "errorCallback",
                    "description": "is called with a FileError",
                    "type": "Function"
                }
            ],
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/www/cordova.js",
            "line": 1844,
            "description": "Creates or looks up a file",
            "params": [
                {
                    "name": "path",
                    "description": "either a relative or absolute path from this directory in which to look up or create a file",
                    "type": "DOMString"
                },
                {
                    "name": "options",
                    "description": "to create or exclusively create the file",
                    "type": "Flags"
                },
                {
                    "name": "successCallback",
                    "description": "is called with the new entry",
                    "type": "Function"
                },
                {
                    "name": "errorCallback",
                    "description": "is called with a FileError",
                    "type": "Function"
                }
            ],
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/www/cordova.js",
            "line": 1875,
            "description": "An interface that lists the files and directories in a directory.",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/www/cordova.js",
            "line": 1882,
            "description": "Returns a list of entries from a directory.",
            "params": [
                {
                    "name": "successCallback",
                    "description": "is called with a list of entries",
                    "type": "Function"
                },
                {
                    "name": "errorCallback",
                    "description": "is called with a FileError",
                    "type": "Function"
                }
            ],
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/www/cordova.js",
            "line": 1925,
            "description": "Represents a file or directory on the local file system.",
            "params": [
                {
                    "name": "isFile!~YUIDOC_LINE~!",
                    "description": "true if Entry is a file (readonly)",
                    "type": "Boolean"
                },
                {
                    "name": "isDirectory!~YUIDOC_LINE~!",
                    "description": "true if Entry is a directory (readonly)",
                    "type": "Boolean"
                },
                {
                    "name": "name!~YUIDOC_LINE~!",
                    "description": "name of the file or directory, excluding the path\n           leading to it (readonly)",
                    "type": "DOMString"
                },
                {
                    "name": "fullPath!~YUIDOC_LINE~!",
                    "description": "the absolute full path to the file or directory\n           (readonly)",
                    "type": "DOMString"
                }
            ],
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/www/cordova.js",
            "line": 1947,
            "description": "Look up the metadata of the entry.",
            "params": [
                {
                    "name": "successCallback!~YUIDOC_LINE~!",
                    "description": "is called with a Metadata object",
                    "type": "Function"
                },
                {
                    "name": "errorCallback!~YUIDOC_LINE~!",
                    "description": "is called with a FileError",
                    "type": "Function"
                }
            ],
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/www/cordova.js",
            "line": 1968,
            "description": "Set the metadata of the entry.",
            "params": [
                {
                    "name": "successCallback!~YUIDOC_LINE~!",
                    "description": "is called with a Metadata object",
                    "type": "Function"
                },
                {
                    "name": "errorCallback!~YUIDOC_LINE~!",
                    "description": "is called with a FileError",
                    "type": "Function"
                },
                {
                    "name": "metadataObject!~YUIDOC_LINE~!",
                    "description": "keys and values to set",
                    "type": "Object"
                }
            ],
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/www/cordova.js",
            "line": 1983,
            "description": "Move a file or directory to a new location.",
            "params": [
                {
                    "name": "parent!~YUIDOC_LINE~!",
                    "description": "the directory to which to move this entry",
                    "type": "DirectoryEntry"
                },
                {
                    "name": "newName!~YUIDOC_LINE~!",
                    "description": "new name of the entry, defaults to the current name",
                    "type": "DOMString"
                },
                {
                    "name": "successCallback!~YUIDOC_LINE~!",
                    "description": "called with the new DirectoryEntry object",
                    "type": "Function"
                },
                {
                    "name": "errorCallback!~YUIDOC_LINE~!",
                    "description": "called with a FileError",
                    "type": "Function"
                }
            ],
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/www/cordova.js",
            "line": 2022,
            "description": "Copy a directory to a different location.",
            "params": [
                {
                    "name": "parent!~YUIDOC_LINE~!",
                    "description": "the directory to which to copy the entry",
                    "type": "DirectoryEntry"
                },
                {
                    "name": "newName!~YUIDOC_LINE~!",
                    "description": "new name of the entry, defaults to the current name",
                    "type": "DOMString"
                },
                {
                    "name": "successCallback!~YUIDOC_LINE~!",
                    "description": "called with the new Entry object",
                    "type": "Function"
                },
                {
                    "name": "errorCallback!~YUIDOC_LINE~!",
                    "description": "called with a FileError",
                    "type": "Function"
                }
            ],
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/www/cordova.js",
            "line": 2063,
            "description": "Return a URL that can be used to identify this entry.",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/www/cordova.js",
            "line": 2071,
            "description": "Returns a URI that can be used to identify this entry.",
            "params": [
                {
                    "name": "mimeType",
                    "description": "for a FileEntry, the mime type to be used to interpret the file, when loaded through this URI.",
                    "type": "DOMString"
                }
            ],
            "return": {
                "description": "uri"
            },
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/www/cordova.js",
            "line": 2083,
            "description": "Remove a file or directory. It is an error to attempt to delete a\ndirectory that is not empty. It is an error to attempt to delete a\nroot directory of a file system.",
            "params": [
                {
                    "name": "successCallback",
                    "description": "called with no parameters",
                    "type": "Function"
                },
                {
                    "name": "errorCallback",
                    "description": "called with a FileError",
                    "type": "Function"
                }
            ],
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/www/cordova.js",
            "line": 2099,
            "description": "Look up the parent DirectoryEntry of this entry.",
            "params": [
                {
                    "name": "successCallback",
                    "description": "called with the parent DirectoryEntry object",
                    "type": "Function"
                },
                {
                    "name": "errorCallback",
                    "description": "called with a FileError",
                    "type": "Function"
                }
            ],
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/www/cordova.js",
            "line": 2125,
            "description": "Constructor.\nname {DOMString} name of the file, without path information\nfullPath {DOMString} the full path of the file, including the name\ntype {DOMString} mime type\nlastModifiedDate {Date} last modified date\nsize {Number} size of the file in bytes",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/www/cordova.js",
            "line": 2146,
            "description": "Returns a \"slice\" of the file. Since Cordova Files don't contain the actual\ncontent, this really returns a File with adjusted start and end.\nSlices of slices are supported.\nstart {Number} The index at which to start the slice (inclusive).\nend {Number} The index at which to end the slice (exclusive).",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/www/cordova.js",
            "line": 2194,
            "description": "An interface representing a file on the file system.\n\n{boolean} isFile always true (readonly)\n{boolean} isDirectory always false (readonly)\n{DOMString} name of the file, excluding the path leading to it (readonly)\n{DOMString} fullPath the absolute full path to the file (readonly)\n{FileSystem} filesystem on which the file resides (readonly)",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/www/cordova.js",
            "line": 2209,
            "description": "Creates a new FileWriter associated with the file that this FileEntry represents.",
            "params": [
                {
                    "name": "successCallback",
                    "description": "is called with the new FileWriter",
                    "type": "Function"
                },
                {
                    "name": "errorCallback",
                    "description": "is called with a FileError",
                    "type": "Function"
                }
            ],
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/www/cordova.js",
            "line": 2227,
            "description": "Returns a File that represents the current state of the file that this FileEntry represents.",
            "params": [
                {
                    "name": "successCallback",
                    "description": "is called with the new File object",
                    "type": "Function"
                },
                {
                    "name": "errorCallback",
                    "description": "is called with a FileError",
                    "type": "Function"
                }
            ],
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/www/cordova.js",
            "line": 2252,
            "description": "FileError",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/www/cordova.js",
            "line": 2291,
            "description": "This class reads the mobile device file system.\n\nFor Android:\n     The root directory is the root of the file system.\n     To read from the SD card, the file name is \"sdcard/my_file.txt\"",
            "is_constructor": 1,
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/www/cordova.js",
            "line": 2362,
            "description": "Abort reading file.",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/www/cordova.js",
            "line": 2387,
            "description": "Read text file.",
            "params": [
                {
                    "name": "file",
                    "description": "File object containing file properties",
                    "type": "File"
                },
                {
                    "name": "encoding",
                    "description": "[Optional] (see http://www.iana.org/assignments/character-sets)"
                }
            ],
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/www/cordova.js",
            "line": 2464,
            "description": "Read file and return data as a base64 encoded data url.\nA data url is of the form:\n     data:[<mediatype>][;base64],<data>",
            "params": [
                {
                    "name": "file",
                    "description": "File object containing file properties",
                    "type": "File"
                }
            ],
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/www/cordova.js",
            "line": 2538,
            "description": "Read file and return data as a binary data.",
            "params": [
                {
                    "name": "file",
                    "description": "File object containing file properties",
                    "type": "File"
                }
            ],
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/www/cordova.js",
            "line": 2552,
            "description": "Read file and return data as a binary data.",
            "params": [
                {
                    "name": "file",
                    "description": "File object containing file properties",
                    "type": "File"
                }
            ],
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/www/cordova.js",
            "line": 2575,
            "description": "An interface representing a file system",
            "is_constructor": 1,
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/www/cordova.js",
            "line": 2611,
            "description": "FileTransfer uploads a file to a remote server.",
            "is_constructor": 1,
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/www/cordova.js",
            "line": 2620,
            "description": "Given an absolute file path, uploads a file on the device to a remote server\nusing a multipart HTTP request.",
            "params": [
                {
                    "name": "filePath",
                    "description": "Full path of the file on the device",
                    "type": "String"
                },
                {
                    "name": "server",
                    "description": "URL of the server to receive the file",
                    "type": "String"
                },
                {
                    "name": "successCallback",
                    "description": "(Function}  Callback to be invoked when upload has completed"
                },
                {
                    "name": "errorCallback",
                    "description": "Callback to be invoked upon error",
                    "type": "Function"
                },
                {
                    "name": "options",
                    "description": "Optional parameters such as file name and mimetype",
                    "type": "FileUploadOptions"
                },
                {
                    "name": "trustAllHosts",
                    "description": "Optional trust all hosts (e.g. for self-signed certs), defaults to false",
                    "type": "Boolean"
                }
            ],
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/www/cordova.js",
            "line": 2673,
            "description": "Downloads a file form a given URL and saves it to the specified directory.",
            "params": [
                {
                    "name": "source",
                    "description": "URL of the server to receive the file",
                    "type": "String"
                },
                {
                    "name": "target",
                    "description": "Full path of the file on the device",
                    "type": "String"
                },
                {
                    "name": "successCallback",
                    "description": "(Function}  Callback to be invoked when upload has completed"
                },
                {
                    "name": "errorCallback",
                    "description": "Callback to be invoked upon error",
                    "type": "Function"
                },
                {
                    "name": "trustAllHosts",
                    "description": "Optional trust all hosts (e.g. for self-signed certs), defaults to false",
                    "type": "Boolean"
                }
            ],
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/www/cordova.js",
            "line": 2713,
            "description": "Aborts the ongoing file transfer on this object",
            "params": [
                {
                    "name": "successCallback",
                    "description": "Callback to be invoked upon success",
                    "type": "Function"
                },
                {
                    "name": "errorCallback",
                    "description": "Callback to be invoked upon error",
                    "type": "Function"
                }
            ],
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/www/cordova.js",
            "line": 2729,
            "description": "FileTransferError",
            "is_constructor": 1,
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/www/cordova.js",
            "line": 2753,
            "description": "Options to customize the HTTP request used to upload files.",
            "is_constructor": 1,
            "params": [
                {
                    "name": "fileKey",
                    "description": "Name of file request parameter.",
                    "type": "String"
                },
                {
                    "name": "fileName",
                    "description": "Filename to be used by the server. Defaults to image.jpg.",
                    "type": "String"
                },
                {
                    "name": "mimeType",
                    "description": "Mimetype of the uploaded file. Defaults to image/jpeg.",
                    "type": "String"
                },
                {
                    "name": "params",
                    "description": "Object with key: value params to send to the server.",
                    "type": "Object"
                },
                {
                    "name": "headers",
                    "description": "Keys are header names, values are header values. Multiple\n                          headers of the same name are not supported.",
                    "type": "Object"
                }
            ],
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/www/cordova.js",
            "line": 2778,
            "description": "FileUploadResult",
            "is_constructor": 1,
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/www/cordova.js",
            "line": 2799,
            "description": "This class writes to the mobile device file system.\n\nFor Android:\n     The root directory is the root of the file system.\n     To write to the SD card, the file name is \"sdcard/my_file.txt\"",
            "is_constructor": 1,
            "params": [
                {
                    "name": "file",
                    "description": "File object containing file properties",
                    "type": "File"
                },
                {
                    "name": "append",
                    "description": "if true write to the end of the file, otherwise overwrite the file"
                }
            ],
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/www/cordova.js",
            "line": 2841,
            "description": "Abort writing file.",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/www/cordova.js",
            "line": 2866,
            "description": "Writes data to the file",
            "params": [
                {
                    "name": "text",
                    "description": "to be written"
                }
            ],
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/www/cordova.js",
            "line": 2940,
            "description": "Moves the file pointer to the location specified.\n\nIf the offset is a negative number the position of the file\npointer is rewound.  If the offset is greater than the file\nsize the position is set to the end of the file.",
            "params": [
                {
                    "name": "offset",
                    "description": "is the location to move the file pointer to."
                }
            ],
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/www/cordova.js",
            "line": 2975,
            "description": "Truncates the file to the size specified.",
            "params": [
                {
                    "name": "size",
                    "description": "to chop the file at."
                }
            ],
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/www/cordova.js",
            "line": 3054,
            "description": "Supplies arguments to methods that lookup or create files and directories.",
            "params": [
                {
                    "name": "create!~YUIDOC_LINE~!",
                    "description": "file or directory if it doesn't exist",
                    "type": "Boolean"
                },
                {
                    "name": "exclusive!~YUIDOC_LINE~!",
                    "description": "used with create; if true the command will fail if\n           target path exists",
                    "type": "Boolean"
                }
            ],
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/www/cordova.js",
            "line": 3076,
            "description": "Globalization error object",
            "is_constructor": 1,
            "params": [
                {
                    "name": "code",
                    "description": ""
                },
                {
                    "name": "message",
                    "description": ""
                }
            ],
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/www/cordova.js",
            "line": 3150,
            "description": "Represents a local file system.",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/www/cordova.js",
            "line": 3173,
            "description": "This class provides access to the device media, interfaces to both sound and video",
            "is_constructor": 1,
            "params": [
                {
                    "name": "src",
                    "description": "The file name or url to play"
                },
                {
                    "name": "successCallback",
                    "description": "The callback to be called when the file is done playing or recording.\n                                 successCallback()"
                },
                {
                    "name": "errorCallback",
                    "description": "The callback to be called if there is an error.\n                                 errorCallback(int errorCode) - OPTIONAL"
                },
                {
                    "name": "statusCallback",
                    "description": "The callback to be called when media status has changed.\n                                 statusCallback(int statusCode) - OPTIONAL"
                }
            ],
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/www/cordova.js",
            "line": 3217,
            "description": "Start or resume playing audio file.",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/www/cordova.js",
            "line": 3224,
            "description": "Stop playing audio file.",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/www/cordova.js",
            "line": 3234,
            "description": "Seek or jump to a new time in the track..",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/www/cordova.js",
            "line": 3244,
            "description": "Pause playing audio file.",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/www/cordova.js",
            "line": 3251,
            "description": "Get duration of an audio file.\nThe duration is only set for audio that is playing, paused or stopped.",
            "return": {
                "description": "duration or -1 if not known."
            },
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/www/cordova.js",
            "line": 3261,
            "description": "Get position of audio.",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/www/cordova.js",
            "line": 3272,
            "description": "Start recording audio file.",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/www/cordova.js",
            "line": 3279,
            "description": "Stop recording audio file.",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/www/cordova.js",
            "line": 3286,
            "description": "Release the resources.",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/www/cordova.js",
            "line": 3293,
            "description": "Adjust the volume.",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/www/cordova.js",
            "line": 3300,
            "description": "Audio has status update.\nPRIVATE",
            "params": [
                {
                    "name": "id",
                    "description": "The media object id (string)"
                },
                {
                    "name": "msgType",
                    "description": "The 'type' of update this is"
                },
                {
                    "name": "value",
                    "description": "Use of value is determined by the msgType"
                }
            ],
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/www/cordova.js",
            "line": 3347,
            "description": "This class contains information about any Media errors.",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/www/cordova.js",
            "line": 3391,
            "description": "Represents a single file.\n\nname {DOMString} name of the file, without path information\nfullPath {DOMString} the full path of the file, including the name\ntype {DOMString} mime type\nlastModifiedDate {Date} last modified date\nsize {Number} size of the file in bytes",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/www/cordova.js",
            "line": 3406,
            "description": "Request capture format data for a specific file and type",
            "params": [
                {
                    "name": "successCB",
                    "description": "",
                    "type": "Function"
                },
                {
                    "name": "errorCB",
                    "description": "",
                    "type": "Function"
                }
            ],
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/www/cordova.js",
            "line": 3427,
            "description": "MediaFileData encapsulates format information of a media file.",
            "params": [
                {
                    "name": "codecs",
                    "description": "",
                    "type": "DOMString"
                },
                {
                    "name": "bitrate",
                    "description": "",
                    "type": "Long"
                },
                {
                    "name": "height",
                    "description": "",
                    "type": "Long"
                },
                {
                    "name": "width",
                    "description": "",
                    "type": "Long"
                },
                {
                    "name": "duration",
                    "description": "",
                    "type": "Float"
                }
            ],
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/www/cordova.js",
            "line": 3451,
            "description": "Information about the state of the file or directory\n\n{Date} modificationTime (readonly)",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/www/cordova.js",
            "line": 3485,
            "description": "Position error object",
            "is_constructor": 1,
            "params": [
                {
                    "name": "code",
                    "description": ""
                },
                {
                    "name": "message",
                    "description": ""
                }
            ],
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/www/cordova.js",
            "line": 3560,
            "description": "This class provides access to device accelerometer data.",
            "is_constructor": 1,
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/www/cordova.js",
            "line": 3621,
            "description": "Asynchronously acquires the current acceleration.",
            "params": [
                {
                    "name": "successCallback",
                    "description": "The function to call when the acceleration data is available",
                    "type": "Function"
                },
                {
                    "name": "errorCallback",
                    "description": "The function to call when there is an error getting the acceleration data. (OPTIONAL)",
                    "type": "Function"
                },
                {
                    "name": "options",
                    "description": "The options for getting the accelerometer data such as timeout. (OPTIONAL)",
                    "type": "AccelerationOptions"
                }
            ],
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/www/cordova.js",
            "line": 3649,
            "description": "Asynchronously acquires the acceleration repeatedly at a given interval.",
            "params": [
                {
                    "name": "successCallback",
                    "description": "The function to call each time the acceleration data is available",
                    "type": "Function"
                },
                {
                    "name": "errorCallback",
                    "description": "The function to call when there is an error getting the acceleration data. (OPTIONAL)",
                    "type": "Function"
                },
                {
                    "name": "options",
                    "description": "The options for getting the accelerometer data such as timeout. (OPTIONAL)",
                    "type": "AccelerationOptions"
                }
            ],
            "return": {
                "description": "String                       The watch id that must be passed to #clearWatch to stop watching."
            },
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/www/cordova.js",
            "line": 3693,
            "description": "Clears the specified accelerometer watch.",
            "params": [
                {
                    "name": "id",
                    "description": "The id of the watch returned from #watchAcceleration.",
                    "type": "String"
                }
            ],
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/www/cordova.js",
            "line": 3726,
            "description": "This class contains information about the current battery status.",
            "is_constructor": 1,
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/www/cordova.js",
            "line": 3752,
            "description": "Event handlers for when callbacks get registered for the battery.\nKeep track of how many handlers we have so we can start and stop the native battery listener\nappropriately (and hopefully save on battery life!).",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/www/cordova.js",
            "line": 3766,
            "description": "Callback for battery status",
            "params": [
                {
                    "name": "info",
                    "description": "keys: level, isPlugged",
                    "type": "Object"
                }
            ],
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/www/cordova.js",
            "line": 3794,
            "description": "Error callback for battery start",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/www/cordova.js",
            "line": 3835,
            "description": "Launches a capture of different types.",
            "params": [
                {
                    "name": "(DOMString}",
                    "description": "type"
                },
                {
                    "name": "successCB",
                    "description": "",
                    "type": "Function"
                },
                {
                    "name": "errorCB",
                    "description": "",
                    "type": "Function"
                },
                {
                    "name": "options",
                    "description": "",
                    "type": "CaptureVideoOptions"
                }
            ],
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/www/cordova.js",
            "line": 3860,
            "description": "The Capture interface exposes an interface to the camera and microphone of the hosting device.",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/www/cordova.js",
            "line": 3869,
            "description": "Launch audio recorder application for recording audio clip(s).",
            "params": [
                {
                    "name": "successCB",
                    "description": "",
                    "type": "Function"
                },
                {
                    "name": "errorCB",
                    "description": "",
                    "type": "Function"
                },
                {
                    "name": "options",
                    "description": "",
                    "type": "CaptureAudioOptions"
                }
            ],
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/www/cordova.js",
            "line": 3880,
            "description": "Launch camera application for taking image(s).",
            "params": [
                {
                    "name": "successCB",
                    "description": "",
                    "type": "Function"
                },
                {
                    "name": "errorCB",
                    "description": "",
                    "type": "Function"
                },
                {
                    "name": "options",
                    "description": "",
                    "type": "CaptureImageOptions"
                }
            ],
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/www/cordova.js",
            "line": 3891,
            "description": "Launch device camera application for recording video(s).",
            "params": [
                {
                    "name": "successCB",
                    "description": "",
                    "type": "Function"
                },
                {
                    "name": "errorCB",
                    "description": "",
                    "type": "Function"
                },
                {
                    "name": "options",
                    "description": "",
                    "type": "CaptureVideoOptions"
                }
            ],
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/www/cordova.js",
            "line": 3933,
            "description": "Asynchronously acquires the current heading.",
            "params": [
                {
                    "name": "successCallback",
                    "description": "The function to call when the heading\ndata is available",
                    "type": "Function"
                },
                {
                    "name": "errorCallback",
                    "description": "The function to call when there is an error\ngetting the heading data.",
                    "type": "Function"
                },
                {
                    "name": "options",
                    "description": "The options for getting the heading data (not used).",
                    "type": "CompassOptions"
                }
            ],
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/www/cordova.js",
            "line": 3957,
            "description": "Asynchronously acquires the heading repeatedly at a given interval.",
            "params": [
                {
                    "name": "successCallback",
                    "description": "The function to call each time the heading\ndata is available",
                    "type": "Function"
                },
                {
                    "name": "errorCallback",
                    "description": "The function to call when there is an error\ngetting the heading data.",
                    "type": "Function"
                },
                {
                    "name": "options",
                    "description": "The options for getting the heading data\nsuch as timeout and the frequency of the watch. For iOS, filter parameter\nspecifies to watch via a distance filter rather than time.",
                    "type": "HeadingOptions"
                }
            ],
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/www/cordova.js",
            "line": 3988,
            "description": "Clears the specified heading watch.",
            "params": [
                {
                    "name": "watchId",
                    "description": "The ID of the watch returned from #watchHeading.",
                    "type": "String"
                }
            ],
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/www/cordova.js",
            "line": 4203,
            "description": "Represents a group of Contacts.",
            "is_constructor": 1,
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/www/cordova.js",
            "line": 4208,
            "description": "Returns an array of Contacts matching the search criteria.",
            "params": [
                {
                    "name": "fields",
                    "description": "that should be searched"
                },
                {
                    "name": "successCB",
                    "description": "success callback"
                },
                {
                    "name": "errorCB",
                    "description": "error callback"
                },
                {
                    "name": "options",
                    "description": "that can be applied to contact searching",
                    "type": "ContactFindOptions"
                }
            ],
            "return": {
                "description": "array of Contacts matching search criteria"
            },
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/www/cordova.js",
            "line": 4232,
            "description": "This function creates a new contact, but it does not persist the contact\nto device storage. To persist the contact to device storage, invoke\ncontact.save().",
            "params": [
                {
                    "name": "properties",
                    "description": "an object whose properties will be examined to create a new Contact"
                }
            ],
            "return": {
                "description": "new Contact object"
            },
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/www/cordova.js",
            "line": 4283,
            "description": "This represents the mobile device, and provides properties for inspecting the model, version, UUID of the\nphone, etc.",
            "is_constructor": 1,
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/www/cordova.js",
            "line": 4316,
            "description": "Get device info",
            "params": [
                {
                    "name": "successCallback",
                    "description": "The function to call when the heading data is available",
                    "type": "Function"
                },
                {
                    "name": "errorCallback",
                    "description": "The function to call when there is an error getting the heading data. (OPTIONAL)",
                    "type": "Function"
                }
            ],
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/www/cordova.js",
            "line": 4346,
            "description": "Sends the given message through exec() to the Echo plugin, which sends it back to the successCallback.",
            "params": [
                {
                    "name": "successCallback",
                    "description": "invoked with a FileSystem object"
                },
                {
                    "name": "errorCallback",
                    "description": "invoked if error occurs retrieving file system"
                },
                {
                    "name": "message",
                    "description": "The string to be echoed."
                },
                {
                    "name": "forceAsync",
                    "description": "Whether to force an async return value (for testing native->js bridge)."
                }
            ],
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/www/cordova.js",
            "line": 4465,
            "description": "Asynchronously acquires the current position.",
            "params": [
                {
                    "name": "successCallback",
                    "description": "The function to call when the position data is available",
                    "type": "Function"
                },
                {
                    "name": "errorCallback",
                    "description": "The function to call when there is an error getting the heading position. (OPTIONAL)",
                    "type": "Function"
                },
                {
                    "name": "options",
                    "description": "The options for getting the position data. (OPTIONAL)",
                    "type": "PositionOptions"
                }
            ],
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/www/cordova.js",
            "line": 4539,
            "description": "Asynchronously watches the geolocation for changes to geolocation.  When a change occurs,\nthe successCallback is called with the new location.",
            "params": [
                {
                    "name": "successCallback",
                    "description": "The function to call each time the location data is available",
                    "type": "Function"
                },
                {
                    "name": "errorCallback",
                    "description": "The function to call when there is an error getting the location data. (OPTIONAL)",
                    "type": "Function"
                },
                {
                    "name": "options",
                    "description": "The options for getting the location data such as frequency. (OPTIONAL)",
                    "type": "PositionOptions"
                }
            ],
            "return": {
                "description": "String                       The watch id that must be passed to #clearWatch to stop watching."
            },
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/www/cordova.js",
            "line": 4590,
            "description": "Clears the specified heading watch.",
            "params": [
                {
                    "name": "id",
                    "description": "The ID of the watch returned from #watchPosition",
                    "type": "String"
                }
            ],
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/www/cordova.js",
            "line": 4630,
            "description": "Returns the string identifier for the client's current language.\nIt returns the language identifier string to the successCB callback with a\nproperties object as a parameter. If there is an error getting the language,\nthen the errorCB callback is invoked.",
            "params": [
                {
                    "name": "successCB",
                    "description": "",
                    "type": "Function"
                },
                {
                    "name": "errorCB",
                    "description": "",
                    "type": "Function"
                }
            ],
            "return": {
                "description": "Object.value : The language identifier",
                "type": "String"
            },
            "error": "GlobalizationError.UNKNOWN_ERROR\n\nExample\n   globalization.getPreferredLanguage(function (language) {alert('language:' + language.value + '\\n');},\n                               function () {});",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/www/cordova.js",
            "line": 4652,
            "description": "Returns the string identifier for the client's current locale setting.\nIt returns the locale identifier string to the successCB callback with a\nproperties object as a parameter. If there is an error getting the locale,\nthen the errorCB callback is invoked.",
            "params": [
                {
                    "name": "successCB",
                    "description": "",
                    "type": "Function"
                },
                {
                    "name": "errorCB",
                    "description": "",
                    "type": "Function"
                }
            ],
            "return": {
                "description": "Object.value : The locale identifier",
                "type": "String"
            },
            "error": "GlobalizationError.UNKNOWN_ERROR\n\nExample\n   globalization.getLocaleName(function (locale) {alert('locale:' + locale.value + '\\n');},\n                               function () {});",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/www/cordova.js",
            "line": 4675,
            "description": "Returns a date formatted as a string according to the client's user preferences and\ncalendar using the time zone of the client. It returns the formatted date string to the\nsuccessCB callback with a properties object as a parameter. If there is an error\nformatting the date, then the errorCB callback is invoked.\n\nThe defaults are: formatLenght=\"short\" and selector=\"date and time\"",
            "params": [
                {
                    "name": "date",
                    "description": "",
                    "type": "Date"
                },
                {
                    "name": "successCB",
                    "description": "",
                    "type": "Function"
                },
                {
                    "name": "errorCB",
                    "description": "",
                    "type": "Function"
                },
                {
                    "name": "options",
                    "description": "{optional}\n           formatLength {String}: 'short', 'medium', 'long', or 'full'\n           selector {String}: 'date', 'time', or 'date and time'",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "Object.value : The localized date string",
                "type": "String"
            },
            "error": "GlobalizationError.FORMATTING_ERROR\n\nExample\n   globalization.dateToString(new Date(),\n               function (date) {alert('date:' + date.value + '\\n');},\n               function (errorCode) {alert(errorCode);},\n               {formatLength:'short'});",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/www/cordova.js",
            "line": 4707,
            "description": "Parses a date formatted as a string according to the client's user\npreferences and calendar using the time zone of the client and returns\nthe corresponding date object. It returns the date to the successCB\ncallback with a properties object as a parameter. If there is an error\nparsing the date string, then the errorCB callback is invoked.\n\nThe defaults are: formatLength=\"short\" and selector=\"date and time\"",
            "params": [
                {
                    "name": "dateString",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "successCB",
                    "description": "",
                    "type": "Function"
                },
                {
                    "name": "errorCB",
                    "description": "",
                    "type": "Function"
                },
                {
                    "name": "options",
                    "description": "{optional}\n           formatLength {String}: 'short', 'medium', 'long', or 'full'\n           selector {String}: 'date', 'time', or 'date and time'",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "Object.year : The four digit year\n           Object.month {Number}: The month from (0 - 11)\n           Object.day {Number}: The day from (1 - 31)\n           Object.hour {Number}: The hour from (0 - 23)\n           Object.minute {Number}: The minute from (0 - 59)\n           Object.second {Number}: The second from (0 - 59)\n           Object.millisecond {Number}: The milliseconds (from 0 - 999),\n                                       not available on all platforms",
                "type": "Number"
            },
            "error": "GlobalizationError.PARSING_ERROR\n\nExample\n   globalization.stringToDate('4/11/2011',\n               function (date) { alert('Month:' + date.month + '\\n' +\n                   'Day:' + date.day + '\\n' +\n                   'Year:' + date.year + '\\n');},\n               function (errorCode) {alert(errorCode);},\n               {selector:'date'});",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/www/cordova.js",
            "line": 4748,
            "description": "Returns a pattern string for formatting and parsing dates according to the client's\nuser preferences. It returns the pattern to the successCB callback with a\nproperties object as a parameter. If there is an error obtaining the pattern,\nthen the errorCB callback is invoked.\n\nThe defaults are: formatLength=\"short\" and selector=\"date and time\"",
            "params": [
                {
                    "name": "successCB",
                    "description": "",
                    "type": "Function"
                },
                {
                    "name": "errorCB",
                    "description": "",
                    "type": "Function"
                },
                {
                    "name": "options",
                    "description": "{optional}\n           formatLength {String}: 'short', 'medium', 'long', or 'full'\n           selector {String}: 'date', 'time', or 'date and time'",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "Object.pattern : The date and time pattern for formatting and parsing dates.\n                                   The patterns follow Unicode Technical Standard #35\n                                   http://unicode.org/reports/tr35/tr35-4.html\n           Object.timezone {String}: The abbreviated name of the time zone on the client\n           Object.utc_offset {Number}: The current difference in seconds between the client's\n                                       time zone and coordinated universal time.\n           Object.dst_offset {Number}: The current daylight saving time offset in seconds\n                                       between the client's non-daylight saving's time zone\n                                       and the client's daylight saving's time zone.",
                "type": "String"
            },
            "error": "GlobalizationError.PATTERN_ERROR\n\nExample\n   globalization.getDatePattern(\n               function (date) {alert('pattern:' + date.pattern + '\\n');},\n               function () {},\n               {formatLength:'short'});",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/www/cordova.js",
            "line": 4786,
            "description": "Returns an array of either the names of the months or days of the week\naccording to the client's user preferences and calendar. It returns the array of names to the\nsuccessCB callback with a properties object as a parameter. If there is an error obtaining the\nnames, then the errorCB callback is invoked.\n\nThe defaults are: type=\"wide\" and item=\"months\"",
            "params": [
                {
                    "name": "successCB",
                    "description": "",
                    "type": "Function"
                },
                {
                    "name": "errorCB",
                    "description": "",
                    "type": "Function"
                },
                {
                    "name": "options",
                    "description": "{optional}\n           type {String}: 'narrow' or 'wide'\n           item {String}: 'months', or 'days'",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "Object.value }: The array of names starting from either\n                                       the first month in the year or the\n                                       first day of the week.",
                "type": "ArrayString"
            },
            "error": "GlobalizationError.UNKNOWN_ERROR\n\nExample\n   globalization.getDateNames(function (names) {\n       for(var i = 0; i < names.value.length; i++) {\n           alert('Month:' + names.value[i] + '\\n');}},\n       function () {});",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/www/cordova.js",
            "line": 4816,
            "description": "Returns whether daylight savings time is in effect for a given date using the client's\ntime zone and calendar. It returns whether or not daylight savings time is in effect\nto the successCB callback with a properties object as a parameter. If there is an error\nreading the date, then the errorCB callback is invoked.",
            "params": [
                {
                    "name": "date",
                    "description": "",
                    "type": "Date"
                },
                {
                    "name": "successCB",
                    "description": "",
                    "type": "Function"
                },
                {
                    "name": "errorCB",
                    "description": "",
                    "type": "Function"
                }
            ],
            "return": {
                "description": "Object.dst : The value \"true\" indicates that daylight savings time is\n                               in effect for the given date and \"false\" indicate that it is not.",
                "type": "Boolean"
            },
            "error": "GlobalizationError.UNKNOWN_ERROR\n\nExample\n   globalization.isDayLightSavingsTime(new Date(),\n               function (date) {alert('dst:' + date.dst + '\\n');}\n               function () {});",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/www/cordova.js",
            "line": 4842,
            "description": "Returns the first day of the week according to the client's user preferences and calendar.\nThe days of the week are numbered starting from 1 where 1 is considered to be Sunday.\nIt returns the day to the successCB callback with a properties object as a parameter.\nIf there is an error obtaining the pattern, then the errorCB callback is invoked.",
            "params": [
                {
                    "name": "successCB",
                    "description": "",
                    "type": "Function"
                },
                {
                    "name": "errorCB",
                    "description": "",
                    "type": "Function"
                }
            ],
            "return": {
                "description": "Object.value : The number of the first day of the week.",
                "type": "Number"
            },
            "error": "GlobalizationError.UNKNOWN_ERROR\n\nExample\n   globalization.getFirstDayOfWeek(function (day)\n               { alert('Day:' + day.value + '\\n');},\n               function () {});",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/www/cordova.js",
            "line": 4866,
            "description": "Returns a number formatted as a string according to the client's user preferences.\nIt returns the formatted number string to the successCB callback with a properties object as a\nparameter. If there is an error formatting the number, then the errorCB callback is invoked.\n\nThe defaults are: type=\"decimal\"",
            "params": [
                {
                    "name": "number",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "successCB",
                    "description": "",
                    "type": "Function"
                },
                {
                    "name": "errorCB",
                    "description": "",
                    "type": "Function"
                },
                {
                    "name": "options",
                    "description": "{optional}\n           type {String}: 'decimal', \"percent\", or 'currency'",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "Object.value : The formatted number string.",
                "type": "String"
            },
            "error": "GlobalizationError.FORMATTING_ERROR\n\nExample\n   globalization.numberToString(3.25,\n               function (number) {alert('number:' + number.value + '\\n');},\n               function () {},\n               {type:'decimal'});",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/www/cordova.js",
            "line": 4894,
            "description": "Parses a number formatted as a string according to the client's user preferences and\nreturns the corresponding number. It returns the number to the successCB callback with a\nproperties object as a parameter. If there is an error parsing the number string, then\nthe errorCB callback is invoked.\n\nThe defaults are: type=\"decimal\"",
            "params": [
                {
                    "name": "numberString",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "successCB",
                    "description": "",
                    "type": "Function"
                },
                {
                    "name": "errorCB",
                    "description": "",
                    "type": "Function"
                },
                {
                    "name": "options",
                    "description": "{optional}\n           type {String}: 'decimal', \"percent\", or 'currency'",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "Object.value : The parsed number.",
                "type": "Number"
            },
            "error": "GlobalizationError.PARSING_ERROR\n\nExample\n   globalization.stringToNumber('1234.56',\n               function (number) {alert('Number:' + number.value + '\\n');},\n               function () { alert('Error parsing number');});",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/www/cordova.js",
            "line": 4922,
            "description": "Returns a pattern string for formatting and parsing numbers according to the client's user\npreferences. It returns the pattern to the successCB callback with a properties object as a\nparameter. If there is an error obtaining the pattern, then the errorCB callback is invoked.\n\nThe defaults are: type=\"decimal\"",
            "params": [
                {
                    "name": "successCB",
                    "description": "",
                    "type": "Function"
                },
                {
                    "name": "errorCB",
                    "description": "",
                    "type": "Function"
                },
                {
                    "name": "options",
                    "description": "{optional}\n           type {String}: 'decimal', \"percent\", or 'currency'",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "Object.pattern : The number pattern for formatting and parsing numbers.\n                                   The patterns follow Unicode Technical Standard #35.\n                                   http://unicode.org/reports/tr35/tr35-4.html\n           Object.symbol {String}: The symbol to be used when formatting and parsing\n                                   e.g., percent or currency symbol.\n           Object.fraction {Number}: The number of fractional digits to use when parsing and\n                                   formatting numbers.\n           Object.rounding {Number}: The rounding increment to use when parsing and formatting.\n           Object.positive {String}: The symbol to use for positive numbers when parsing and formatting.\n           Object.negative: {String}: The symbol to use for negative numbers when parsing and formatting.\n           Object.decimal: {String}: The decimal symbol to use for parsing and formatting.\n           Object.grouping: {String}: The grouping symbol to use for parsing and formatting.",
                "type": "String"
            },
            "error": "GlobalizationError.PATTERN_ERROR\n\nExample\n   globalization.getNumberPattern(\n               function (pattern) {alert('Pattern:' + pattern.pattern + '\\n');},\n               function () {});",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/www/cordova.js",
            "line": 4959,
            "description": "Returns a pattern string for formatting and parsing currency values according to the client's\nuser preferences and ISO 4217 currency code. It returns the pattern to the successCB callback with a\nproperties object as a parameter. If there is an error obtaining the pattern, then the errorCB\ncallback is invoked.",
            "params": [
                {
                    "name": "currencyCode",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "successCB",
                    "description": "",
                    "type": "Function"
                },
                {
                    "name": "errorCB",
                    "description": "",
                    "type": "Function"
                }
            ],
            "return": {
                "description": "Object.pattern : The currency pattern for formatting and parsing currency values.\n                                   The patterns follow Unicode Technical Standard #35\n                                   http://unicode.org/reports/tr35/tr35-4.html\n           Object.code {String}: The ISO 4217 currency code for the pattern.\n           Object.fraction {Number}: The number of fractional digits to use when parsing and\n                                   formatting currency.\n           Object.rounding {Number}: The rounding increment to use when parsing and formatting.\n           Object.decimal: {String}: The decimal symbol to use for parsing and formatting.\n           Object.grouping: {String}: The grouping symbol to use for parsing and formatting.",
                "type": "String"
            },
            "error": "GlobalizationError.FORMATTING_ERROR\n\nExample\n   globalization.getCurrencyPattern('EUR',\n               function (currency) {alert('Pattern:' + currency.pattern + '\\n');}\n               function () {});",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/www/cordova.js",
            "line": 5024,
            "description": "Provides iOS Contact.display API.",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/www/cordova.js",
            "line": 5076,
            "description": "create a nice string for an object",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/www/cordova.js",
            "line": 5096,
            "description": "Wrapper one of the console logging methods, so that\nthe Cordova logging native is called, then the original.",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/www/cordova.js",
            "line": 5153,
            "description": "Provides iOS enhanced contacts API.",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/www/cordova.js",
            "line": 5272,
            "description": "Logging levels",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/www/cordova.js",
            "line": 5298,
            "description": "Getter/Setter for the logging level\n\nReturns the current logging level.\n\nWhen a value is passed, sets the logging level to that value.\nThe values should be one of the following constants:\n   logger.LOG\n   logger.ERROR\n   logger.WARN\n   logger.INFO\n   logger.DEBUG\n\nThe value used determines which messages get printed.  The logging\nvalues above are in order, and only messages logged at the logging\nlevel or above will actually be displayed to the user.  E.g., the\ndefault level is WARN, so only messages logged with LOG, ERROR, or\nWARN will be displayed; INFO and DEBUG messages will be ignored.",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/www/cordova.js",
            "line": 5328,
            "description": "Getter/Setter for the useConsole functionality\n\nWhen useConsole is true, the logger will log via the\nbrowser 'console' object.  Otherwise, it will use the\nnative Logger plugin.",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/www/cordova.js",
            "line": 5357,
            "description": "Logs a message at the LOG level.\n\nParameters passed after message are used applied to\nthe message with utils.format()",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/www/cordova.js",
            "line": 5365,
            "description": "Logs a message at the ERROR level.\n\nParameters passed after message are used applied to\nthe message with utils.format()",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/www/cordova.js",
            "line": 5373,
            "description": "Logs a message at the WARN level.\n\nParameters passed after message are used applied to\nthe message with utils.format()",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/www/cordova.js",
            "line": 5381,
            "description": "Logs a message at the INFO level.\n\nParameters passed after message are used applied to\nthe message with utils.format()",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/www/cordova.js",
            "line": 5389,
            "description": "Logs a message at the DEBUG level.\n\nParameters passed after message are used applied to\nthe message with utils.format()",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/www/cordova.js",
            "line": 5403,
            "description": "Logs a message at the specified level.\n\nParameters passed after message are used applied to\nthe message with utils.format()",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/www/cordova.js",
            "line": 5508,
            "description": "Get connection info",
            "params": [
                {
                    "name": "successCallback",
                    "description": "The function to call when the Connection data is available",
                    "type": "Function"
                },
                {
                    "name": "errorCallback",
                    "description": "The function to call when there is an error getting the Connection data. (OPTIONAL)",
                    "type": "Function"
                }
            ],
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/www/cordova.js",
            "line": 5576,
            "description": "Provides access to notifications on the device.",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/www/cordova.js",
            "line": 5582,
            "description": "Open a native alert dialog, with a customizable title and button text.",
            "params": [
                {
                    "name": "message",
                    "description": "Message to print in the body of the alert",
                    "type": "String"
                },
                {
                    "name": "completeCallback",
                    "description": "The callback that is called when user clicks on a button.",
                    "type": "Function"
                },
                {
                    "name": "title",
                    "description": "Title of the alert dialog (default: Alert)",
                    "type": "String"
                },
                {
                    "name": "buttonLabel",
                    "description": "Label of the close button (default: OK)",
                    "type": "String"
                }
            ],
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/www/cordova.js",
            "line": 5596,
            "description": "Open a native confirm dialog, with a customizable title and button text.\nThe result that the user selects is returned to the result callback.",
            "params": [
                {
                    "name": "message",
                    "description": "Message to print in the body of the alert",
                    "type": "String"
                },
                {
                    "name": "resultCallback",
                    "description": "The callback that is called when user clicks on a button.",
                    "type": "Function"
                },
                {
                    "name": "title",
                    "description": "Title of the alert dialog (default: Confirm)",
                    "type": "String"
                },
                {
                    "name": "buttonLabels",
                    "description": "Comma separated list of the labels of the buttons (default: 'OK,Cancel')",
                    "type": "String"
                }
            ],
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/www/cordova.js",
            "line": 5611,
            "description": "Causes the device to vibrate.",
            "params": [
                {
                    "name": "mills",
                    "description": "The number of milliseconds to vibrate for.",
                    "type": "Integer"
                }
            ],
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/www/cordova.js",
            "line": 5620,
            "description": "Causes the device to beep.\nOn Android, the default notification ringtone is played \"count\" times.",
            "params": [
                {
                    "name": "count",
                    "description": "The number of beeps.",
                    "type": "Integer"
                }
            ],
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/www/cordova.js",
            "line": 5652,
            "description": "Request a file system in which to store application data.",
            "params": [
                {
                    "name": "type",
                    "description": "local file system type"
                },
                {
                    "name": "size",
                    "description": "indicates how much storage space, in bytes, the application expects to need"
                },
                {
                    "name": "successCallback",
                    "description": "invoked with a FileSystem object"
                },
                {
                    "name": "errorCallback",
                    "description": "invoked if error occurs retrieving file system"
                }
            ],
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/www/cordova.js",
            "line": 5699,
            "description": "Look up file system Entry referred to by local URI.",
            "params": [
                {
                    "name": "uri",
                    "description": "URI referring to a local file or directory",
                    "type": "DOMString"
                },
                {
                    "name": "successCallback",
                    "description": "invoked with Entry object corresponding to URI"
                },
                {
                    "name": "errorCallback",
                    "description": "invoked if error occurs retrieving file system entry"
                }
            ],
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/www/cordova.js",
            "line": 5785,
            "description": "Defines a property getter / setter for obj[key].",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/www/cordova.js",
            "line": 5806,
            "description": "Defines a property getter for obj[key].",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/www/cordova.js",
            "line": 5824,
            "description": "Returns whether the item was found in the array.",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/www/cordova.js",
            "line": 5839,
            "description": "Returns an indication of whether the argument is an array or not",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/www/cordova.js",
            "line": 5846,
            "description": "Returns an indication of whether the argument is a Date or not",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/www/cordova.js",
            "line": 5853,
            "description": "Does a deep clone of the object.",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/www/cordova.js",
            "line": 5880,
            "description": "Returns a wrapped version of the function",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/www/cordova.js",
            "line": 5895,
            "description": "Create a UUID",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/www/cordova.js",
            "line": 5906,
            "description": "Extends a child object from a parent object using classical inheritance\npattern.",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/www/cordova.js",
            "line": 5922,
            "description": "Alerts a message in any available way: alert or console.log.",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/www/cordova.js",
            "line": 5933,
            "description": "Formats a string and arguments following it ala sprintf()\n\nsee utils.vformat() for more information",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/www/cordova.js",
            "line": 5943,
            "description": "Formats a string and arguments following it ala vsprintf()\n\nformat chars:\n  %j - format arg as JSON\n  %o - format arg as JSON\n  %c - format arg as ''\n  %% - replace with '%'\nany other char following % will format it's\narg via toString().\n\nfor rationale, see FireBug's Console API:\n   http://getfirebug.com/wiki/index.php/Console_API",
            "class": "PKObject"
        },
        {
            "file": "demo/platforms/ios/www/cordova.js",
            "line": 6043,
            "description": "Create all cordova objects once page has fully loaded and native side is ready.",
            "class": "PKObject"
        },
        {
            "file": "demo/www/framework/PKObject.js",
            "line": 1,
            "description": "BASE PKOBJECT\n\n*****************************************************************************\nThe Object class provides the top object that all other objects inherit\n from. This provides object inheritance via a subclass/superclass mechanism\n without having to worry about prototype or constructor inheritance.\nPKObjects provide simple subclassing and a limited form of KVO in the form\n of tags and tag listeners.",
            "class": "PKObject"
        },
        {
            "file": "demo/www/framework/PKObject.js",
            "line": 38,
            "description": "We need a way to provide inheritance. Most methods only provide\n inheritance across the constructor chain, not across any possible\n method. But for our purposes, we need to be able to provide for\n overriding any method (such as drawing, touch responses, etc.),\n and so we implement inheritance in a different way.\nFirst, the _classHierarchy, a private property, provides the\n inheritance tree. All objects inherit from \"Object\".",
            "class": "PKObject"
        },
        {
            "file": "demo/www/framework/PKObject.js",
            "line": 52,
            "description": "Objects are subclassed using this method. The newClass is the\n unique class name of the object (and should match the class'\n actual name.",
            "class": "PKObject"
        },
        {
            "file": "demo/www/framework/PKObject.js",
            "line": 64,
            "description": "getClass returns the current class of the object. The\n \"class\" property can be used as well. Note that there\n is no \"setter\" for this property; an object's class\n can *not* be changed.",
            "class": "PKObject"
        },
        {
            "file": "demo/www/framework/PKObject.js",
            "line": 78,
            "description": "Returns the super class for the given class. If the\n class is not supplied, the class is assumed to be the\n object's own class.\nThe property \"superClass\" uses this to return the\n object's direct superclass, but getSuperClassOfClass\n can be used to determine superclasses higher up\n the hierarchy.",
            "class": "PKObject"
        },
        {
            "file": "demo/www/framework/PKObject.js",
            "line": 105,
            "description": "_super is an object that stores overridden functions by class and method\n name. This is how we get the ability to arbitrarily override any method\n already present in the superclass.",
            "class": "PKObject"
        },
        {
            "file": "demo/www/framework/PKObject.js",
            "line": 114,
            "description": "Must be called prior to defining the overridden function as this moves\n the original function into the _super object. The functionName must\n match the name of the method exactly, since there may be a long tree\n of code that depends on it.",
            "class": "PKObject"
        },
        {
            "file": "demo/www/framework/PKObject.js",
            "line": 132,
            "description": "Calls a super function with up to 10 arguments.",
            "class": "PKObject"
        },
        {
            "file": "demo/www/framework/PKObject.js",
            "line": 151,
            "description": "initializes the object",
            "class": "PKObject"
        },
        {
            "file": "demo/www/framework/PKObject.js",
            "line": 161,
            "description": "Objects have some properties that we want all objects to have...",
            "class": "PKObject"
        },
        {
            "file": "demo/www/framework/PKObject.js",
            "line": 210,
            "description": "All objects subject notifications for events",
            "class": "PKObject"
        },
        {
            "file": "demo/www/framework/PKObject.js",
            "line": 256,
            "description": "//http://stackoverflow.com/a/11462081\nfunction clone(obj){\n    var clonedObjectsArray = [];\n    var originalObjectsArray = []; //used to remove the unique ids when finished\n    var next_objid = 0;\n\n    function objectId(obj) {\n        if (obj == null) return null;\n        if (obj.__obj_id == undefined){\n            obj.__obj_id = next_objid++;\n            originalObjectsArray[obj.__obj_id] = obj;\n        }\n        return obj.__obj_id;\n    }\n\n    function cloneRecursive(obj) {\n        if (null == obj || typeof obj == \"string\" || typeof obj == \"number\" || typeof obj == \"boolean\") return obj;\n\n        // Handle Date\n        if (obj instanceof Date) {\n            var copy = new Date();\n            copy.setTime(obj.getTime());\n            return copy;\n        }\n\n        // Handle Array\n        if (obj instanceof Array) {\n            var copy = [];\n            for (var i = 0; i < obj.length; ++i) {\n                copy[i] = cloneRecursive(obj[i]);\n            }\n            return copy;\n        }\n\n        // Handle Object\n        if (obj instanceof Object) {\n            if (clonedObjectsArray[objectId(obj)] != undefined)\n                return clonedObjectsArray[objectId(obj)];\n\n            var copy;\n            if (obj instanceof Function)//Handle Function\n                copy = function(){return obj.apply(this, arguments);};\n            else\n                copy = {};\n\n            clonedObjectsArray[objectId(obj)] = copy;\n\n            for (var attr in obj)\n                if (attr != \"__obj_id\" && obj.hasOwnProperty(attr))\n                    copy[attr] = cloneRecursive(obj[attr]);                 \n\n            return copy;\n        }       \n\n\n        throw new Error(\"Unable to copy obj! Its type isn't supported.\");\n    }\n    var cloneObj = cloneRecursive(obj);\n\n\n\n    //remove the unique ids\n    for (var i = 0; i < originalObjectsArray.length; i++)\n    {\n        delete originalObjectsArray[i].__obj_id;\n    };\n\n    return cloneObj;\n}",
            "class": "PKObject"
        },
        {
            "file": "demo/www/framework/device.js",
            "line": 1,
            "description": "DEVICE\n Author: Kerri Shotts\nThis library includes functions that reflect the device and its current\n state",
            "class": "PKObject"
        },
        {
            "file": "demo/www/framework/device.js",
            "line": 42,
            "description": "Returns the device platform, lowercased. If PKDEVICE.platformOverride is\n other than \"false\", it is returned instead.",
            "class": "PKObject"
        },
        {
            "file": "demo/www/framework/device.js",
            "line": 97,
            "description": "Returns the device's form factor. Possible values are \"tablet\" and\n \"phone\". If PKDEVICE.formFactorOverride is not false, it is returned\n instead.",
            "class": "PKObject"
        },
        {
            "file": "demo/www/framework/device.js",
            "line": 128,
            "description": "Determines if the device is in Portrait orientation.",
            "class": "PKObject"
        },
        {
            "file": "demo/www/framework/device.js",
            "line": 137,
            "description": "Determines if the device is in Landscape orientation.",
            "class": "PKObject"
        },
        {
            "file": "demo/www/framework/device.js",
            "line": 150,
            "description": "Determines if the device is a hiDPI device (aka retina)",
            "class": "PKObject"
        },
        {
            "file": "demo/www/framework/fileutil.js",
            "line": 1,
            "description": "FILEUTIL\n Author: Kerri Shotts\nThis library includes routines to deal with the FILE API, (which is... a bit\n painful.) The purpose of the library is to reduce the amount of work necessary\n to go through obtaining a file system, working with directories and files,\n etc. That isn't to say that we can eliminate callbacks or even callback\n chaining -- but it is significantly easier without all the intervening cruft,\n which is essentially (for all intents and purposes) boilerplate.\nIMPORTANT NOTE:\nThis library provides various conveniences that make referencing persistent\n and temporary storage a bit easier as well. For example, you can use a\n path like the following:\n    doc://photo.jpg   -->   /some/gobbledygook/yourApp/Documents/photo.jpg\n     tmp://photo.jpg   -->   /some/gobbledygook/yourApp/tmp/photo.jpg\nSeveral APIs (such as camera capture) may also refer to paths with\n \"file://localhost\" attached. The routines will gracefully remove this so that\n the reference is a true file.\nCONVENIENCE:\nFor those who are more comfortable with *nix/BSD commands, nearly each method\n has a version that correlates to a roughly *nix name. The parameters are the\n same, however.\nMETHODS\n   copyFileTo ( source, target, success, failure )         |   cp ()\n   moveFileTo ( source, target, success, failure )         |   mv ()\n   removeFile ( theFile, success, failure )                |   rm ()\n   renameFile ( source, newName, success, failure )        |   -\n   createFileWriter ( theFile, success, failure )          |   fcreate ()\n   writeFileData ( writer, theData, success, failure )     |   fwrite ()\nPLANNED METHODS\n  getListing ( path, filters, success, failure )          |    ls ()\n   createDirectory ( path, newDirectory, success, failure )|    mkdir()\n   removeDirectory ( path, theDirectory, success, failure )|    rmdir()\n   createFileReader ( theFile, success, failure )          |    fopen()\n   readFileData ( reader, success, failure )               |    fread()",
            "class": "PKObject"
        },
        {
            "file": "demo/www/framework/fileutil.js",
            "line": 101,
            "description": "Determines the persistent and temporary file systems prior\n to file operations. While it's unlikely that these will\n change during application execution, it certainly doesn't\n hurt to re-read them whenever possible (just in case!).\nWhen both are read, the success method is called. If we\n can't obtain one or the other, the failure method is called.",
            "class": "PKObject"
        },
        {
            "file": "demo/www/framework/fileutil.js",
            "line": 140,
            "description": "Handles substition strings within a file path.\n doc:/ translates to the persistent storage. We don't use \"//\" here\n        since the persistentFS doesn't have a trailing \"/\", so we leave\n        that in the original.\n  tmp:/ translates to the temporary storage.\n  file://localhost translates to nothing.",
            "class": "PKObject"
        },
        {
            "file": "demo/www/framework/fileutil.js",
            "line": 159,
            "description": "Copies the file identified by @source to the file identified by @target.\n If the copy is successful, success() is called. If not, failure() is\n called.\nThe target will generally be of the form \"doc://filename\", but it can\n be any path and file name that the application has access to.\nNOTE: Copying will fail if the target exists.",
            "class": "PKObject"
        },
        {
            "file": "demo/www/framework/fileutil.js",
            "line": 193,
            "description": "*nix convenience method.",
            "class": "PKObject"
        },
        {
            "file": "demo/www/framework/fileutil.js",
            "line": 203,
            "description": "Moves the file identified by @source to the file identified by @target.\n If the move is successful, success() is called. If not, failure() is\n called.\nThe target will generally be of the form \"doc://filename\", but it can\n be any path and file name that the application has access to.\nNOTE: The move will overwrite the target if it exists.",
            "class": "PKObject"
        },
        {
            "file": "demo/www/framework/fileutil.js",
            "line": 237,
            "description": "Convenience method that allows renaming a file in the same\n directory as the source. The source's path will prepended\n to the new name.\nNOTE: The move will overwrite the target if it exists.",
            "class": "PKObject"
        },
        {
            "file": "demo/www/framework/fileutil.js",
            "line": 252,
            "description": "*nix convenience method.",
            "class": "PKObject"
        },
        {
            "file": "demo/www/framework/fileutil.js",
            "line": 262,
            "description": "Removes the file identified by @theFile. The full path must\n be specified.",
            "class": "PKObject"
        },
        {
            "file": "demo/www/framework/fileutil.js",
            "line": 283,
            "description": "*nix convenience method.",
            "class": "PKObject"
        },
        {
            "file": "demo/www/framework/fileutil.js",
            "line": 293,
            "description": "Creates a fileWriter for @theFile. If successful, it will\n call success() with the created writer. If unsuccessful, it\n will call failure().\nOnce in success(), writeFileData() may be used to finish\n the writing of data to the file.\nNote: if the file exists, it will be overwritten.",
            "class": "PKObject"
        },
        {
            "file": "demo/www/framework/fileutil.js",
            "line": 320,
            "description": "*nix convenience method.",
            "class": "PKObject"
        },
        {
            "file": "demo/www/framework/fileutil.js",
            "line": 330,
            "description": "Writes @theData to the specified writer. When complete,\n success() will be called. If it fails, failure().",
            "class": "PKObject"
        },
        {
            "file": "demo/www/framework/fileutil.js",
            "line": 343,
            "description": "*nix convenience method.",
            "class": "PKObject"
        },
        {
            "file": "demo/www/framework/localization.js",
            "line": 2,
            "description": "localization.js\n Author: Kerri Shotts\nProvides simple localization, as described in Chapter 1 of PhoneGap HotShot.\nRelies on JQuery/Globalize.js, as found at https://github.com/jquery/globalize",
            "class": "PKObject"
        },
        {
            "file": "demo/www/framework/localization.js",
            "line": 49,
            "description": "Loads the JQuery Globalize script from the framework directory\n as well as the underlying cultures definitions.",
            "class": "PKObject"
        },
        {
            "file": "demo/www/framework/localization.js",
            "line": 59,
            "description": "Loads the appropriate locale from the JQuery Globalize script.",
            "class": "PKObject"
        },
        {
            "file": "demo/www/framework/localization.js",
            "line": 72,
            "description": "Sets the current locale for the JQuery Globalize script.",
            "class": "PKObject"
        },
        {
            "file": "demo/www/framework/localization.js",
            "line": 81,
            "description": "Add a translation to the existing translation matrix",
            "params": [
                {
                    "name": "locale:",
                    "description": "the locale for which to add the translation"
                },
                {
                    "name": "key:",
                    "description": "the key for the translation (generally the word or phrase)"
                },
                {
                    "name": "value:",
                    "description": "the translated value."
                }
            ],
            "class": "PKObject"
        },
        {
            "file": "demo/www/framework/localization.js",
            "line": 103,
            "description": "Return the user's locale (e.g., en-US or fr-FR)\n for proper localization.",
            "return": {
                "description": "the user's current locale. If one can't be\n found, \"en-US\" is returned."
            },
            "class": "PKObject"
        },
        {
            "file": "demo/www/framework/localization.js",
            "line": 177,
            "description": "Convenience function for translating text.",
            "params": [
                {
                    "name": "key:",
                    "description": "the text to translate. Case doesn't matter."
                },
                {
                    "name": "locale:",
                    "description": "the locale to use for translation. If not defined, defaults\n                    to the user's current locale."
                },
                {
                    "name": "parms:",
                    "description": "(optional) An indexed array of replacement values."
                }
            ],
            "return": {
                "description": "the translated text, or the original key if no translation was found."
            },
            "class": "PKObject"
        },
        {
            "file": "demo/www/framework/localization.js",
            "line": 217,
            "description": "Convenience function for localizing numbers.",
            "params": [
                {
                    "name": "theNumber:",
                    "description": "the number to localize"
                },
                {
                    "name": "theFormat:",
                    "description": "the number of decimal places to use. Defaults to \"n\" if not supplied"
                },
                {
                    "name": "theLocale:",
                    "description": "(optional) the locale. If not specified, current locale is assumed."
                }
            ],
            "return": {
                "description": "the number formatted according to the locale. If the number of digits after\n the decimal point is less than the actual number of digits, rounding is performed. If\n the number of digits is more than the actual number of digits, zeroes are added."
            },
            "class": "PKObject"
        },
        {
            "file": "demo/www/framework/localization.js",
            "line": 241,
            "description": "Convenience function for localizing currency.",
            "params": [
                {
                    "name": "theNumber:",
                    "description": "the number to localize"
                },
                {
                    "name": "theFormat:",
                    "description": "the number of decimal places, defaults to two if not specified"
                },
                {
                    "name": "theLocale:",
                    "description": "(optional) the locale. If not specified, current locale is assumed."
                }
            ],
            "return": {
                "description": "the number formatted according to the locale's currency. If the number of digits after\n the decimal point is less than the actual number of digits, rounding is performed. If\n the number of digits is more than the actual number of digits, zeroes are added."
            },
            "class": "PKObject"
        },
        {
            "file": "demo/www/framework/localization.js",
            "line": 264,
            "description": "Convenience function for localizing percentages.",
            "params": [
                {
                    "name": "theNumber:",
                    "description": "the number to localize"
                },
                {
                    "name": "theFormat:",
                    "description": "the number of decimal places, defaults to two if not specified"
                },
                {
                    "name": "theLocale:",
                    "description": "(optional) the locale. If not specified, current locale is assumed."
                }
            ],
            "return": {
                "description": "the number formatted according to the locale's percent settings."
            },
            "class": "PKObject"
        },
        {
            "file": "demo/www/framework/localization.js",
            "line": 285,
            "description": "Convenience function for localizing dates.",
            "params": [
                {
                    "name": "theDate:",
                    "description": "the date to localize"
                },
                {
                    "name": "theFormat:",
                    "description": "(optional) The format of the date; \"d\" is assumed if not provided."
                },
                {
                    "name": "theLocale:",
                    "description": "(optional) the locale. If not specified, current locale is assumed."
                }
            ],
            "return": {
                "description": "the date formatted according to the locale's settings."
            },
            "class": "PKObject"
        },
        {
            "file": "demo/www/framework/pk-object.js",
            "line": 1,
            "description": "BASE PKOBJECT\n\n*****************************************************************************\nThe Object class provides the top object that all other objects inherit\n from. This provides object inheritance via a subclass/superclass mechanism\n without having to worry about prototype or constructor inheritance.\nPKObjects provide simple subclassing and a limited form of KVO in the form\n of tags and tag listeners.",
            "class": "PKObject"
        },
        {
            "file": "demo/www/framework/pk-object.js",
            "line": 42,
            "description": "We need a way to provide inheritance. Most methods only provide\n inheritance across the constructor chain, not across any possible\n method. But for our purposes, we need to be able to provide for\n overriding any method (such as drawing, touch responses, etc.),\n and so we implement inheritance in a different way.\nFirst, the _classHierarchy, a private property, provides the\n inheritance tree. All objects inherit from \"Object\".",
            "class": "PKObject"
        },
        {
            "file": "demo/www/framework/pk-object.js",
            "line": 56,
            "description": "Objects are subclassed using this method. The newClass is the\n unique class name of the object (and should match the class'\n actual name.",
            "class": "PKObject"
        },
        {
            "file": "demo/www/framework/pk-object.js",
            "line": 68,
            "description": "getClass returns the current class of the object. The\n \"class\" property can be used as well. Note that there\n is no \"setter\" for this property; an object's class\n can *not* be changed.",
            "class": "PKObject"
        },
        {
            "file": "demo/www/framework/pk-object.js",
            "line": 82,
            "description": "Returns the super class for the given class. If the\n class is not supplied, the class is assumed to be the\n object's own class.\nThe property \"superClass\" uses this to return the\n object's direct superclass, but getSuperClassOfClass\n can be used to determine superclasses higher up\n the hierarchy.",
            "class": "PKObject"
        },
        {
            "file": "demo/www/framework/pk-object.js",
            "line": 109,
            "description": "_super is an object that stores overridden functions by class and method\n name. This is how we get the ability to arbitrarily override any method\n already present in the superclass.",
            "class": "PKObject"
        },
        {
            "file": "demo/www/framework/pk-object.js",
            "line": 118,
            "description": "Must be called prior to defining the overridden function as this moves\n the original function into the _super object. The functionName must\n match the name of the method exactly, since there may be a long tree\n of code that depends on it.",
            "class": "PKObject"
        },
        {
            "file": "demo/www/framework/pk-object.js",
            "line": 136,
            "description": "Calls a super function with up to 10 arguments.",
            "class": "PKObject"
        },
        {
            "file": "demo/www/framework/pk-object.js",
            "line": 155,
            "description": "initializes the object",
            "class": "PKObject"
        },
        {
            "file": "demo/www/framework/pk-object.js",
            "line": 165,
            "description": "Objects have some properties that we want all objects to have...",
            "class": "PKObject"
        },
        {
            "file": "demo/www/framework/pk-object.js",
            "line": 214,
            "description": "All objects subject notifications for events",
            "class": "PKObject"
        },
        {
            "file": "demo/www/framework/pk-object.js",
            "line": 261,
            "description": "//http://stackoverflow.com/a/11462081\nfunction clone(obj){\n    var clonedObjectsArray = [];\n    var originalObjectsArray = []; //used to remove the unique ids when finished\n    var next_objid = 0;\n\n    function objectId(obj) {\n        if (obj == null) return null;\n        if (obj.__obj_id == undefined){\n            obj.__obj_id = next_objid++;\n            originalObjectsArray[obj.__obj_id] = obj;\n        }\n        return obj.__obj_id;\n    }\n\n    function cloneRecursive(obj) {\n        if (null == obj || typeof obj == \"string\" || typeof obj == \"number\" || typeof obj == \"boolean\") return obj;\n\n        // Handle Date\n        if (obj instanceof Date) {\n            var copy = new Date();\n            copy.setTime(obj.getTime());\n            return copy;\n        }\n\n        // Handle Array\n        if (obj instanceof Array) {\n            var copy = [];\n            for (var i = 0; i < obj.length; ++i) {\n                copy[i] = cloneRecursive(obj[i]);\n            }\n            return copy;\n        }\n\n        // Handle Object\n        if (obj instanceof Object) {\n            if (clonedObjectsArray[objectId(obj)] != undefined)\n                return clonedObjectsArray[objectId(obj)];\n\n            var copy;\n            if (obj instanceof Function)//Handle Function\n                copy = function(){return obj.apply(this, arguments);};\n            else\n                copy = {};\n\n            clonedObjectsArray[objectId(obj)] = copy;\n\n            for (var attr in obj)\n                if (attr != \"__obj_id\" && obj.hasOwnProperty(attr))\n                    copy[attr] = cloneRecursive(obj[attr]);                 \n\n            return copy;\n        }       \n\n\n        throw new Error(\"Unable to copy obj! Its type isn't supported.\");\n    }\n    var cloneObj = cloneRecursive(obj);\n\n\n\n    //remove the unique ids\n    for (var i = 0; i < originalObjectsArray.length; i++)\n    {\n        delete originalObjectsArray[i].__obj_id;\n    };\n\n    return cloneObj;\n}",
            "class": "PKObject"
        },
        {
            "file": "demo/www/framework/scroller.js",
            "line": 1,
            "description": "SCROLLER\n Author:  Kerri Shotts\n Version: 0.1 alpha\n License: MIT\nThis library is intended to be similar to iScroll-lite in that it should be\n a relatively fast method of scrolling content without being horribly laggy\n or cause incorrect \"clicks\" to be registered.\nThis library does *NOT* support physics-based scrolling, except for a small\n inertia animation at the end of a scroll. It is not intended to replicate\n native scrolling /at all/. There are no bounces at the top or bottom. There\n is no visible scroll bar either. Essentially, overflow:scroll as supported\n on iOS 5 with no bounce/inertia scrolling.\nConsider this library an experiment. The idea is to be simpler than iScroll\n to use -- for example, the scroller only needs to be created once -- it does\n not need to be refreshed when AJAX content loads. It is intended to be at\n least as fast as iScroll, if not a little faster. It is not, however,\n intended to be a native scrolling solution. At this time, I do not believe\n it truly possible or practice, and users will notice any non-native solution\n that tries to match, so why try?\nUsage:\nvar yourScroller = new SCROLLER.GenericScroller ( \"the_element_to_scroll\" );\nwhere you have the following DOM tree:\n    container_element\n     - the_element_to_scroll\nFuture Goals:\n - Detect native physics scrolling and use it when possible\n  - Detect native overflow:scroll (non-physics) and use it when possible\n  - Improve the inertial scrolling at end (this is a very rough implementation)\n  - Become irrelevant. I hope for a day when all mobile browsers can scroll\n    complex content natively and smoothly.\nSupported Platforms:\n - Android 2.3+\n  - iOS 4.3+\n  - probably any webkit browser?\nKnown Issues:\n  - A little too willing to call a scroll a \"click\".",
            "class": "PKObject"
        },
        {
            "file": "demo/www/framework/scroller.js",
            "line": 107,
            "description": "Attaches the scroller to a new element. The element MUST be contained within\n another element that can support the setting of scrollTop/Left.\nAny overflow values will be overridden. Any webkit transforms may also be\n overridden.",
            "class": "PKObject"
        },
        {
            "file": "demo/www/framework/scroller.js",
            "line": 148,
            "description": "Get the scroll position",
            "class": "PKObject"
        },
        {
            "file": "demo/www/framework/scroller.js",
            "line": 161,
            "description": "Scroll to a given location. If the location can't be scrolled to,\n the nearest location will be used.",
            "class": "PKObject"
        },
        {
            "file": "demo/www/framework/scroller.js",
            "line": 174,
            "description": "touchStart initializes all our values when a touch is received.",
            "class": "PKObject"
        },
        {
            "file": "demo/www/framework/scroller.js",
            "line": 204,
            "description": "When a touch moves, we'll receive the event here.",
            "class": "PKObject"
        },
        {
            "file": "demo/www/framework/scroller.js",
            "line": 238,
            "description": "When a finger is lifted from the screen, we'll get this event.\n We can determine whether or not it was a click if we scrolled at all,\n and if we scrolled a certain distance, we'll do a little inertial\n scrolling",
            "class": "PKObject"
        },
        {
            "file": "demo/www/framework/ui-base.js",
            "line": 1,
            "description": "UI-BASE\n Author: Kerri Shotts\n Version: 0.3\nThis provides the basics of the UI model, including poings, rects, and more.",
            "class": "PKObject"
        },
        {
            "file": "demo/www/framework/ui-base.js",
            "line": 37,
            "description": "Points are of the form { x: #, y: # }",
            "class": "PKObject"
        },
        {
            "file": "demo/www/framework/ui-base.js",
            "line": 50,
            "description": "offsets a point by the values in another point. For example,\n if pointA = { x:100, y:100 } and pointB = { x:-5, y:10 }, the\n returned point will be { x:95, y:110 }.",
            "class": "PKObject"
        },
        {
            "file": "demo/www/framework/ui-base.js",
            "line": 62,
            "description": "Sizes are similar to points, but they are of the form\n { w: width, h: height }",
            "class": "PKObject"
        },
        {
            "file": "demo/www/framework/ui-base.js",
            "line": 89,
            "description": "Rects are of the form { origin: point, size: size }, or\n { origin: {x: #, y: #}, size: {w: width, h: height} }",
            "class": "PKObject"
        },
        {
            "file": "demo/www/framework/ui-base.js",
            "line": 105,
            "description": "Offsets a rect's origin point by the supplied point.",
            "class": "PKObject"
        },
        {
            "file": "demo/www/framework/ui-base.js",
            "line": 115,
            "description": "Offsets a rect's origin by the origin of the second rect,\n and offsets the rect's size by the size of the second rect.\nThis implies that the second rect does not need to be \"real\",\n as in, it can have negative sizes and such.",
            "class": "PKObject"
        },
        {
            "file": "demo/www/framework/ui-base.js",
            "line": 130,
            "description": "Returns true if the two rects supplied intersect. Note that this\n will not work if the rectangles are non-canonical.",
            "class": "PKObject"
        },
        {
            "file": "demo/www/framework/ui-base.js",
            "line": 155,
            "description": "Think of these as constants, except you have to call them like a \n method.\nzeroPoint() returns a point of {0,0}\n zeroSize() returns a size of {0,0}\n zeroRect() returns a rect of { {0,0}, {0,0} }\n screenSize() returns a **point** representing the size of the screen (or browser).\n screenBounds() returns a **rect** representing the size of the screen (with a {0,0} origin).",
            "class": "PKObject"
        },
        {
            "file": "demo/www/framework/ui-base.js",
            "line": 173,
            "description": "fonts",
            "class": "PKObject"
        },
        {
            "file": "demo/www/framework/ui-base.js",
            "line": 237,
            "description": "Shadows",
            "class": "PKObject"
        },
        {
            "file": "demo/www/framework/ui-base.js",
            "line": 314,
            "description": "Colors",
            "class": "PKObject"
        },
        {
            "file": "demo/www/framework/ui-base.js",
            "line": 361,
            "description": "Images",
            "class": "PKObject"
        },
        {
            "file": "demo/www/framework/ui-base.js",
            "line": 458,
            "description": "borders",
            "class": "PKObject"
        },
        {
            "file": "demo/www/framework/ui-base.js",
            "line": 554,
            "description": "events",
            "class": "PKObject"
        },
        {
            "file": "demo/www/framework/ui-core.js",
            "line": 1,
            "description": "UI-CORE\n Author: Kerri Shotts\nThis script provides a lot of the core user interface framework, such as\n loading content via AJAX, transitions, and more.",
            "class": "PKObject"
        },
        {
            "file": "demo/www/framework/ui-core.js",
            "line": 84,
            "description": "Global back button handler, since doing it per-view and per-\n message is buggy. This will call backButtonPressed() on any\n active message or view. If said method isn't found, it will\n pop the view on its own.\nNOTE: if backButtonPressed() is defined, it is expected to\n pop the view, if the method is also a view. If the view is\n not popped, the back button will have no effect.\nSECOND NOTE: Since back buttons received in quick succession\n are problematic, we force the user to wait 1s before the next\n back button is accepted.",
            "class": "PKObject"
        },
        {
            "file": "demo/www/framework/ui-core.js",
            "line": 129,
            "description": "Initializes the application framework\n  - in this version of the framework, we force an orientation update.\n  - by default, we attach a global back button handler\n  - we deisable animations and transforms for Android and WP7.",
            "class": "PKObject"
        },
        {
            "file": "demo/www/framework/ui-core.js",
            "line": 177,
            "description": "Called on first-start and whenever the orientation changes. It updates the\n body's class to reflect the device, formfactor, orientation, and scaling.",
            "class": "PKObject"
        },
        {
            "file": "demo/www/framework/ui-core.js",
            "line": 261,
            "description": "Shows a view and pushes it on the viewStack. NO ANIMATION.\n DOES NOT PROPERLY CALL viewWillHide/viewDidHide of any view, since there\n may be no view visible.",
            "class": "PKObject"
        },
        {
            "file": "demo/www/framework/ui-core.js",
            "line": 288,
            "description": "Hides a view and pops it off the viewStack. NO ANIMATION.\n DOES NOT ATTEMPT TO CALL viewWillShow or viewDidShow of any view\n on the stack, as there may not be any view visible.",
            "class": "PKObject"
        },
        {
            "file": "demo/www/framework/ui-core.js",
            "line": 314,
            "description": "Swaps a view on the stack with the desired view. NO ANIMATION.",
            "class": "PKObject"
        },
        {
            "file": "demo/www/framework/ui-core.js",
            "line": 505,
            "description": "Shows a view WITH ANIMATION and pushes it onto the view stack.\n The animation is a slide from right to left.",
            "class": "PKObject"
        },
        {
            "file": "demo/www/framework/ui-core.js",
            "line": 664,
            "description": "Hides a view WITH ANIMATION and pops it from the stack.",
            "class": "PKObject"
        },
        {
            "file": "demo/www/framework/ui-core.js",
            "line": 924,
            "description": "Applies touch listeners to various items in the dom.\nIn this version of the framework, we apply it to BUTTONs.",
            "class": "PKObject"
        },
        {
            "file": "demo/www/framework/ui-gestures.js",
            "line": 1,
            "description": "UI-GESTURES\n Author:  Kerri Shotts\n Version: 0.1 alpha\n License: MIT\nA simple, no-frills gesture recognizer. Permits long-press recognition,\n horizontal swipe recognition, and vertical swipe recognition. Recognizing\n swipes in a particular direction (left, right, up, down) should be easy to\n add later.\nThe SimpleGesture class represents the basic recognizer -- it implements all\n the tracking of touch and mouse events. Every 100ms it calls\n a recognition function, which by default does nothing. Essentially, Simple-\n Gesture is abstract. This method is expected to be overridden by a specific\n recognizer, which the LongPressGesture, HorizontalSwipeGesture, and\n VerticalSwipeGesture do.\nThe LongPressGesture will fire off an event when a longpress is recognized.\n How this is recognized is partially defined by the caller -- that is,\n two durations can be supplied. By default, the long-press is recognized at\n 1s and cancelled at 3s (assuming no previous recognition). It is also\n cancelled should any movement outside of a 25px radius occur.\nThe HorizontalSwipeGesture and VerticalSwipeGesture will fire off an event\n when a swipe in the given axis is detected. This swipe is detected when the\n length of the swipe exceeds 75px (or the provided override), and will be\n fired as long as the duration of the swipe is less than the cancel duration\n (3s by default). The line must not deviate by more than 25px in the specified\n axis, or the gesture will fail to be recognized.\nUsage:\nvar anElement = document.getElementById(\"abc\");\n var aLongPressGesture = new GESTURES.LongPressGesture\n                             ( anElement, theFunctionToCallWhenRecognized,\n                               [ thePressDuration, [ theCancelDelay ]] );\nvar aHorizontalSwipeGesture = new GESTURES.HorizontalSwipeGesture\n                               ( anElement, theFunctionToCallWhenRecognized,\n                                 [ theSwipeLength, [ theCancelDelay ]] );\nvar aVerticalSwipeGesture = new GESTURES.VerticalSwipeGesture\n                             ( anElement, theFunctionToCallWhenRecognized,\n                               [ theSwipeLength, [ theCancelDelay ]] );\n\nWhere: anElement is an HTML DOM element\n        theFunctionToCallWhenRecognized is a function that will be called\n            when the gesture is recognized. It will be passed the recognizer,\n            and as such, one can store & retrieve data in this manner:\n                aLongPressGesture.data = \"Hello\";\n                 function theFunctionToCallWhenRecognized ( gr )\n                 { alert (gr.data); }\n           This will generate an alert of \"Hello\" when the element is long-\n            pressed.\n       thePressDuration: Optional, defaults to 1s. The amount of time required\n            to recognize a long-press.\n        theSwipeLength: Optional, defaults to 75px. The length of a swipe\n            required to recognize a swipe.\n        theCancelDelay: Optional, defaults to 3s. If a gesture is not recognized\n            prior to this delay, the gesture is cancelled, that is, it will\n            never be recognized.",
            "class": "PKObject"
        },
        {
            "file": "demo/www/framework/ui-label.js",
            "line": 1,
            "description": "UI-LABEL\n Author: Kerri Shotts\n Version: 0.3\nUI-LABEL provides the UI.Label object",
            "class": "PKObject"
        },
        {
            "file": "demo/www/framework/ui-label.js",
            "line": 48,
            "description": "labels have the following properties:\n  - text (properlly innerHTML)\n  - textColor ( font Color )\n  - shadow\n  - shadowColor\n  - shadowOffset\n  - textAlignment\n  - font",
            "class": "PKObject"
        },
        {
            "file": "demo/www/framework/ui-label.js",
            "line": 124,
            "description": "init",
            "class": "PKObject"
        },
        {
            "file": "demo/www/framework/ui-msg.js",
            "line": 1,
            "description": "UI-MSG\n Author: Kerri Shotts\nThis script provides a mechanism by which alerts, prompts, and confirmations\n can be displayed to the end user.",
            "class": "PKObject"
        },
        {
            "file": "demo/www/framework/ui-view.js",
            "line": 1,
            "description": "UI-VIEW\n Author: Kerri Shotts\n Version: 0.3\nUI-VIEW provides the UI.View object",
            "class": "PKObject"
        },
        {
            "file": "demo/www/framework/ui-view.js",
            "line": 60,
            "description": "All views have direct DOM representations",
            "class": "PKObject"
        },
        {
            "file": "demo/www/framework/ui-view.js",
            "line": 66,
            "description": "All views have subviews",
            "class": "PKObject"
        },
        {
            "file": "demo/www/framework/ui-view.js",
            "line": 104,
            "description": "All views have bounds and frames.",
            "class": "PKObject"
        },
        {
            "file": "demo/www/framework/ui-view.js",
            "line": 210,
            "description": "recalculates the element's position based on\n the frame. It also calls calcElement() for the\n object, if defined. After that, it calls the\n _calcElement for every subview, in case they\n decide to be re-positioned.",
            "class": "PKObject"
        },
        {
            "file": "demo/www/framework/ui-view.js",
            "line": 263,
            "description": "Every view has a background color, even if it is transparent.",
            "class": "PKObject"
        },
        {
            "file": "demo/www/framework/ui-view.js",
            "line": 283,
            "description": "Every view can have a background image",
            "class": "PKObject"
        },
        {
            "file": "demo/www/framework/ui-view.js",
            "line": 302,
            "description": "Every view can also have a border",
            "class": "PKObject"
        },
        {
            "file": "demo/www/framework/ui-view.js",
            "line": 323,
            "description": "And every view can also have multiple shadows",
            "class": "PKObject"
        },
        {
            "file": "demo/www/framework/ui-view.js",
            "line": 352,
            "description": "Every view can be shown or hidden",
            "class": "PKObject"
        },
        {
            "file": "demo/www/framework/ui-view.js",
            "line": 376,
            "description": "Every view has opacity",
            "class": "PKObject"
        },
        {
            "file": "demo/www/framework/ui-view.js",
            "line": 398,
            "description": "Views can override their scrolling",
            "class": "PKObject"
        },
        {
            "file": "demo/www/framework/ui-view.js",
            "line": 416,
            "description": "event processing",
            "class": "PKObject"
        },
        {
            "file": "demo/www/framework/ui-view.js",
            "line": 500,
            "description": "init",
            "class": "PKObject"
        },
        {
            "file": "demo/www/framework/utility.js",
            "line": 1,
            "description": "UTILITY\n Author: Kerri Shotts\nThis library includes simple utility functions",
            "class": "PKObject"
        },
        {
            "file": "demo/www/framework/utility.js",
            "line": 46,
            "description": "Checks to see if the dependency has already been loaded.",
            "class": "PKObject"
        },
        {
            "file": "demo/www/framework/utility.js",
            "line": 105,
            "description": "Returns an element specified by elementId. Similar to (but not exactly like) jQuery's $()",
            "class": "PKObject"
        },
        {
            "file": "demo/www/framework/utility.js",
            "line": 115,
            "description": "Returns an element specified by elementId, but with localization. Localization assumes\n you have at least one element of the form <elementId_enus>, and that all other localized\n elements have the locale after the elementId appended with an underscore.\n (eg: thisElementIsLocalized_enus and thisElementIsLocalized_eses)",
            "class": "PKObject"
        },
        {
            "file": "demo/www/framework/utility.js",
            "line": 153,
            "description": "Similar to $$. Returns all classes matching a selector.",
            "class": "PKObject"
        },
        {
            "file": "demo/www/framework/utility.js",
            "line": 163,
            "description": "Utility function to delay execution of code",
            "class": "PKObject"
        },
        {
            "file": "demo/www/framework/utility.js",
            "line": 172,
            "description": "Loads a file or URL and returns it to the completion\n handler. The completion handler must be of the form\n fn(success/failure, data).",
            "params": [
                {
                    "name": "theFileName",
                    "description": "the file or URL to load"
                },
                {
                    "name": "aSync",
                    "description": "if TRUE, load asynchronously"
                },
                {
                    "name": "completion",
                    "description": "completion block"
                }
            ],
            "class": "PKObject"
        },
        {
            "file": "demo/www/framework/utility.js",
            "line": 272,
            "description": "Javascript doesn't provide any native include functionality,\n which tends to bloat code and result in long scripts that are\n brittle. Here's our tiny effort to help stem the tide and\n make Javascript just a /little/ nicer.\nNOTE: includes are loaded SYNCHRONOUSLY. This is done as further\n includes may rely upon the one being loaded now. However, it does\n mean that larger files may take longer to process.",
            "class": "PKObject"
        },
        {
            "file": "demo/www/framework/utility.js",
            "line": 314,
            "description": "Loads an HTML fragment, creates a DIV, and adds it to the DOM.\n Any script tags inside will be executed.",
            "params": [
                {
                    "name": "theFileName",
                    "description": "the file or URL to laod"
                },
                {
                    "name": "options",
                    "description": "An array of options, as follows:"
                },
                {
                    "name": "aSync",
                    "description": "Determines if the file is loaded\n                                 asynchronously or not."
                },
                {
                    "name": "id",
                    "description": "The ID to attach to the DIV created\n                                 to surround the content."
                },
                {
                    "name": "className",
                    "description": "The class name to attach to the DIV\n                                 created to surround the content."
                },
                {
                    "name": "attachTo",
                    "description": "Indicates the element to append the\n                                 content to. If not specified,\n                                 document.body is used."
                },
                {
                    "name": "completion",
                    "description": "A function called when loading is\n                              complete. Of the form fn ( successOrFailure )\n                              so that success or failure of the load\n                              can be determined."
                }
            ],
            "class": "PKObject"
        },
        {
            "file": "demo/www/framework/utility.js",
            "line": 407,
            "description": "Retrieves a JSON string from the specified URL, and executes completion.\n Completion must be of the form ( success, data ).",
            "params": [
                {
                    "name": "theURL",
                    "description": "the URL or Filename"
                },
                {
                    "name": "completion",
                    "description": "function of the from ( success, data )"
                }
            ],
            "class": "PKObject"
        },
        {
            "file": "demo/www/framework/utility.js",
            "line": 442,
            "description": "Loads a URL in a popup window. Uses ChildBrowser for PG 2.2.x or\n lower, and in-app browser for 2.3 or higher.",
            "class": "PKObject"
        },
        {
            "file": "demo/www/framework/utility.js",
            "line": 476,
            "description": "instanceOfTemplate returns an HTML string ready for insertion into the DOM\n as an instance of the supplied template (templateElement). Any %VAR% are\n replaced by VAR from the replacements object.",
            "class": "PKObject"
        },
        {
            "file": "demo/www/framework/utility.js",
            "line": 496,
            "description": "Filename Handling",
            "class": "PKObject"
        },
        {
            "file": "framework/device.js",
            "line": 1,
            "description": "DEVICE\n Author: Kerri Shotts\nThis library includes functions that reflect the device and its current\n state",
            "class": "PKObject"
        },
        {
            "file": "framework/device.js",
            "line": 42,
            "description": "Returns the device platform, lowercased. If PKDEVICE.platformOverride is\n other than \"false\", it is returned instead.",
            "class": "PKObject"
        },
        {
            "file": "framework/device.js",
            "line": 97,
            "description": "Returns the device's form factor. Possible values are \"tablet\" and\n \"phone\". If PKDEVICE.formFactorOverride is not false, it is returned\n instead.",
            "class": "PKObject"
        },
        {
            "file": "framework/device.js",
            "line": 128,
            "description": "Determines if the device is in Portrait orientation.",
            "class": "PKObject"
        },
        {
            "file": "framework/device.js",
            "line": 137,
            "description": "Determines if the device is in Landscape orientation.",
            "class": "PKObject"
        },
        {
            "file": "framework/device.js",
            "line": 150,
            "description": "Determines if the device is a hiDPI device (aka retina)",
            "class": "PKObject"
        },
        {
            "file": "framework/fileutil.js",
            "line": 1,
            "description": "FILEUTIL\n Author: Kerri Shotts\nThis library includes routines to deal with the FILE API, (which is... a bit\n painful.) The purpose of the library is to reduce the amount of work necessary\n to go through obtaining a file system, working with directories and files,\n etc. That isn't to say that we can eliminate callbacks or even callback\n chaining -- but it is significantly easier without all the intervening cruft,\n which is essentially (for all intents and purposes) boilerplate.\nIMPORTANT NOTE:\nThis library provides various conveniences that make referencing persistent\n and temporary storage a bit easier as well. For example, you can use a\n path like the following:\n    doc://photo.jpg   -->   /some/gobbledygook/yourApp/Documents/photo.jpg\n     tmp://photo.jpg   -->   /some/gobbledygook/yourApp/tmp/photo.jpg\nSeveral APIs (such as camera capture) may also refer to paths with\n \"file://localhost\" attached. The routines will gracefully remove this so that\n the reference is a true file.\nCONVENIENCE:\nFor those who are more comfortable with *nix/BSD commands, nearly each method\n has a version that correlates to a roughly *nix name. The parameters are the\n same, however.\nMETHODS\n   copyFileTo ( source, target, success, failure )         |   cp ()\n   moveFileTo ( source, target, success, failure )         |   mv ()\n   removeFile ( theFile, success, failure )                |   rm ()\n   renameFile ( source, newName, success, failure )        |   -\n   createFileWriter ( theFile, success, failure )          |   fcreate ()\n   writeFileData ( writer, theData, success, failure )     |   fwrite ()\nPLANNED METHODS\n  getListing ( path, filters, success, failure )          |    ls ()\n   createDirectory ( path, newDirectory, success, failure )|    mkdir()\n   removeDirectory ( path, theDirectory, success, failure )|    rmdir()\n   createFileReader ( theFile, success, failure )          |    fopen()\n   readFileData ( reader, success, failure )               |    fread()",
            "class": "PKObject"
        },
        {
            "file": "framework/fileutil.js",
            "line": 101,
            "description": "Determines the persistent and temporary file systems prior\n to file operations. While it's unlikely that these will\n change during application execution, it certainly doesn't\n hurt to re-read them whenever possible (just in case!).\nWhen both are read, the success method is called. If we\n can't obtain one or the other, the failure method is called.",
            "class": "PKObject"
        },
        {
            "file": "framework/fileutil.js",
            "line": 140,
            "description": "Handles substition strings within a file path.\n doc:/ translates to the persistent storage. We don't use \"//\" here\n        since the persistentFS doesn't have a trailing \"/\", so we leave\n        that in the original.\n  tmp:/ translates to the temporary storage.\n  file://localhost translates to nothing.",
            "class": "PKObject"
        },
        {
            "file": "framework/fileutil.js",
            "line": 159,
            "description": "Copies the file identified by @source to the file identified by @target.\n If the copy is successful, success() is called. If not, failure() is\n called.\nThe target will generally be of the form \"doc://filename\", but it can\n be any path and file name that the application has access to.\nNOTE: Copying will fail if the target exists.",
            "class": "PKObject"
        },
        {
            "file": "framework/fileutil.js",
            "line": 193,
            "description": "*nix convenience method.",
            "class": "PKObject"
        },
        {
            "file": "framework/fileutil.js",
            "line": 203,
            "description": "Moves the file identified by @source to the file identified by @target.\n If the move is successful, success() is called. If not, failure() is\n called.\nThe target will generally be of the form \"doc://filename\", but it can\n be any path and file name that the application has access to.\nNOTE: The move will overwrite the target if it exists.",
            "class": "PKObject"
        },
        {
            "file": "framework/fileutil.js",
            "line": 237,
            "description": "Convenience method that allows renaming a file in the same\n directory as the source. The source's path will prepended\n to the new name.\nNOTE: The move will overwrite the target if it exists.",
            "class": "PKObject"
        },
        {
            "file": "framework/fileutil.js",
            "line": 252,
            "description": "*nix convenience method.",
            "class": "PKObject"
        },
        {
            "file": "framework/fileutil.js",
            "line": 262,
            "description": "Removes the file identified by @theFile. The full path must\n be specified.",
            "class": "PKObject"
        },
        {
            "file": "framework/fileutil.js",
            "line": 283,
            "description": "*nix convenience method.",
            "class": "PKObject"
        },
        {
            "file": "framework/fileutil.js",
            "line": 293,
            "description": "Creates a fileWriter for @theFile. If successful, it will\n call success() with the created writer. If unsuccessful, it\n will call failure().\nOnce in success(), writeFileData() may be used to finish\n the writing of data to the file.\nNote: if the file exists, it will be overwritten.",
            "class": "PKObject"
        },
        {
            "file": "framework/fileutil.js",
            "line": 320,
            "description": "*nix convenience method.",
            "class": "PKObject"
        },
        {
            "file": "framework/fileutil.js",
            "line": 330,
            "description": "Writes @theData to the specified writer. When complete,\n success() will be called. If it fails, failure().",
            "class": "PKObject"
        },
        {
            "file": "framework/fileutil.js",
            "line": 343,
            "description": "*nix convenience method.",
            "class": "PKObject"
        },
        {
            "file": "framework/localization.js",
            "line": 2,
            "description": "localization.js\n Author: Kerri Shotts\nProvides simple localization, as described in Chapter 1 of PhoneGap HotShot.\nRelies on JQuery/Globalize.js, as found at https://github.com/jquery/globalize",
            "class": "PKObject"
        },
        {
            "file": "framework/localization.js",
            "line": 49,
            "description": "Loads the JQuery Globalize script from the framework directory\n as well as the underlying cultures definitions.",
            "class": "PKObject"
        },
        {
            "file": "framework/localization.js",
            "line": 59,
            "description": "Loads the appropriate locale from the JQuery Globalize script.",
            "class": "PKObject"
        },
        {
            "file": "framework/localization.js",
            "line": 72,
            "description": "Sets the current locale for the JQuery Globalize script.",
            "class": "PKObject"
        },
        {
            "file": "framework/localization.js",
            "line": 81,
            "description": "Add a translation to the existing translation matrix",
            "params": [
                {
                    "name": "locale:",
                    "description": "the locale for which to add the translation"
                },
                {
                    "name": "key:",
                    "description": "the key for the translation (generally the word or phrase)"
                },
                {
                    "name": "value:",
                    "description": "the translated value."
                }
            ],
            "class": "PKObject"
        },
        {
            "file": "framework/localization.js",
            "line": 103,
            "description": "Return the user's locale (e.g., en-US or fr-FR)\n for proper localization.",
            "return": {
                "description": "the user's current locale. If one can't be\n found, \"en-US\" is returned."
            },
            "class": "PKObject"
        },
        {
            "file": "framework/localization.js",
            "line": 177,
            "description": "Convenience function for translating text.",
            "params": [
                {
                    "name": "key:",
                    "description": "the text to translate. Case doesn't matter."
                },
                {
                    "name": "locale:",
                    "description": "the locale to use for translation. If not defined, defaults\n                    to the user's current locale."
                },
                {
                    "name": "parms:",
                    "description": "(optional) An indexed array of replacement values."
                }
            ],
            "return": {
                "description": "the translated text, or the original key if no translation was found."
            },
            "class": "PKObject"
        },
        {
            "file": "framework/localization.js",
            "line": 217,
            "description": "Convenience function for localizing numbers.",
            "params": [
                {
                    "name": "theNumber:",
                    "description": "the number to localize"
                },
                {
                    "name": "theFormat:",
                    "description": "the number of decimal places to use. Defaults to \"n\" if not supplied"
                },
                {
                    "name": "theLocale:",
                    "description": "(optional) the locale. If not specified, current locale is assumed."
                }
            ],
            "return": {
                "description": "the number formatted according to the locale. If the number of digits after\n the decimal point is less than the actual number of digits, rounding is performed. If\n the number of digits is more than the actual number of digits, zeroes are added."
            },
            "class": "PKObject"
        },
        {
            "file": "framework/localization.js",
            "line": 241,
            "description": "Convenience function for localizing currency.",
            "params": [
                {
                    "name": "theNumber:",
                    "description": "the number to localize"
                },
                {
                    "name": "theFormat:",
                    "description": "the number of decimal places, defaults to two if not specified"
                },
                {
                    "name": "theLocale:",
                    "description": "(optional) the locale. If not specified, current locale is assumed."
                }
            ],
            "return": {
                "description": "the number formatted according to the locale's currency. If the number of digits after\n the decimal point is less than the actual number of digits, rounding is performed. If\n the number of digits is more than the actual number of digits, zeroes are added."
            },
            "class": "PKObject"
        },
        {
            "file": "framework/localization.js",
            "line": 264,
            "description": "Convenience function for localizing percentages.",
            "params": [
                {
                    "name": "theNumber:",
                    "description": "the number to localize"
                },
                {
                    "name": "theFormat:",
                    "description": "the number of decimal places, defaults to two if not specified"
                },
                {
                    "name": "theLocale:",
                    "description": "(optional) the locale. If not specified, current locale is assumed."
                }
            ],
            "return": {
                "description": "the number formatted according to the locale's percent settings."
            },
            "class": "PKObject"
        },
        {
            "file": "framework/localization.js",
            "line": 285,
            "description": "Convenience function for localizing dates.",
            "params": [
                {
                    "name": "theDate:",
                    "description": "the date to localize"
                },
                {
                    "name": "theFormat:",
                    "description": "(optional) The format of the date; \"d\" is assumed if not provided."
                },
                {
                    "name": "theLocale:",
                    "description": "(optional) the locale. If not specified, current locale is assumed."
                }
            ],
            "return": {
                "description": "the date formatted according to the locale's settings."
            },
            "class": "PKObject"
        },
        {
            "file": "framework/pk-object.js",
            "line": 63,
            "description": "We need a way to provide inheritance. Most methods only provide\n inheritance across the constructor chain, not across any possible\n method. But for our purposes, we need to be able to provide for\n overriding any method (such as drawing, touch responses, etc.),\n and so we implement inheritance in a different way.\nFirst, the _classHierarchy, a private property, provides the\n inheritance tree. All objects inherit from \"PKObject\".",
            "access": "private",
            "tagname": "",
            "itemtype": "property",
            "name": "_classHierarchy",
            "type": "Array",
            "default": "[\"PKObject\"]",
            "class": "PKObject",
            "module": "PKObject"
        },
        {
            "file": "framework/pk-object.js",
            "line": 81,
            "description": "Objects are subclassed using this method. The newClass is the\n unique class name of the object (and should match the class'\n actual name.",
            "itemtype": "method",
            "name": "subclass",
            "params": [
                {
                    "name": "newClass",
                    "description": "- the new unique class of the object",
                    "type": "String"
                }
            ],
            "class": "PKObject",
            "module": "PKObject"
        },
        {
            "file": "framework/pk-object.js",
            "line": 95,
            "description": "getClass returns the current class of the object. The\n `class` property can be used as well. Note that there\n is no `setter` for this property; an object's class\n can *not* be changed.",
            "itemtype": "method",
            "name": "getClass",
            "return": {
                "description": "the class of the instance",
                "type": "String"
            },
            "class": "PKObject",
            "module": "PKObject"
        },
        {
            "file": "framework/pk-object.js",
            "line": 110,
            "description": "The class of the instance. **Read-only**",
            "itemtype": "property",
            "name": "class",
            "type": "String",
            "readonly": "",
            "class": "PKObject",
            "module": "PKObject"
        },
        {
            "file": "framework/pk-object.js",
            "line": 119,
            "description": "Returns the super class for the given class. If the\n class is not supplied, the class is assumed to be the\n object's own class.\nThe property \"superClass\" uses this to return the\n object's direct superclass, but getSuperClassOfClass\n can be used to determine superclasses higher up\n the hierarchy.",
            "itemtype": "method",
            "name": "getSuperClassOfClass",
            "params": [
                {
                    "name": "aClass",
                    "description": "the class for which you want the super class. If not specified,\n                                        the instance's class is used.",
                    "type": "String",
                    "optional": true,
                    "optdefault": "currentClass"
                }
            ],
            "return": {
                "description": "the super-class of the specified class.",
                "type": "String"
            },
            "class": "PKObject",
            "module": "PKObject"
        },
        {
            "file": "framework/pk-object.js",
            "line": 148,
            "description": "The superclass of the instance.",
            "itemtype": "property",
            "name": "superClass",
            "type": "String",
            "class": "PKObject",
            "module": "PKObject"
        },
        {
            "file": "framework/pk-object.js",
            "line": 156,
            "description": "_super is an object that stores overridden functions by class and method\n name. This is how we get the ability to arbitrarily override any method\n already present in the superclass.",
            "access": "private",
            "tagname": "",
            "itemtype": "property",
            "name": "_super",
            "type": "Object",
            "class": "PKObject",
            "module": "PKObject"
        },
        {
            "file": "framework/pk-object.js",
            "line": 168,
            "description": "Must be called prior to defining the overridden function as this moves\n the original function into the _super object. The functionName must\n match the name of the method exactly, since there may be a long tree\n of code that depends on it.",
            "itemtype": "method",
            "name": "overrideSuper",
            "params": [
                {
                    "name": "theClass",
                    "description": "the class for which the function override is desired",
                    "type": "String"
                },
                {
                    "name": "theFunctionName",
                    "description": "the name of the function to override",
                    "type": "String"
                },
                {
                    "name": "theActualFunction",
                    "description": "the actual function (or pointer to function)",
                    "type": "Function"
                }
            ],
            "class": "PKObject",
            "module": "PKObject"
        },
        {
            "file": "framework/pk-object.js",
            "line": 191,
            "description": "Calls a super function with up to 10 arguments.",
            "itemtype": "method",
            "name": "super",
            "params": [
                {
                    "name": "theClass",
                    "description": "the current class instance",
                    "type": "String"
                },
                {
                    "name": "theFunctionName",
                    "description": "the name of the function to execute",
                    "type": "String"
                },
                {
                    "name": "arg",
                    "description": "up to 10 parameters to pass to the super method",
                    "type": "Any",
                    "optional": true,
                    "multiple": true
                }
            ],
            "class": "PKObject",
            "module": "PKObject"
        },
        {
            "file": "framework/pk-object.js",
            "line": 215,
            "description": "initializes the object",
            "itemtype": "method",
            "name": "init",
            "class": "PKObject",
            "module": "PKObject"
        },
        {
            "file": "framework/pk-object.js",
            "line": 233,
            "description": "Stores the values of all the tags associated with the instance.",
            "access": "private",
            "tagname": "",
            "itemtype": "property",
            "name": "_tag",
            "type": "Object",
            "class": "PKObject",
            "module": "PKObject"
        },
        {
            "file": "framework/pk-object.js",
            "line": 241,
            "description": "Stores the *listeners* for all the tags associated with the instance.",
            "access": "private",
            "tagname": "",
            "itemtype": "property",
            "name": "_tagListeners",
            "type": "Object",
            "class": "PKObject",
            "module": "PKObject"
        },
        {
            "file": "framework/pk-object.js",
            "line": 250,
            "description": "Sets the value for a specific tag associated with the instance. If the\n tag does not exist, it is created.\n \n Any listeners attached to the tag via `addTagListenerForKey` will be\n notified of the change. Listeners are passed three parameters:\n `self` (the originating instance),\n `theKey` (the tag being changed),\n and `theValue` (the value of the tag); the tag is *already* changed",
            "itemtype": "method",
            "name": "setTagForKey",
            "params": [
                {
                    "name": "theKey",
                    "description": "the name of the tag; \"__default\" is special and\n                     refers to the default tag visible via the `tag`\n                     property.",
                    "type": "Any"
                },
                {
                    "name": "theValue",
                    "description": "the value to assign to the tag.",
                    "type": "Any"
                }
            ],
            "class": "PKObject",
            "module": "PKObject"
        },
        {
            "file": "framework/pk-object.js",
            "line": 279,
            "description": "Returns the value for a given key. If the key does not exist, the\n result is undefined.",
            "itemtype": "method",
            "name": "getTagForKey",
            "params": [
                {
                    "name": "theKey",
                    "description": "the tag; \"__default\" is special and refers to\n                     the default tag visible via the `tag` property.",
                    "type": "Any"
                }
            ],
            "return": {
                "description": "the value of the key",
                "type": "Any"
            },
            "class": "PKObject",
            "module": "PKObject"
        },
        {
            "file": "framework/pk-object.js",
            "line": 294,
            "description": "Add a listener to a specific tag. The listener will receive three\n paramters whenever the tag changes (though they are optional). The tag\n itself doesn't need to exist in order to assign a listener to it.\nThe first parameter is the object for which the tag has been changed.\n The second parameter is the tag being changed, and the third parameter\n is the value of the tag. **Note:** the value has already changed by\n the time the listener is called.",
            "itemtype": "method",
            "name": "addListenerForKey",
            "params": [
                {
                    "name": "theKey",
                    "description": "The tag for which to add a listener; `__default`\n                     is special and refers the default tag visible via\n                     the `tag` property.",
                    "type": "Any"
                },
                {
                    "name": "theListener",
                    "description": "the function (or reference) to call\n                    when the value changes.",
                    "type": "Function"
                }
            ],
            "class": "PKObject",
            "module": "PKObject"
        },
        {
            "file": "framework/pk-object.js",
            "line": 320,
            "description": "Removes a listener from being notified when a tag changes.",
            "itemtype": "method",
            "name": "removeTagListenerForKey",
            "params": [
                {
                    "name": "theKey",
                    "description": "the tag from which to remove the listener; `__default`\n                     is special and refers to the default tag visible via\n                     the `tag` property.",
                    "type": "Any"
                },
                {
                    "name": "theListener",
                    "description": "the function (or reference) to remove.",
                    "type": "Function"
                }
            ],
            "class": "PKObject",
            "module": "PKObject"
        },
        {
            "file": "framework/pk-object.js",
            "line": 339,
            "description": "Sets the value for the simple tag (`__default`). Any listeners attached\n to `__default` will be notified.",
            "itemtype": "method",
            "name": "setTag",
            "params": [
                {
                    "name": "theValue",
                    "description": "the value for the tag",
                    "type": "Any"
                }
            ],
            "class": "PKObject",
            "module": "PKObject"
        },
        {
            "file": "framework/pk-object.js",
            "line": 352,
            "description": "Returns the value for the given tag (`__default`). If the tag has never been\n set, the result is undefined.",
            "itemtype": "method",
            "name": "getTag",
            "return": {
                "description": "the value of the tag.",
                "type": "Any"
            },
            "class": "PKObject",
            "module": "PKObject"
        },
        {
            "file": "framework/pk-object.js",
            "line": 364,
            "description": "The default tag for the instance. Changing the tag itself (not any sub-properties of an object)\n will notify any listeners attached to `__default`.",
            "itemtype": "property",
            "name": "tag",
            "type": "Any",
            "class": "PKObject",
            "module": "PKObject"
        },
        {
            "file": "framework/pk-object.js",
            "line": 376,
            "description": "All objects subject notifications for events",
            "class": "PKObject",
            "module": "PKObject"
        },
        {
            "file": "framework/pk-object.js",
            "line": 382,
            "description": "Supports notification listeners.",
            "access": "private",
            "tagname": "",
            "itemtype": "property",
            "name": "_notificationListeners",
            "type": "Object",
            "class": "PKObject",
            "module": "PKObject"
        },
        {
            "file": "framework/pk-object.js",
            "line": 389,
            "description": "Adds a listener for a notification. If a notification has not been\nregistered (via `registerNotification`), an error is logged on the console\nand the function returns without attaching the listener. This means if\nyou aren't watching the console, the function fails nearly silently.\n\n> By default, no notifications are registered.",
            "itemtype": "method",
            "name": "addListenerForNotification",
            "params": [
                {
                    "name": "theNotification",
                    "description": "the name of the notification",
                    "type": "String"
                },
                {
                    "name": "theListener",
                    "description": "the function (or reference) to be called when the\n                               notification is triggered.",
                    "type": "Function"
                }
            ],
            "class": "PKObject",
            "module": "PKObject"
        },
        {
            "file": "framework/pk-object.js",
            "line": 412,
            "description": "Removes a listener from a notification. If a notification has not been\nregistered (via `registerNotification`), an error is logged on the console\nand the function returns without attaching the listener. This means if\nyou aren't watching the console, the function fails nearly silently.\n\n> By default, no notifications are registered.",
            "itemtype": "method",
            "name": "removeListenerForNotification",
            "params": [
                {
                    "name": "theNotification",
                    "description": "the notification",
                    "type": "String"
                },
                {
                    "name": "theListener",
                    "description": "The function or reference to remove",
                    "type": "Function"
                }
            ],
            "class": "PKObject",
            "module": "PKObject"
        },
        {
            "file": "framework/pk-object.js",
            "line": 437,
            "description": "Registers a notification so that listeners can then be attached. Notifications\nshould be registered as soon as possible, otherwise listeners may attempt to\nattach to a notification that isn't registered.",
            "itemtype": "method",
            "name": "registerNotification",
            "params": [
                {
                    "name": "theNotification",
                    "description": "the name of the notification.",
                    "type": "String"
                }
            ],
            "class": "PKObject",
            "module": "PKObject"
        },
        {
            "file": "framework/pk-object.js",
            "line": 450,
            "description": "Notifies all listeners of a particular notification that the notification\nhas been triggered. If the notification hasn't been registered via \n`registerNotification`, an error is logged to the console, but the function\nitself returns silently, so be sure to watch the console for errors.",
            "itemtype": "method",
            "name": "notify",
            "params": [
                {
                    "name": "theNotification",
                    "description": "the notification to trigger",
                    "type": "String"
                }
            ],
            "class": "PKObject",
            "module": "PKObject"
        },
        {
            "file": "framework/pk-object.js",
            "line": 475,
            "description": "//http://stackoverflow.com/a/11462081\nfunction clone(obj){\n    var clonedObjectsArray = [];\n    var originalObjectsArray = []; //used to remove the unique ids when finished\n    var next_objid = 0;\n\n    function objectId(obj) {\n        if (obj == null) return null;\n        if (obj.__obj_id == undefined){\n            obj.__obj_id = next_objid++;\n            originalObjectsArray[obj.__obj_id] = obj;\n        }\n        return obj.__obj_id;\n    }\n\n    function cloneRecursive(obj) {\n        if (null == obj || typeof obj == \"string\" || typeof obj == \"number\" || typeof obj == \"boolean\") return obj;\n\n        // Handle Date\n        if (obj instanceof Date) {\n            var copy = new Date();\n            copy.setTime(obj.getTime());\n            return copy;\n        }\n\n        // Handle Array\n        if (obj instanceof Array) {\n            var copy = [];\n            for (var i = 0; i < obj.length; ++i) {\n                copy[i] = cloneRecursive(obj[i]);\n            }\n            return copy;\n        }\n\n        // Handle Object\n        if (obj instanceof Object) {\n            if (clonedObjectsArray[objectId(obj)] != undefined)\n                return clonedObjectsArray[objectId(obj)];\n\n            var copy;\n            if (obj instanceof Function)//Handle Function\n                copy = function(){return obj.apply(this, arguments);};\n            else\n                copy = {};\n\n            clonedObjectsArray[objectId(obj)] = copy;\n\n            for (var attr in obj)\n                if (attr != \"__obj_id\" && obj.hasOwnProperty(attr))\n                    copy[attr] = cloneRecursive(obj[attr]);                 \n\n            return copy;\n        }       \n\n\n        throw new Error(\"Unable to copy obj! Its type isn't supported.\");\n    }\n    var cloneObj = cloneRecursive(obj);\n\n\n\n    //remove the unique ids\n    for (var i = 0; i < originalObjectsArray.length; i++)\n    {\n        delete originalObjectsArray[i].__obj_id;\n    };\n\n    return cloneObj;\n}",
            "class": "PKObject",
            "module": "PKObject"
        },
        {
            "file": "framework/scroller.js",
            "line": 1,
            "description": "SCROLLER\n Author:  Kerri Shotts\n Version: 0.1 alpha\n License: MIT\nThis library is intended to be similar to iScroll-lite in that it should be\n a relatively fast method of scrolling content without being horribly laggy\n or cause incorrect \"clicks\" to be registered.\nThis library does *NOT* support physics-based scrolling, except for a small\n inertia animation at the end of a scroll. It is not intended to replicate\n native scrolling /at all/. There are no bounces at the top or bottom. There\n is no visible scroll bar either. Essentially, overflow:scroll as supported\n on iOS 5 with no bounce/inertia scrolling.\nConsider this library an experiment. The idea is to be simpler than iScroll\n to use -- for example, the scroller only needs to be created once -- it does\n not need to be refreshed when AJAX content loads. It is intended to be at\n least as fast as iScroll, if not a little faster. It is not, however,\n intended to be a native scrolling solution. At this time, I do not believe\n it truly possible or practice, and users will notice any non-native solution\n that tries to match, so why try?\nUsage:\nvar yourScroller = new SCROLLER.GenericScroller ( \"the_element_to_scroll\" );\nwhere you have the following DOM tree:\n    container_element\n     - the_element_to_scroll\nFuture Goals:\n - Detect native physics scrolling and use it when possible\n  - Detect native overflow:scroll (non-physics) and use it when possible\n  - Improve the inertial scrolling at end (this is a very rough implementation)\n  - Become irrelevant. I hope for a day when all mobile browsers can scroll\n    complex content natively and smoothly.\nSupported Platforms:\n - Android 2.3+\n  - iOS 4.3+\n  - probably any webkit browser?\nKnown Issues:\n  - A little too willing to call a scroll a \"click\".",
            "class": "UI",
            "module": "PKObject"
        },
        {
            "file": "framework/scroller.js",
            "line": 107,
            "description": "Attaches the scroller to a new element. The element MUST be contained within\n another element that can support the setting of scrollTop/Left.\nAny overflow values will be overridden. Any webkit transforms may also be\n overridden.",
            "class": "UI",
            "module": "PKObject"
        },
        {
            "file": "framework/scroller.js",
            "line": 148,
            "description": "Get the scroll position",
            "class": "UI",
            "module": "PKObject"
        },
        {
            "file": "framework/scroller.js",
            "line": 161,
            "description": "Scroll to a given location. If the location can't be scrolled to,\n the nearest location will be used.",
            "class": "UI",
            "module": "PKObject"
        },
        {
            "file": "framework/scroller.js",
            "line": 174,
            "description": "touchStart initializes all our values when a touch is received.",
            "class": "UI",
            "module": "PKObject"
        },
        {
            "file": "framework/scroller.js",
            "line": 204,
            "description": "When a touch moves, we'll receive the event here.",
            "class": "UI",
            "module": "PKObject"
        },
        {
            "file": "framework/scroller.js",
            "line": 238,
            "description": "When a finger is lifted from the screen, we'll get this event.\n We can determine whether or not it was a click if we scrolled at all,\n and if we scrolled a certain distance, we'll do a little inertial\n scrolling",
            "class": "UI",
            "module": "PKObject"
        },
        {
            "file": "This provides the basics of the UI model, including poings, rects, and more.",
            "line": 1,
            "description": "UI-BASE",
            "author": "Kerri Shotts",
            "version": "0.3",
            "class": "UI",
            "module": "PKObject"
        },
        {
            "file": "framework/ui-base.js",
            "line": 34,
            "typedef": "{Object} DOMEvent",
            "class": "UI",
            "module": "PKObject"
        },
        {
            "file": "framework/ui-base.js",
            "line": 62,
            "description": "Version of the UI Namespace",
            "itemtype": "property",
            "name": "version",
            "type": "Object",
            "class": "UI",
            "module": "UI"
        },
        {
            "file": "framework/ui-base.js",
            "line": 69,
            "description": "Creates a point. Points are of the form\n `{ x: x, y: y }`",
            "itemtype": "method",
            "name": "makePoint",
            "static": 1,
            "params": [
                {
                    "name": "x",
                    "description": "- the x-coordinate of the point",
                    "type": "Number"
                },
                {
                    "name": "y",
                    "description": "- the y-coordinate of the point",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "a point containing x and y",
                "type": "Point"
            },
            "class": "UI",
            "module": "UI"
        },
        {
            "file": "framework/ui-base.js",
            "line": 85,
            "description": "Creates a copy of a point. You should always copy a point prior\n to modifying its values, otherwise you risk modifying the\n original.",
            "itemtype": "method",
            "name": "copyPoint",
            "static": 1,
            "params": [
                {
                    "name": "point",
                    "description": "- the point to copy",
                    "type": "Point"
                }
            ],
            "return": {
                "description": "a new point, ready for modification",
                "type": "Point"
            },
            "class": "UI",
            "module": "UI"
        },
        {
            "file": "framework/ui-base.js",
            "line": 101,
            "description": "offsets a point by the values in another point. For example,\n if `pointA` = `{ x:100, y:100 }` and `pointB` = `{ x:-5, y:10 }`, the\n returned point will be `{ x:95, y:110 }`.",
            "itemtype": "method",
            "name": "offsetPoint",
            "static": 1,
            "params": [
                {
                    "name": "pointA",
                    "description": "- the point to be offset",
                    "type": "Point"
                },
                {
                    "name": "pointB",
                    "description": "- the offset",
                    "type": "Point"
                }
            ],
            "return": {
                "description": "pointA offset by pointB",
                "type": "Point"
            },
            "class": "UI",
            "module": "UI"
        },
        {
            "file": "framework/ui-base.js",
            "line": 119,
            "description": "Creates a size of the form `{ w: width, h: height}`",
            "itemtype": "method",
            "name": "makeSize",
            "static": 1,
            "params": [
                {
                    "name": "w",
                    "description": "- Width portion of a size",
                    "type": "Number"
                },
                {
                    "name": "h",
                    "description": "- Height portion of a size",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "a size comprised of the specified width and height.",
                "type": "Size"
            },
            "class": "UI",
            "module": "UI"
        },
        {
            "file": "framework/ui-base.js",
            "line": 134,
            "description": "Creates a size from a point.",
            "itemtype": "method",
            "name": "makeSizeFromPoint",
            "static": 1,
            "params": [
                {
                    "name": "point",
                    "description": "- the point to create a size from",
                    "type": "Point"
                }
            ],
            "return": {
                "description": "a size based on the x,y coordinates within the point.",
                "type": "Size"
            },
            "class": "UI",
            "module": "UI"
        },
        {
            "file": "framework/ui-base.js",
            "line": 148,
            "description": "Extracts the size from the rect.",
            "itemtype": "method",
            "name": "sizeFromRect",
            "static": 1,
            "params": [
                {
                    "name": "rect",
                    "description": "- the rectange from which to extract the size",
                    "type": "Rect"
                }
            ],
            "return": {
                "description": "a size based on the size of the rect.",
                "type": "Size"
            },
            "class": "UI",
            "module": "UI"
        },
        {
            "file": "framework/ui-base.js",
            "line": 162,
            "description": "Copies a size object. You should always copy a size before\n modifying a size, else you risk modifying the original size.",
            "itemtype": "method",
            "name": "copySize",
            "static": 1,
            "params": [
                {
                    "name": "size",
                    "description": "- the size to copy",
                    "type": "Size"
                }
            ],
            "return": {
                "description": "a duplicate of the size, ready for modification",
                "type": "Size"
            },
            "class": "UI",
            "module": "UI"
        },
        {
            "file": "framework/ui-base.js",
            "line": 177,
            "description": "Offsets a size by another size.",
            "itemtype": "method",
            "name": "offsetSize",
            "static": 1,
            "params": [
                {
                    "name": "sizeA",
                    "description": "- the size to offset",
                    "type": "Size"
                },
                {
                    "name": "sizeB",
                    "description": "- the offset",
                    "type": "Size"
                }
            ],
            "return": {
                "description": "sizeA offset by sizeB",
                "type": "Size"
            },
            "class": "UI",
            "module": "UI"
        },
        {
            "file": "framework/ui-base.js",
            "line": 193,
            "description": "Creates a rect of the form `{ origin: point, size: size }`\n which expands to \n `{ origin: {x: x, y: y}, size: {w: width, h: height} }`",
            "itemtype": "method",
            "name": "makeRect",
            "static": 1,
            "params": [
                {
                    "name": "origin",
                    "description": "- the x,y origin of the rect",
                    "type": "Point"
                },
                {
                    "name": "size",
                    "description": "- the width,height of the rect",
                    "type": "Size"
                }
            ],
            "return": {
                "description": "a rectangle originating at origin with the specified size",
                "type": "Rect"
            },
            "class": "UI",
            "module": "UI"
        },
        {
            "file": "framework/ui-base.js",
            "line": 211,
            "description": "Duplicates a rect, returning a rect suitable for modification. You should\n always copy a rect prior to modifying the contents, else you risk\n modifying the original.",
            "itemtype": "method",
            "name": "copyRect",
            "static": 1,
            "params": [
                {
                    "name": "rect",
                    "description": "- the rect to be copied",
                    "type": "Rect"
                }
            ],
            "return": {
                "description": "a duplicate of the specified rect, suitable for modification",
                "type": "Rect"
            },
            "class": "UI",
            "module": "UI"
        },
        {
            "file": "framework/ui-base.js",
            "line": 228,
            "description": "Offsets a rect's origin point by the supplied point.",
            "itemtype": "method",
            "name": "offsetRectByPoint",
            "static": 1,
            "params": [
                {
                    "name": "rectA",
                    "description": "- the rect to be offset",
                    "type": "Rect"
                },
                {
                    "name": "pointB",
                    "description": "- the offset",
                    "type": "Point"
                }
            ],
            "return": {
                "description": "rectA offset by pointB",
                "type": "Rect"
            },
            "class": "UI",
            "module": "UI"
        },
        {
            "file": "framework/ui-base.js",
            "line": 244,
            "description": "Offsets a rect's origin by the origin of the second rect,\n and offsets the rect's size by the size of the second rect.\n> This implies that the second rect does not need to be \"real\",\n > as in, it can have negative sizes and such.",
            "itemtype": "method",
            "name": "offsetRectByRect",
            "static": 1,
            "params": [
                {
                    "name": "rectA",
                    "description": "- the rect to be offset",
                    "type": "Rect"
                },
                {
                    "name": "rectB",
                    "description": "- the offset",
                    "type": "Rect"
                }
            ],
            "return": {
                "description": "a duplicate of rectA offset by rectB.",
                "type": "Rect"
            },
            "class": "UI",
            "module": "UI"
        },
        {
            "file": "framework/ui-base.js",
            "line": 265,
            "description": "Returns true if the two rects supplied intersect. Note that this\n will not work if the rectangles are non-canonical.",
            "itemtype": "method",
            "name": "doRectsIntersect",
            "static": 1,
            "params": [
                {
                    "name": "rectA",
                    "description": "- the first rect",
                    "type": "Rect"
                },
                {
                    "name": "rectB",
                    "description": "- the second rect",
                    "type": "Rect"
                }
            ],
            "return": {
                "description": "true if the rects intersect",
                "type": "Boolean"
            },
            "class": "UI",
            "module": "UI"
        },
        {
            "file": "framework/ui-base.js",
            "line": 297,
            "description": "Returns a zero point of {0,0}",
            "itemtype": "method",
            "name": "zeroPoint",
            "static": 1,
            "return": {
                "description": "",
                "type": "Point"
            },
            "class": "UI",
            "module": "UI"
        },
        {
            "file": "framework/ui-base.js",
            "line": 308,
            "description": "Returns a zero size of {0,0}",
            "itemtype": "method",
            "name": "zeroSize",
            "static": 1,
            "return": {
                "description": "",
                "type": "Size"
            },
            "class": "UI",
            "module": "UI"
        },
        {
            "file": "framework/ui-base.js",
            "line": 319,
            "description": "Returns a zero rect of { {0,0}, {0,0} }",
            "itemtype": "method",
            "name": "zerRect",
            "static": 1,
            "return": {
                "description": "",
                "type": "Rect"
            },
            "class": "UI",
            "module": "UI"
        },
        {
            "file": "framework/ui-base.js",
            "line": 330,
            "description": "returns a **point** representing the size of the screen (or browser).",
            "itemtype": "method",
            "name": "screenSize",
            "static": 1,
            "return": {
                "description": "",
                "type": "Point"
            },
            "class": "UI",
            "module": "UI"
        },
        {
            "file": "framework/ui-base.js",
            "line": 341,
            "description": "returns a **rect** representing the size of the screen (with a {0,0} origin).",
            "itemtype": "method",
            "name": "screenBounds",
            "static": 1,
            "return": {
                "description": "",
                "type": "Rect"
            },
            "class": "UI",
            "module": "UI"
        },
        {
            "file": "framework/ui-base.js",
            "line": 352,
            "description": "Creates a font.",
            "itemtype": "method",
            "name": "makeFont",
            "static": 1,
            "params": [
                {
                    "name": "theFontFamily",
                    "description": "- the font family (as you would specify it in CSS)",
                    "type": "String"
                },
                {
                    "name": "theFontSize",
                    "description": "- the pixel size of the desired font",
                    "type": "Number"
                },
                {
                    "name": "theFontWeight",
                    "description": "- the weight of the font (as specified by CSS)",
                    "type": "String",
                    "optional": true,
                    "optdefault": "\"normal\""
                }
            ],
            "return": {
                "description": "A font object.",
                "type": "Font"
            },
            "class": "UI",
            "module": "UI"
        },
        {
            "file": "framework/ui-base.js",
            "line": 371,
            "description": "Copies a font, making it suitable for modification.",
            "itemtype": "method",
            "name": "copyFont",
            "static": 1,
            "params": [
                {
                    "name": "theFont",
                    "description": "- the font to duplicate",
                    "type": "Font"
                }
            ],
            "return": {
                "description": "a duplication of theFont, suitable for modification",
                "type": "Font"
            },
            "class": "UI",
            "module": "UI"
        },
        {
            "file": "framework/ui-base.js",
            "line": 385,
            "description": "Copies a font, specifying a new size in the process.",
            "itemtype": "method",
            "name": "copyFontWithNewSize",
            "static": 1,
            "params": [
                {
                    "name": "theFont",
                    "description": "- the font to copy",
                    "type": "Font"
                },
                {
                    "name": "theNewSize",
                    "description": "- the new size, in pixels, of the font",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "a duplication of theFont, but with a new size",
                "type": "Font"
            },
            "class": "UI",
            "module": "UI"
        },
        {
            "file": "framework/ui-base.js",
            "line": 400,
            "description": "Copies a font, specifying a delta for the new font size.",
            "itemtype": "method",
            "name": "copyFontWithNewSizeDelta",
            "static": 1,
            "params": [
                {
                    "name": "theFont",
                    "description": "- the font to copy",
                    "type": "Font"
                },
                {
                    "name": "theNewSizeDelta",
                    "description": "- the amount by which to modify the size (in pixels)",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "a duplication of theFont, adjusted by theNewSizeDelta",
                "type": "Font"
            },
            "class": "UI",
            "module": "UI"
        },
        {
            "file": "framework/ui-base.js",
            "line": 415,
            "description": "Copies a font, specifying a percentage for the new size. A value of 1.00 will keep\n the size the same; while 1.25 would increase the size and 0.75 would decrease the\n size.",
            "itemtype": "method",
            "name": "copyFontWithPercentSize",
            "static": 1,
            "params": [
                {
                    "name": "theFont",
                    "description": "- the font to copy",
                    "type": "Font"
                },
                {
                    "name": "theNewSizeDelta",
                    "description": "- the amount by which to multiply the size",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "a duplicate of theFont, with the size multiplied by theNewSizeDelta",
                "type": "Font"
            },
            "class": "UI",
            "module": "UI"
        },
        {
            "file": "framework/ui-base.js",
            "line": 432,
            "description": "Applies a font to an element. If theFont is null, the values used\n are the CSS \"inherit\" properties.",
            "access": "private",
            "tagname": "",
            "itemtype": "method",
            "name": "_applyFontToElement",
            "static": 1,
            "params": [
                {
                    "name": "theElement",
                    "description": "- the DOM element the to which the font is applied",
                    "type": "DOMElement"
                },
                {
                    "name": "theFont",
                    "description": "- the font to apply",
                    "type": "Font"
                }
            ],
            "class": "UI",
            "module": "UI"
        },
        {
            "file": "framework/ui-base.js",
            "line": 467,
            "description": "Returns a system font, specific to the platform. Use this when attempting to \n match the platform's default font.",
            "itemtype": "method",
            "name": "systemFont",
            "static": 1,
            "return": {
                "description": "",
                "type": "Font"
            },
            "class": "UI.FONT",
            "module": "UI",
            "namespace": "UI"
        },
        {
            "file": "framework/ui-base.js",
            "line": 487,
            "description": "Returns a bolded system font, specific to the platform.",
            "itemtype": "method",
            "name": "boldSystemFont",
            "static": 1,
            "return": {
                "description": "a bolded version of {@link UI.FONT.systemFont}",
                "type": "Font"
            },
            "class": "UI.FONT",
            "module": "UI",
            "namespace": "UI"
        },
        {
            "file": "framework/ui-base.js",
            "line": 505,
            "description": "Creates a shadow for use as text or box shadows.",
            "itemtype": "method",
            "name": "makeShadow",
            "static": 1,
            "params": [
                {
                    "name": "theVisibility",
                    "description": "- indicates the visibility of the shadow.",
                    "type": "Boolean"
                },
                {
                    "name": "theColor",
                    "description": "- the color of the shadow.",
                    "type": "Color"
                },
                {
                    "name": "theOffset",
                    "description": "- the shadow offset",
                    "type": "Point"
                },
                {
                    "name": "theBlur",
                    "description": "- the amount to blur the shadow (can be zero, but not negative)",
                    "type": "Number"
                },
                {
                    "name": "theSpread",
                    "description": "- the amount of spread to use (box shadows only, can be zero, but not negative)",
                    "type": "Number"
                },
                {
                    "name": "theType",
                    "description": "- specify \"inset\" for inset box shadows, otherwise omit or make null.",
                    "type": "String",
                    "optional": true
                }
            ],
            "return": {
                "description": "",
                "type": "Shadow"
            },
            "class": "UI",
            "module": "UI",
            "namespace": "UI"
        },
        {
            "file": "framework/ui-base.js",
            "line": 525,
            "description": "Copies a shadow and makes it suitable for modification. Always copy a shadow prior to modification,\n otherwise you risk modifying the original.",
            "itemtype": "method",
            "name": "copyShadow",
            "static": 1,
            "params": [
                {
                    "name": "theShadow",
                    "description": "- the shadow to be copied",
                    "type": "Shadow"
                }
            ],
            "return": {
                "description": "the duplicated shadow, suitable for modificaiton",
                "type": "Shadow"
            },
            "class": "UI",
            "module": "UI",
            "namespace": "UI"
        },
        {
            "file": "framework/ui-base.js",
            "line": 540,
            "description": "applies a shadow to an element's text. If the shadow is null or invisible, the \"inherit\"\n CSS is applied. If the shadow's color is null, the shadow will be transparent.\n**Note:** the shadow's spread, if not 0 is ignored, since text shadows don't support spread.",
            "access": "private",
            "tagname": "",
            "itemtype": "method",
            "name": "_applyShadowToElementAsTextShadow",
            "static": 1,
            "params": [
                {
                    "name": "theElement",
                    "description": "- the DOM element to which to apply the shadow",
                    "type": "DOMElement"
                },
                {
                    "name": "theShadow",
                    "description": "- the shadow to apply",
                    "type": "Shadow"
                }
            ],
            "class": "UI",
            "module": "UI",
            "namespace": "UI"
        },
        {
            "file": "framework/ui-base.js",
            "line": 575,
            "description": "applies a shadow to an element. If the shadow is null or invisible, the \"inherit\"\n CSS is applied. If the shadow's color is null, the shadow will be transparent.",
            "access": "private",
            "tagname": "",
            "itemtype": "method",
            "name": "_shadowToBoxShadow",
            "static": 1,
            "params": [
                {
                    "name": "theElement",
                    "description": "- the DOM element to which to apply the shadow",
                    "type": "DOMElement"
                },
                {
                    "name": "theShadow",
                    "description": "- the shadow to apply",
                    "type": "Shadow"
                }
            ],
            "class": "UI",
            "module": "UI",
            "namespace": "UI"
        },
        {
            "file": "framework/ui-base.js",
            "line": 616,
            "description": "Returns a default dark shadow, depending on the platform. Some platforms return an\n invisible shadow, since they tend not to use text shadows.",
            "itemtype": "method",
            "name": "defaultDarkShadow",
            "static": 1,
            "return": {
                "description": "",
                "type": "Shadow"
            },
            "class": "UI.SHADOW",
            "module": "UI",
            "namespace": "UI"
        },
        {
            "file": "framework/ui-base.js",
            "line": 634,
            "description": "Returns a default light shadow, depending on the platform. Some platforms return an\n invisible shadow, since they tend not to use text shadows.",
            "itemtype": "method",
            "name": "lightDarkShadow",
            "static": 1,
            "return": {
                "description": "",
                "type": "Shadow"
            },
            "class": "UI.SHADOW",
            "module": "UI",
            "namespace": "UI"
        },
        {
            "file": "framework/ui-base.js",
            "line": 656,
            "description": "Converts a color object to an rgba(r,g,b,a) string, suitable for applying to\n any number of CSS styles. If the color's alpha is zero, the return value is\n \"transparent\". If the color is null, the return value is \"inherit\".",
            "access": "private",
            "tagname": "",
            "itemtype": "method",
            "name": "_colorToRGBA",
            "static": 1,
            "params": [
                {
                    "name": "theColor",
                    "description": "- theColor to convert.",
                    "type": "Color"
                }
            ],
            "return": {
                "description": "a CSS value suitable for color properties",
                "type": "String"
            },
            "class": "UI",
            "module": "UI",
            "namespace": "UI"
        },
        {
            "file": "framework/ui-base.js",
            "line": 683,
            "description": "Creates a color object of the form `{red:r, green:g, blue:b, alpha:a}`.",
            "itemtype": "method",
            "name": "makeColor",
            "static": 1,
            "params": [
                {
                    "name": "r",
                    "description": "- red component (0-255)",
                    "type": "Number"
                },
                {
                    "name": "g",
                    "description": "- green component (0-255)",
                    "type": "Number"
                },
                {
                    "name": "b",
                    "description": "- blue component (0-255)",
                    "type": "Number"
                },
                {
                    "name": "a",
                    "description": "- alpha component (0.0-1.0)",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "",
                "type": "Color"
            },
            "class": "UI",
            "module": "UI",
            "namespace": "UI"
        },
        {
            "file": "framework/ui-base.js",
            "line": 700,
            "description": "Copies a color and returns it suitable for modification. You should copy\n colors prior to modification, otherwise you risk modifying the original.",
            "itemtype": "method",
            "name": "copyColor",
            "static": 1,
            "params": [
                {
                    "name": "theColor",
                    "description": "- the color to be duplicated",
                    "type": "Color"
                }
            ],
            "return": {
                "description": "a duplicate color ready to be modified",
                "type": "Color"
            },
            "class": "UI",
            "module": "UI",
            "namespace": "UI"
        },
        {
            "file": "framework/ui-base.js",
            "line": 722,
            "itemtype": "method",
            "name": "blackColor",
            "return": {
                "description": "a black color.",
                "type": "Color"
            },
            "class": "UI.COLOR",
            "module": "UI",
            "namespace": "UI"
        },
        {
            "file": "framework/ui-base.js",
            "line": 727,
            "itemtype": "method",
            "name": "darkGrayColor",
            "return": {
                "description": "a dark gray color.",
                "type": "Color"
            },
            "class": "UI.COLOR",
            "module": "UI",
            "namespace": "UI"
        },
        {
            "file": "framework/ui-base.js",
            "line": 732,
            "itemtype": "method",
            "name": "GrayColor",
            "return": {
                "description": "a gray color.",
                "type": "Color"
            },
            "class": "UI.COLOR",
            "module": "UI",
            "namespace": "UI"
        },
        {
            "file": "framework/ui-base.js",
            "line": 737,
            "itemtype": "method",
            "name": "lightGrayColor",
            "return": {
                "description": "a light gray color.",
                "type": "Color"
            },
            "class": "UI.COLOR",
            "module": "UI",
            "namespace": "UI"
        },
        {
            "file": "framework/ui-base.js",
            "line": 742,
            "itemtype": "method",
            "name": "whiteColor",
            "return": {
                "description": "a white color.",
                "type": "Color"
            },
            "class": "UI.COLOR",
            "module": "UI",
            "namespace": "UI"
        },
        {
            "file": "framework/ui-base.js",
            "line": 747,
            "itemtype": "method",
            "name": "blueColor",
            "return": {
                "description": "a blue color.",
                "type": "Color"
            },
            "class": "UI.COLOR",
            "module": "UI",
            "namespace": "UI"
        },
        {
            "file": "framework/ui-base.js",
            "line": 752,
            "itemtype": "method",
            "name": "greenColor",
            "return": {
                "description": "a green color.",
                "type": "Color"
            },
            "class": "UI.COLOR",
            "module": "UI",
            "namespace": "UI"
        },
        {
            "file": "framework/ui-base.js",
            "line": 757,
            "itemtype": "method",
            "name": "redColor",
            "return": {
                "description": "a red color.",
                "type": "Color"
            },
            "class": "UI.COLOR",
            "module": "UI",
            "namespace": "UI"
        },
        {
            "file": "framework/ui-base.js",
            "line": 762,
            "itemtype": "method",
            "name": "cyanColor",
            "return": {
                "description": "a cyan color.",
                "type": "Color"
            },
            "class": "UI.COLOR",
            "module": "UI",
            "namespace": "UI"
        },
        {
            "file": "framework/ui-base.js",
            "line": 767,
            "itemtype": "method",
            "name": "yellowColor",
            "return": {
                "description": "a yellow color.",
                "type": "Color"
            },
            "class": "UI.COLOR",
            "module": "UI",
            "namespace": "UI"
        },
        {
            "file": "framework/ui-base.js",
            "line": 772,
            "itemtype": "method",
            "name": "magentaColor",
            "return": {
                "description": "a magenta color.",
                "type": "Color"
            },
            "class": "UI.COLOR",
            "module": "UI",
            "namespace": "UI"
        },
        {
            "file": "framework/ui-base.js",
            "line": 777,
            "itemtype": "method",
            "name": "orangeColor",
            "return": {
                "description": "a orange color.",
                "type": "Color"
            },
            "class": "UI.COLOR",
            "module": "UI",
            "namespace": "UI"
        },
        {
            "file": "framework/ui-base.js",
            "line": 782,
            "itemtype": "method",
            "name": "purpleColor",
            "return": {
                "description": "a purple color.",
                "type": "Color"
            },
            "class": "UI.COLOR",
            "module": "UI",
            "namespace": "UI"
        },
        {
            "file": "framework/ui-base.js",
            "line": 787,
            "itemtype": "method",
            "name": "brownColor",
            "return": {
                "description": "a brown color.",
                "type": "Color"
            },
            "class": "UI.COLOR",
            "module": "UI",
            "namespace": "UI"
        },
        {
            "file": "framework/ui-base.js",
            "line": 792,
            "itemtype": "method",
            "name": "lightTextColor",
            "return": {
                "description": "a light text color suitable for display on dark backgrounds.",
                "type": "Color"
            },
            "class": "UI.COLOR",
            "module": "UI",
            "namespace": "UI"
        },
        {
            "file": "framework/ui-base.js",
            "line": 797,
            "itemtype": "method",
            "name": "darkTextColor",
            "return": {
                "description": "a dark text color suitable for display on light backgrounds.",
                "type": "Color"
            },
            "class": "UI.COLOR",
            "module": "UI",
            "namespace": "UI"
        },
        {
            "file": "framework/ui-base.js",
            "line": 802,
            "itemtype": "method",
            "name": "clearColor",
            "return": {
                "description": "a transparent color.",
                "type": "Color"
            },
            "class": "UI.COLOR",
            "module": "UI",
            "namespace": "UI"
        },
        {
            "file": "framework/ui-base.js",
            "line": 811,
            "description": "Makes an image object. The options object can contain any of the following\n properties: repeat (default \"no-repeat\"), position (\"top left\"), sizing\n (\"\"), and imageType (\"url\"). Repeat can be \"repeat-x\",\"repeat-y\",\"reepat\" or\n \"no-repeat\". Position is a CSS position. Sizing can be empty, \"contain\" or\n \"cover\". imageType specifies if the image is a \"url\" asset or something\n else (like a \"gradient\").",
            "itemtype": "method",
            "name": "makeImage",
            "static": 1,
            "params": [
                {
                    "name": "thePathToTheImage",
                    "description": "- the relative or absolute path to the image",
                    "type": "String"
                },
                {
                    "name": "theImageSize",
                    "description": "- the size of the image as it should appear logically;\n                              if an image should be displayed with retina quality,\n                              the physical pixels would be 64x64 whereas the size\n                              would be {32,32}.",
                    "type": "Size"
                },
                {
                    "name": "options",
                    "description": "- options for the image. These are all optional, but useful.",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "",
                "type": "Image"
            },
            "class": "UI",
            "module": "UI",
            "namespace": "UI"
        },
        {
            "file": "framework/ui-base.js",
            "line": 858,
            "description": "Copies an image and returns it suitable for modification. You should always\n duplicate an image prior to modification or you risk modifying the original.",
            "itemtype": "method",
            "name": "copyImage",
            "static": 1,
            "params": [
                {
                    "name": "theImage",
                    "description": "- the image to be copied",
                    "type": "Image"
                }
            ],
            "return": {
                "description": "a duplicate image, suitable for modification",
                "type": "Image"
            },
            "class": "UI",
            "module": "UI",
            "namespace": "UI"
        },
        {
            "file": "framework/ui-base.js",
            "line": 874,
            "description": "Applies an image to the background of a DOMElement. If the image type\n as \"url\", the image is assumed to be a graphic asset, but if it is\n some other value, the backgroundImage property is assigned the\n image property directly (say, as a gradient).\nIf sizing is specified, it is used over any specific size. If a size\n is specified, but no sizing, it is used (and should be understood as\n logical pixels). Any one component of a size that is -1 will be\n converted to \"auto\".",
            "access": "private",
            "tagname": "",
            "itemtype": "method",
            "name": "_applyImageToElemnt",
            "static": 1,
            "params": [
                {
                    "name": "theElement",
                    "description": "- the DOM Element to apply the image to",
                    "type": "DOMElement"
                },
                {
                    "name": "theImage",
                    "description": "- the image to appy",
                    "type": "Image"
                }
            ],
            "class": "UI",
            "module": "UI",
            "namespace": "UI"
        },
        {
            "file": "framework/ui-base.js",
            "line": 931,
            "description": "Creates a linear gradient image that can be used wherever images are used.",
            "itemtype": "method",
            "name": "makeLinearGradientImage",
            "static": 1,
            "params": [
                {
                    "name": "gradientOrigin",
                    "description": "- the CSS origin of the gradient (like top, left, etc.)",
                    "type": "String"
                },
                {
                    "name": "colorStops",
                    "description": "- a series of color stops, each one of the form {color: color, position: position} where\n                             position is optional. The position is a CSS position (like 0%,50%,100%).",
                    "type": "Array"
                }
            ],
            "return": {
                "description": "an image with the specified gradient.",
                "type": "Image"
            },
            "class": "UI",
            "module": "UI",
            "namespace": "UI"
        },
        {
            "file": "framework/ui-base.js",
            "line": 957,
            "description": "Creates a simple linear gradient that can be used wherever images are used. Unlike\n {@link UI.makeLinearGradientImage}, only two color stops and positions are used.",
            "itemtype": "method",
            "name": "makeSimpleLinearGradientImage",
            "static": 1,
            "params": [
                {
                    "name": "gradientOrigin",
                    "description": "- the CSS origin of the gradient (like top, left, etc.)",
                    "type": "String"
                },
                {
                    "name": "color1",
                    "description": "- the color for the first stop",
                    "type": "Color"
                },
                {
                    "name": "color1Position",
                    "description": "- the position for the first stop (or null if the default is acceptable)",
                    "type": "String"
                },
                {
                    "name": "color2",
                    "description": "- the color for the second stop",
                    "type": "Color"
                },
                {
                    "name": "color2Position",
                    "description": "- the position for the second stop (or null)",
                    "type": "String"
                }
            ],
            "class": "UI",
            "module": "UI",
            "namespace": "UI"
        },
        {
            "file": "framework/ui-base.js",
            "line": 976,
            "description": "Creates a border for a (generic) side.",
            "itemtype": "method",
            "name": "makeBorderForSide",
            "static": 1,
            "params": [
                {
                    "name": "theBorderColor",
                    "description": "- the color for the borde",
                    "type": "Color"
                },
                {
                    "name": "theBorderStyle",
                    "description": "- a CSS border style",
                    "type": "String",
                    "optional": true,
                    "optdefault": "\"inherit\""
                },
                {
                    "name": "theBorderStrokeWidth",
                    "description": "- the number of pixels for the border stroke\nreturns {Object} a Border Side",
                    "type": "Number",
                    "optional": true,
                    "optdefault": "\"inherit\""
                }
            ],
            "class": "UI",
            "module": "UI",
            "namespace": "UI"
        },
        {
            "file": "framework/ui-base.js",
            "line": 995,
            "description": "Copies a border for a side; always copy before modification, or you risk\n modifying the original.",
            "itemtype": "method",
            "name": "copyBorderForSide",
            "static": 1,
            "params": [
                {
                    "name": "theBorderForSide",
                    "description": "- the border side to copy",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "a copied Border side",
                "type": "Object"
            },
            "class": "UI",
            "module": "UI",
            "namespace": "UI"
        },
        {
            "file": "framework/ui-base.js",
            "line": 1009,
            "description": "Creates a border for applicatiom to DOM Elements.\nThe borders are specified with the top-level color, style, and width parameters (all optional)\n can be applied to all sides, but a specific property (in the top, left, right, bottom) borders\n will override any top-level property. Any property not specified will be given a suitable\n default.\nThe borderRadii object specifies the specific border radii (topLeftBorderRadius, topRightBorderRadius,\n bottomLeftBorderRadius, bottomRightBorderRadius), but if any are missing, borderRadius will be used\n instead. If that property is not defined, \"inherit\" is used.",
            "itemtype": "method",
            "name": "makeBorder",
            "static": 1,
            "params": [
                {
                    "name": "borders",
                    "description": "- an object that specifies the borders, for all sides, and for each side",
                    "type": "Object"
                },
                {
                    "name": "borderRadii",
                    "description": "- an object that specifies the border radii",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "a border",
                "type": "Border"
            },
            "class": "UI",
            "module": "UI",
            "namespace": "UI"
        },
        {
            "file": "framework/ui-base.js",
            "line": 1058,
            "description": "Copies a border for modification. Always copy borders prior to modifying them, else you\n risk modifying the original.",
            "itemtype": "method",
            "name": "copyBorder",
            "static": 1,
            "params": [
                {
                    "name": "borders",
                    "description": "- the border to duplicate",
                    "type": "Border"
                }
            ],
            "return": {
                "description": "",
                "type": "Border"
            },
            "class": "UI",
            "module": "UI",
            "namespace": "UI"
        },
        {
            "file": "framework/ui-base.js",
            "line": 1075,
            "description": "Applies a border to an element.",
            "access": "private",
            "tagname": "",
            "itemtype": "method",
            "name": "_applyBorderToElement",
            "static": 1,
            "params": [
                {
                    "name": "theElement",
                    "description": "- the DOM element to which to apply the border",
                    "type": "DOMElement"
                },
                {
                    "name": "theBorder",
                    "description": "- the border to apply",
                    "type": "Borde"
                }
            ],
            "class": "UI",
            "module": "UI",
            "namespace": "UI"
        },
        {
            "file": "framework/ui-base.js",
            "line": 1130,
            "description": "Creates an event object from a DOM event.\nThe event returned contains all the touches from the DOM event in an array of {x,y} objects.\n The event also contains the first touch as x,y properties and the average of all touches\n as avgX,avgY. If no touches are in the event, these values will be -1.",
            "itemtype": "method",
            "name": "makeEvent",
            "static": 1,
            "params": [
                {
                    "name": "e",
                    "description": "- the DOM event",
                    "type": "DOMEvent"
                }
            ],
            "return": {
                "description": "",
                "type": "Event"
            },
            "class": "UI",
            "module": "UI",
            "namespace": "UI"
        },
        {
            "file": "framework/ui-base.js",
            "line": 1182,
            "description": "Cancels an event that's been created using {@link UI.makeEvent}.",
            "itemtype": "method",
            "name": "cancelEvent",
            "static": 1,
            "params": [
                {
                    "name": "e",
                    "description": "- the event to cancel",
                    "type": "Event"
                }
            ],
            "class": "UI",
            "module": "UI",
            "namespace": "UI"
        },
        {
            "file": "framework/ui-core.js",
            "line": 1,
            "description": "UI-CORE\n Author: Kerri Shotts\nThis script provides a lot of the core user interface framework, such as\n loading content via AJAX, transitions, and more.",
            "class": "UI.Label",
            "module": "UI",
            "namespace": "UI"
        },
        {
            "file": "framework/ui-core.js",
            "line": 84,
            "description": "Global back button handler, since doing it per-view and per-\n message is buggy. This will call backButtonPressed() on any\n active message or view. If said method isn't found, it will\n pop the view on its own.\nNOTE: if backButtonPressed() is defined, it is expected to\n pop the view, if the method is also a view. If the view is\n not popped, the back button will have no effect.\nSECOND NOTE: Since back buttons received in quick succession\n are problematic, we force the user to wait 1s before the next\n back button is accepted.",
            "class": "UI.Label",
            "module": "UI",
            "namespace": "UI"
        },
        {
            "file": "framework/ui-core.js",
            "line": 129,
            "description": "Initializes the application framework\n  - in this version of the framework, we force an orientation update.\n  - by default, we attach a global back button handler\n  - we deisable animations and transforms for Android and WP7.",
            "class": "UI.Label",
            "module": "UI",
            "namespace": "UI"
        },
        {
            "file": "framework/ui-core.js",
            "line": 177,
            "description": "Called on first-start and whenever the orientation changes. It updates the\n body's class to reflect the device, formfactor, orientation, and scaling.",
            "class": "UI.Label",
            "module": "UI",
            "namespace": "UI"
        },
        {
            "file": "framework/ui-core.js",
            "line": 261,
            "description": "Shows a view and pushes it on the viewStack. NO ANIMATION.\n DOES NOT PROPERLY CALL viewWillHide/viewDidHide of any view, since there\n may be no view visible.",
            "class": "UI.Label",
            "module": "UI",
            "namespace": "UI"
        },
        {
            "file": "framework/ui-core.js",
            "line": 288,
            "description": "Hides a view and pops it off the viewStack. NO ANIMATION.\n DOES NOT ATTEMPT TO CALL viewWillShow or viewDidShow of any view\n on the stack, as there may not be any view visible.",
            "class": "UI.Label",
            "module": "UI",
            "namespace": "UI"
        },
        {
            "file": "framework/ui-core.js",
            "line": 314,
            "description": "Swaps a view on the stack with the desired view. NO ANIMATION.",
            "class": "UI.Label",
            "module": "UI",
            "namespace": "UI"
        },
        {
            "file": "framework/ui-core.js",
            "line": 505,
            "description": "Shows a view WITH ANIMATION and pushes it onto the view stack.\n The animation is a slide from right to left.",
            "class": "UI.Label",
            "module": "UI",
            "namespace": "UI"
        },
        {
            "file": "framework/ui-core.js",
            "line": 664,
            "description": "Hides a view WITH ANIMATION and pops it from the stack.",
            "class": "UI.Label",
            "module": "UI",
            "namespace": "UI"
        },
        {
            "file": "framework/ui-core.js",
            "line": 924,
            "description": "Applies touch listeners to various items in the dom.\nIn this version of the framework, we apply it to BUTTONs.",
            "class": "UI.Label",
            "module": "UI",
            "namespace": "UI"
        },
        {
            "file": "framework/ui-gestures.js",
            "line": 1,
            "description": "UI-GESTURES\n Author:  Kerri Shotts\n Version: 0.1 alpha\n License: MIT\nA simple, no-frills gesture recognizer. Permits long-press recognition,\n horizontal swipe recognition, and vertical swipe recognition. Recognizing\n swipes in a particular direction (left, right, up, down) should be easy to\n add later.\nThe SimpleGesture class represents the basic recognizer -- it implements all\n the tracking of touch and mouse events. Every 100ms it calls\n a recognition function, which by default does nothing. Essentially, Simple-\n Gesture is abstract. This method is expected to be overridden by a specific\n recognizer, which the LongPressGesture, HorizontalSwipeGesture, and\n VerticalSwipeGesture do.\nThe LongPressGesture will fire off an event when a longpress is recognized.\n How this is recognized is partially defined by the caller -- that is,\n two durations can be supplied. By default, the long-press is recognized at\n 1s and cancelled at 3s (assuming no previous recognition). It is also\n cancelled should any movement outside of a 25px radius occur.\nThe HorizontalSwipeGesture and VerticalSwipeGesture will fire off an event\n when a swipe in the given axis is detected. This swipe is detected when the\n length of the swipe exceeds 75px (or the provided override), and will be\n fired as long as the duration of the swipe is less than the cancel duration\n (3s by default). The line must not deviate by more than 25px in the specified\n axis, or the gesture will fail to be recognized.\nUsage:\nvar anElement = document.getElementById(\"abc\");\n var aLongPressGesture = new GESTURES.LongPressGesture\n                             ( anElement, theFunctionToCallWhenRecognized,\n                               [ thePressDuration, [ theCancelDelay ]] );\nvar aHorizontalSwipeGesture = new GESTURES.HorizontalSwipeGesture\n                               ( anElement, theFunctionToCallWhenRecognized,\n                                 [ theSwipeLength, [ theCancelDelay ]] );\nvar aVerticalSwipeGesture = new GESTURES.VerticalSwipeGesture\n                             ( anElement, theFunctionToCallWhenRecognized,\n                               [ theSwipeLength, [ theCancelDelay ]] );\n\nWhere: anElement is an HTML DOM element\n        theFunctionToCallWhenRecognized is a function that will be called\n            when the gesture is recognized. It will be passed the recognizer,\n            and as such, one can store & retrieve data in this manner:\n                aLongPressGesture.data = \"Hello\";\n                 function theFunctionToCallWhenRecognized ( gr )\n                 { alert (gr.data); }\n           This will generate an alert of \"Hello\" when the element is long-\n            pressed.\n       thePressDuration: Optional, defaults to 1s. The amount of time required\n            to recognize a long-press.\n        theSwipeLength: Optional, defaults to 75px. The length of a swipe\n            required to recognize a swipe.\n        theCancelDelay: Optional, defaults to 3s. If a gesture is not recognized\n            prior to this delay, the gesture is cancelled, that is, it will\n            never be recognized.",
            "class": "UI.Label",
            "module": "UI",
            "namespace": "UI"
        },
        {
            "file": "framework/ui-label.js",
            "line": 47,
            "description": "Fires when the text is changed in the label.",
            "itemtype": "event",
            "name": "textDidChange",
            "class": "UI.Label",
            "module": "UI.Label"
        },
        {
            "file": "framework/ui-label.js",
            "line": 52,
            "description": "Fires when the text color is changed in the label.",
            "itemtype": "event",
            "name": "textColorDidChange",
            "class": "UI.Label",
            "module": "UI.Label"
        },
        {
            "file": "framework/ui-label.js",
            "line": 57,
            "description": "Fires when the text shadow is changed in the label.",
            "itemtype": "event",
            "name": "textShadowDidChange",
            "class": "UI.Label",
            "module": "UI.Label"
        },
        {
            "file": "framework/ui-label.js",
            "line": 62,
            "description": "Fires when the text alignment is changed in the label.",
            "itemtype": "event",
            "name": "textAlignmentDidChange",
            "class": "UI.Label",
            "module": "UI.Label"
        },
        {
            "file": "framework/ui-label.js",
            "line": 67,
            "description": "Fires when the font is changed in the label.",
            "itemtype": "event",
            "name": "fontDidChange",
            "class": "UI.Label",
            "module": "UI.Label"
        },
        {
            "file": "framework/ui-label.js",
            "line": 87,
            "description": "The text to display.",
            "access": "private",
            "tagname": "",
            "itemtype": "property",
            "name": "_text",
            "default": "\"\"",
            "type": "String",
            "class": "UI.Label",
            "module": "UI.Label"
        },
        {
            "file": "framework/ui-label.js",
            "line": 95,
            "description": "The text alignment.",
            "access": "private",
            "tagname": "",
            "itemtype": "property",
            "name": "_textAlignment",
            "default": "\"\"",
            "type": "String",
            "class": "UI.Label",
            "module": "UI.Label"
        },
        {
            "file": "framework/ui-label.js",
            "line": 103,
            "description": "The text color; if `null` the color is given as `inherit`.",
            "access": "private",
            "tagname": "",
            "itemtype": "property",
            "name": "_textColor",
            "default": "\"\"",
            "type": "String",
            "class": "UI.Label",
            "module": "UI.Label"
        },
        {
            "file": "framework/ui-label.js",
            "line": 111,
            "description": "The text shadow; if `null`, `inherit`.",
            "access": "private",
            "tagname": "",
            "itemtype": "property",
            "name": "_textShadow",
            "default": "\"\"",
            "type": "String",
            "class": "UI.Label",
            "module": "UI.Label"
        },
        {
            "file": "framework/ui-label.js",
            "line": 119,
            "description": "The font for the text. If `null`, `inherit`.",
            "access": "private",
            "tagname": "",
            "itemtype": "property",
            "name": "_font",
            "default": "\"\"",
            "type": "String",
            "class": "UI.Label",
            "module": "UI.Label"
        },
        {
            "file": "framework/ui-label.js",
            "line": 128,
            "description": "Returns the text for the label.",
            "itemtype": "method",
            "name": "getText",
            "return": {
                "description": "",
                "type": "String"
            },
            "class": "UI.Label",
            "module": "UI.Label"
        },
        {
            "file": "framework/ui-label.js",
            "line": 134,
            "description": "Returns the text alignmentfor the label.",
            "itemtype": "method",
            "name": "getTextAlignment",
            "return": {
                "description": "",
                "type": "String"
            },
            "class": "UI.Label",
            "module": "UI.Label"
        },
        {
            "file": "framework/ui-label.js",
            "line": 140,
            "description": "Returns the text color for the label.",
            "itemtype": "method",
            "name": "getTextColor",
            "return": {
                "description": "",
                "type": "Color"
            },
            "class": "UI.Label",
            "module": "UI.Label"
        },
        {
            "file": "framework/ui-label.js",
            "line": 146,
            "description": "Returns the text shadow for the label.",
            "itemtype": "method",
            "name": "getTextShadow",
            "return": {
                "description": "",
                "type": "Shadow"
            },
            "class": "UI.Label",
            "module": "UI.Label"
        },
        {
            "file": "framework/ui-label.js",
            "line": 152,
            "description": "Returns the font for the label.",
            "itemtype": "method",
            "name": "getFont",
            "return": {
                "description": "",
                "type": "Font"
            },
            "class": "UI.Label",
            "module": "UI.Label"
        },
        {
            "file": "framework/ui-label.js",
            "line": 159,
            "description": "The text for the label. If changed, `textDidChange` is fired.",
            "itemtype": "property",
            "name": "text",
            "type": "String",
            "default": "\"\"",
            "class": "UI.Label",
            "module": "UI.Label"
        },
        {
            "file": "framework/ui-label.js",
            "line": 167,
            "description": "The textAlignment for the label. If changed, `textAlignmentDidChange` is fired.\n\nValid values are `left`, `center`, `right`.",
            "itemtype": "property",
            "name": "textAlignment",
            "type": "String",
            "default": "\"inherit\"",
            "class": "UI.Label",
            "module": "UI.Label"
        },
        {
            "file": "framework/ui-label.js",
            "line": 177,
            "description": "The text color for the label. If changed, `textColorDidChange` is fired.",
            "itemtype": "property",
            "name": "textColor",
            "type": "color",
            "default": "null",
            "class": "UI.Label",
            "module": "UI.Label"
        },
        {
            "file": "framework/ui-label.js",
            "line": 185,
            "description": "The text shadow for the label. If changed, `textShadowDidChange` is fired.",
            "itemtype": "property",
            "name": "textShadow",
            "type": "shadow",
            "default": "null",
            "class": "UI.Label",
            "module": "UI.Label"
        },
        {
            "file": "framework/ui-label.js",
            "line": 193,
            "description": "The font for the label. If changed, `fontDidChange` is fired.",
            "itemtype": "property",
            "name": "font",
            "type": "font",
            "default": "null",
            "class": "UI.Label",
            "module": "UI.Label"
        },
        {
            "file": "framework/ui-label.js",
            "line": 202,
            "description": "Sets the text for the label. Fires `textDidChange`.\n\n> Since `innerHTML` is set on the DOM element, the text can contain\n> HTML and other elements.",
            "itemtype": "method",
            "name": "setText",
            "params": [
                {
                    "name": "theText",
                    "description": "",
                    "type": "String"
                }
            ],
            "class": "UI.Label",
            "module": "UI.Label"
        },
        {
            "file": "framework/ui-label.js",
            "line": 222,
            "description": "Sets the text color for the label. Fires `textColorDidChange`.",
            "itemtype": "method",
            "name": "setTextColor",
            "params": [
                {
                    "name": "theTextColor",
                    "description": "",
                    "type": "Color"
                }
            ],
            "class": "UI.Label",
            "module": "UI.Label"
        },
        {
            "file": "framework/ui-label.js",
            "line": 235,
            "description": "Sets the text alignment for the label. Fires `textAlignmentDidChange`.",
            "itemtype": "method",
            "name": "setTextAlignment",
            "params": [
                {
                    "name": "theTextAlignment",
                    "description": "`left`, `center`, `right`, `inherit`",
                    "type": "String"
                }
            ],
            "class": "UI.Label",
            "module": "UI.Label"
        },
        {
            "file": "framework/ui-label.js",
            "line": 251,
            "description": "Sets the text shadow for the label. Fires `textShadowDidChange`.",
            "itemtype": "method",
            "name": "setTextShadow",
            "params": [
                {
                    "name": "theTextShadow",
                    "description": "",
                    "type": "Shadow"
                }
            ],
            "class": "UI.Label",
            "module": "UI.Label"
        },
        {
            "file": "framework/ui-label.js",
            "line": 264,
            "description": "Sets the font for the label. Fires `fontDidChange`.",
            "itemtype": "method",
            "name": "setFont",
            "params": [
                {
                    "name": "theFont",
                    "description": "",
                    "type": "Font"
                }
            ],
            "class": "UI.Label",
            "module": "UI.Label"
        },
        {
            "file": "framework/ui-label.js",
            "line": 301,
            "description": "Initializes the view by calling `init` and then sets all the options in the `options` object.",
            "itemtype": "method",
            "name": "initWithOptions",
            "params": [
                {
                    "name": "options",
                    "description": "the options. Each property that is supported by the view is also\n                        supported in this object. The idea is to simplify initialization code\n                        just a little.",
                    "type": "Object"
                }
            ],
            "class": "UI.Label",
            "module": "UI.Label"
        },
        {
            "file": "framework/ui-msg.js",
            "line": 1,
            "description": "UI-MSG\n Author: Kerri Shotts\nThis script provides a mechanism by which alerts, prompts, and confirmations\n can be displayed to the end user.",
            "class": "UI.View",
            "module": "UI.Label"
        },
        {
            "file": "framework/ui-view.js",
            "line": 49,
            "description": "Fired when the bounds of the view has changed. Note that if the frame changes, but the\nsize of the view does *not* change, this notification is not changed.",
            "itemtype": "event",
            "name": "boundsDidChange",
            "class": "UI.View",
            "module": "UI.View"
        },
        {
            "file": "framework/ui-view.js",
            "line": 55,
            "description": "Fired when the frame of the view has changed. Note that this event will also be fired\nwhen the bounds change, since they inherently affect the frame.Note\nthat this doesn't get fired when sub-properties are changed, only when the object\nitself is assigned.",
            "itemtype": "event",
            "name": "frameDidChange",
            "class": "UI.View",
            "module": "UI.View"
        },
        {
            "file": "framework/ui-view.js",
            "line": 63,
            "description": "Fired when the background color has changed. Note\nthat this doesn't get fired when sub-properties are changed, only when the object\nitself is assigned.",
            "itemtype": "event",
            "name": "backgroundColorDidChange",
            "class": "UI.View",
            "module": "UI.View"
        },
        {
            "file": "framework/ui-view.js",
            "line": 70,
            "description": "Fired when the background image has changed. (This includes gradients, etc.). Note\nthat this doesn't get fired when sub-properties are changed, only when the object\nitself is assigned.",
            "itemtype": "event",
            "name": "backgroundImageDidChange",
            "class": "UI.View",
            "module": "UI.View"
        },
        {
            "file": "framework/ui-view.js",
            "line": 77,
            "description": "Fired when the border has changed. Note that this isn't changed when the *size*\nof the view changes, only when the border itself is assigned. Furthermore,\nit won't be fired when any sub-properties change in the border: to trigger\nthe event, one *must* copy the border and re-assign it.",
            "itemtype": "event",
            "name": "borderDidChange",
            "class": "UI.View",
            "module": "UI.View"
        },
        {
            "file": "framework/ui-view.js",
            "line": 85,
            "description": "Fired when the opacity has changed.",
            "itemtype": "event",
            "name": "opacityDidChange",
            "class": "UI.View",
            "module": "UI.View"
        },
        {
            "file": "framework/ui-view.js",
            "line": 90,
            "description": "Fired when the shadow has changed. Note\nthat this doesn't get fired when sub-properties are changed, only when the object\nitself is assigned.",
            "itemtype": "event",
            "name": "shadowDidChange",
            "class": "UI.View",
            "module": "UI.View"
        },
        {
            "file": "framework/ui-view.js",
            "line": 97,
            "description": "Fired when the visibility has changed.",
            "itemtype": "event",
            "name": "visibilityDidChange",
            "class": "UI.View",
            "module": "UI.View"
        },
        {
            "file": "framework/ui-view.js",
            "line": 102,
            "description": "Fired when the view is about to appear.",
            "itemtype": "event",
            "name": "viewWillAppear",
            "class": "UI.View",
            "module": "UI.View"
        },
        {
            "file": "framework/ui-view.js",
            "line": 107,
            "description": "Fired when the view has appeared.",
            "itemtype": "event",
            "name": "viewDidAppear",
            "class": "UI.View",
            "module": "UI.View"
        },
        {
            "file": "framework/ui-view.js",
            "line": 112,
            "description": "Fired when the view will disappear.",
            "itemtype": "event",
            "name": "viewWillDisappear",
            "class": "UI.View",
            "module": "UI.View"
        },
        {
            "file": "framework/ui-view.js",
            "line": 117,
            "description": "Fired when the view has disappeared",
            "itemtype": "event",
            "name": "viewDidDisappear",
            "class": "UI.View",
            "module": "UI.View"
        },
        {
            "file": "framework/ui-view.js",
            "line": 122,
            "description": "Fired when the view has finished initializing itself. By the time\nthis notification is received, it is safe to use various methods\nand properties that act on the view's DOM element.",
            "itemtype": "event",
            "name": "viewDidInit",
            "class": "UI.View",
            "module": "UI.View"
        },
        {
            "file": "framework/ui-view.js",
            "line": 129,
            "description": "Fired when the view is marked interactive and has been tapped. No\nevent information is passed.",
            "itemtype": "event",
            "name": "tapped",
            "class": "UI.View",
            "module": "UI.View"
        },
        {
            "file": "framework/ui-view.js",
            "line": 135,
            "description": "Fired when the view is marked interactive and a touch event has started. No\nevent information is passed.",
            "itemtype": "event",
            "name": "touchStarted",
            "class": "UI.View",
            "module": "UI.View"
        },
        {
            "file": "framework/ui-view.js",
            "line": 141,
            "description": "Fired when the view is marked interactive and a touch has moved. No\nevent information is passed.",
            "itemtype": "event",
            "name": "touchMoved",
            "class": "UI.View",
            "module": "UI.View"
        },
        {
            "file": "framework/ui-view.js",
            "line": 147,
            "description": "Fired when the view is marked interactive and a touch event has ended. No\nevent information is passed.",
            "itemtype": "event",
            "name": "touchEnded",
            "class": "UI.View",
            "module": "UI.View"
        },
        {
            "file": "framework/ui-view.js",
            "line": 160,
            "description": "Stores a reference to the view's DOM representation. It is not initialized\nuntil the `init` method is finished. Once that is finished, the DOM Element\nwill be an element with the same tagname as the object's class. For a UI.View,\nthe tag name will be \"UIView\". The class will also be \"UIView\".",
            "access": "private",
            "tagname": "",
            "itemtype": "property",
            "name": "_element",
            "type": "DOMElement",
            "default": "null",
            "class": "UI.View",
            "module": "UI.View"
        },
        {
            "file": "framework/ui-view.js",
            "line": 177,
            "description": "Represents the list of all views that belong to this view.",
            "access": "private",
            "tagname": "",
            "itemtype": "property",
            "name": "_subViews",
            "type": "Array",
            "default": "empty",
            "class": "UI.View",
            "module": "UI.View"
        },
        {
            "file": "framework/ui-view.js",
            "line": 187,
            "description": "Represents the superView (parent view).",
            "access": "private",
            "tagname": "",
            "itemtype": "property",
            "name": "_superView",
            "type": "View",
            "default": "null",
            "class": "UI.View",
            "module": "UI.View"
        },
        {
            "file": "framework/ui-view.js",
            "line": 196,
            "description": "Add a view to the list of this view's subviews. Doing so makes the view's\nDOM element a child of this view's DOM element, but there is no guarantee\nof order. (That is, the representation of the DOM element's children may not\nbe in the same order as the subViews array.) The view's `superView` is also\nset to this view instance.\n\n> The behavior is undefined if the *same* view is added more than once.",
            "itemtype": "method",
            "name": "addSubView",
            "params": [
                {
                    "name": "theView",
                    "description": "the view to add",
                    "type": "View"
                }
            ],
            "class": "UI.View",
            "module": "UI.View"
        },
        {
            "file": "framework/ui-view.js",
            "line": 216,
            "description": "Removes a subview from the list of this view's subviews. Doing so removes\nthe view as a child of this view's DOM element, and sets `superView` to \nnull.\n\n> The behavior is undefined if the view hasn't already been added.",
            "itemtype": "method",
            "name": "removeSubView",
            "params": [
                {
                    "name": "theView",
                    "description": "the view to remove",
                    "type": "View"
                }
            ],
            "class": "UI.View",
            "module": "UI.View"
        },
        {
            "file": "framework/ui-view.js",
            "line": 234,
            "description": "Removes this view from its superview. Doing so removes this view\nfrom it's prior parent's DOM Elemnt and sets `superView` to null.",
            "itemtype": "method",
            "name": "removeFromSuperView",
            "class": "UI.View",
            "module": "UI.View"
        },
        {
            "file": "framework/ui-view.js",
            "line": 244,
            "description": "Returns all the subViews in an array.",
            "itemtype": "method",
            "name": "getSubViews",
            "return": {
                "description": "all the subviews.",
                "type": "Array"
            },
            "class": "UI.View",
            "module": "UI.View"
        },
        {
            "file": "framework/ui-view.js",
            "line": 254,
            "description": "Return the super view",
            "itemtype": "method",
            "name": "getSuperView",
            "return": {
                "description": "the parent view",
                "type": "View"
            },
            "class": "UI.View",
            "module": "UI.View"
        },
        {
            "file": "framework/ui-view.js",
            "line": 264,
            "description": "The array of subviews. **Read-Only**",
            "itemtype": "property",
            "name": "subViews",
            "type": "Array",
            "default": "empty",
            "class": "UI.View",
            "module": "UI.View"
        },
        {
            "file": "framework/ui-view.js",
            "line": 271,
            "description": "The parent view. **Read-Only**",
            "itemtype": "property",
            "name": "superView",
            "type": "View",
            "default": "null",
            "class": "UI.View",
            "module": "UI.View"
        },
        {
            "file": "framework/ui-view.js",
            "line": 284,
            "description": "Represents the bounds of the view. Keep in mind that if the view's DOM element\nhas various other styles that might affect the visible bounds, this may not\naccurately reflect the visual representation.",
            "access": "private",
            "tagname": "",
            "itemtype": "property",
            "name": "_bounds",
            "type": "rect",
            "default": "zeroRect",
            "class": "UI.View",
            "module": "UI.View"
        },
        {
            "file": "framework/ui-view.js",
            "line": 295,
            "description": "Represents the frame of the view. Keep in mind that it may not accurately\nreflect the DOM element's actual frame (due to various CSS styles that may\nbe applied).",
            "access": "private",
            "tagname": "",
            "itemtype": "property",
            "name": "_frame",
            "type": "rect",
            "default": "zeroRect",
            "class": "UI.View",
            "module": "UI.View"
        },
        {
            "file": "framework/ui-view.js",
            "line": 306,
            "description": "Returns the bounds of the view. Keep in mind that it may not accurately\nreflect the DOM element's actual bounds (due to various CSS styles that may\nbe applied).",
            "itemtype": "method",
            "name": "getBounds",
            "return": {
                "description": "",
                "type": "Rect"
            },
            "class": "UI.View",
            "module": "UI.View"
        },
        {
            "file": "framework/ui-view.js",
            "line": 318,
            "description": "Sets the bounds of the view. \n\nTriggers `boundsDidChange` and `frameDidChange`.",
            "itemtype": "property",
            "name": "newBounds",
            "type": "Rect",
            "class": "UI.View",
            "module": "UI.View"
        },
        {
            "file": "framework/ui-view.js",
            "line": 340,
            "description": "Represents the frame of the view. Keep in mind that it may not accurately\nreflect the DOM element's actual frame (due to various CSS styles that may\nbe applied).",
            "itemtype": "method",
            "name": "getFrame",
            "return": {
                "description": "",
                "type": "Rect"
            },
            "class": "UI.View",
            "module": "UI.View"
        },
        {
            "file": "framework/ui-view.js",
            "line": 352,
            "description": "Set the frame of the view. Adjusts the bounds if necessary.\n\nTriggers `frameDidChange`, and `boundsDidChange` only if the bounds\nneeded to be adjusted.",
            "itemtype": "method",
            "name": "setFrame",
            "params": [
                {
                    "name": "newFrame",
                    "description": "",
                    "type": "Rect"
                }
            ],
            "class": "UI.View",
            "module": "UI.View"
        },
        {
            "file": "framework/ui-view.js",
            "line": 375,
            "description": "Represents the bounds of the view. Keep in mind that it may not accurately\nreflect the DOM element's actual frame (due to various CSS styles that may\nbe applied). Setting the bounds of the view will adjust the frame.\n\nTriggers `frameDidChange` and and `boundsDidChange` whenever the bounds are changed, and `boundsDidChange`",
            "itemtype": "property",
            "name": "bounds",
            "type": "rect",
            "default": "zeroRect",
            "class": "UI.View",
            "module": "UI.View"
        },
        {
            "file": "framework/ui-view.js",
            "line": 388,
            "description": "Represents the frame of the view. Keep in mind that it may not accurately\nreflect the DOM element's actual frame (due to various CSS styles that may\nbe applied). Setting the frame of the view will adjust the bounds if necessary.\n\nTriggers `frameDidChange` whenever the frame is changed, and `boundsDidChange` only if the bounds actuallly\nchange.",
            "itemtype": "property",
            "name": "frame",
            "type": "rect",
            "default": "zeroRect",
            "class": "UI.View",
            "module": "UI.View"
        },
        {
            "file": "framework/ui-view.js",
            "line": 404,
            "description": "Indicates if the view should use the GPU for compositing.",
            "access": "private",
            "tagname": "",
            "itemtype": "property",
            "name": "_useGPU",
            "type": "boolean",
            "default": "false",
            "class": "UI.View",
            "module": "UI.View"
        },
        {
            "file": "framework/ui-view.js",
            "line": 413,
            "description": "Indicates if the view should use the GPU for positioning the view. Requires\nthat `_useGPU` is `true`.",
            "access": "private",
            "tagname": "",
            "itemtype": "property",
            "name": "_useGPUForPositioning",
            "type": "boolean",
            "default": "false",
            "class": "UI.View",
            "module": "UI.View"
        },
        {
            "file": "framework/ui-view.js",
            "line": 423,
            "description": "Returns whether or not the view is using the GPU for compositing. If `true`,\nthe view is using the GPU (if available) for compositing. If `false`, it isn't.",
            "itemtype": "method",
            "name": "getUseGPU",
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "UI.View",
            "module": "UI.View"
        },
        {
            "file": "framework/ui-view.js",
            "line": 434,
            "description": "Returns whether the view is using the GPU for positioning. If `true`,\nthe view is using the GPU (if available, and getUseGPU is `true`),\notherwise it is not.",
            "itemtype": "method",
            "name": "getUseGPUForPositioning",
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "UI.View",
            "module": "UI.View"
        },
        {
            "file": "framework/ui-view.js",
            "line": 446,
            "description": "Sets whether or not the view should use the GPU (if available) for compositing.",
            "itemtype": "method",
            "name": "setUseGPU",
            "parameter": "v {boolean} `true` to use the GPU; `false` to use software compositing.",
            "class": "UI.View",
            "module": "UI.View"
        },
        {
            "file": "framework/ui-view.js",
            "line": 471,
            "description": "Sets whether or not the view should be positioned using the GPU (if available). Een should\nthis value be set to `true`, it only takes effect if the view is also compositing via the\nGPU.",
            "itemtype": "method",
            "name": "setUseGPUForPositioning",
            "params": [
                {
                    "name": "v",
                    "description": "`true` to use the GPU for positioning; `false` to use regular `top`/`left` styling.",
                    "type": "Boolean"
                }
            ],
            "class": "UI.View",
            "module": "UI.View"
        },
        {
            "file": "framework/ui-view.js",
            "line": 500,
            "description": "Determines whether or not to use the GPU for compositing. If changed, the\nDOM element will be updated appropriately.",
            "itemtype": "property",
            "name": "useGPU",
            "type": "boolean",
            "default": "false",
            "class": "UI.View",
            "module": "UI.View"
        },
        {
            "file": "framework/ui-view.js",
            "line": 510,
            "description": "Determines wether or not to use the GPU for positioning. If changed, the DOM\nelement is updated appropriately. `useGPU` must be `true` for it to have\nany effect.",
            "itemtype": "property",
            "name": "useGPUForPositioning",
            "type": "boolean",
            "default": "false",
            "class": "UI.View",
            "module": "UI.View"
        },
        {
            "file": "framework/ui-view.js",
            "line": 522,
            "description": "recalculates the element's position based on\n the frame. It also calls calcElement() for the\n object, if defined. After that, it calls the\n _calcElement for every subview, in case they\n decide to be re-positioned.",
            "access": "private",
            "tagname": "",
            "itemtype": "method",
            "name": "_calcElement",
            "params": [
                {
                    "name": "o",
                    "description": "the object being calc'd",
                    "type": "PKObject"
                },
                {
                    "name": "n",
                    "description": "the notification",
                    "type": "String"
                }
            ],
            "class": "UI.View",
            "module": "UI.View"
        },
        {
            "file": "framework/ui-view.js",
            "line": 559,
            "description": "Calculates the position and size (and other various properties) of the element.\nTo a small degree, this would be like the drawRect() in other native frameworks.\n\n> Override to provide different positioning methods.\n\n> Called automatically when the frame changes.",
            "itemtype": "method",
            "name": "calcElement",
            "class": "UI.View",
            "module": "UI.View"
        },
        {
            "file": "framework/ui-view.js",
            "line": 595,
            "description": "The background color of the view. When null, the background color is applied to the DOM\nelement as `inherit`.",
            "access": "private",
            "tagname": "",
            "itemtype": "property",
            "name": "_backgroundColor",
            "type": "color",
            "default": "null",
            "class": "UI.View",
            "module": "UI.View"
        },
        {
            "file": "framework/ui-view.js",
            "line": 605,
            "description": "Returns the background color, or null if there is no background color set.",
            "itemtype": "method",
            "name": "getBackgroundColor",
            "return": {
                "description": "",
                "type": "Color"
            },
            "class": "UI.View",
            "module": "UI.View"
        },
        {
            "file": "framework/ui-view.js",
            "line": 615,
            "description": "Sets the background color, and fires `backgroundColorDidChange`. If the color\nis null, the DOM element will receive `inherit`",
            "itemtype": "method",
            "name": "setBackgroundColor",
            "params": [
                {
                    "name": "theColor",
                    "description": "",
                    "type": "Color"
                }
            ],
            "class": "UI.View",
            "module": "UI.View"
        },
        {
            "file": "framework/ui-view.js",
            "line": 629,
            "description": "The background color for the view. Changing it will fire `backgroundColorDidChange`.",
            "itemtype": "property",
            "name": "backgroundColor",
            "type": "color",
            "default": "null",
            "class": "UI.View",
            "module": "UI.View"
        },
        {
            "file": "framework/ui-view.js",
            "line": 644,
            "description": "The background image can be a real image or a gradient.",
            "access": "private",
            "tagname": "",
            "itemtype": "property",
            "name": "_backgroundImage",
            "type": "image",
            "default": "null",
            "class": "UI.View",
            "module": "UI.View"
        },
        {
            "file": "framework/ui-view.js",
            "line": 653,
            "description": "returns the background image, if any.",
            "itemtype": "method",
            "name": "getBackgroundImage",
            "return": {
                "description": "",
                "type": "Image"
            },
            "class": "UI.View",
            "module": "UI.View"
        },
        {
            "file": "framework/ui-view.js",
            "line": 663,
            "description": "sets the background image. If `theImage` is `null`, the element will\nbe `inherit` instead. Fires `backgroundImageDidChange`.",
            "itemtype": "method",
            "name": "setBackgroundImage",
            "params": [
                {
                    "name": "theImage",
                    "description": "",
                    "type": "Image"
                }
            ],
            "class": "UI.View",
            "module": "UI.View"
        },
        {
            "file": "framework/ui-view.js",
            "line": 676,
            "description": "The background image of the view, or `null` if none. Changing\nwill fire `backgroundImageDidChange`.",
            "itemtype": "property",
            "name": "backgroundImage",
            "type": "image",
            "default": "null",
            "class": "UI.View",
            "module": "UI.View"
        },
        {
            "file": "framework/ui-view.js",
            "line": 692,
            "description": "The border, if any, for the view.",
            "access": "private",
            "tagname": "",
            "itemtype": "property",
            "name": "_border",
            "type": "border",
            "default": "null",
            "class": "UI.View",
            "module": "UI.View"
        },
        {
            "file": "framework/ui-view.js",
            "line": 701,
            "description": "Returns the border for the view, `null` if no border.",
            "itemtype": "method",
            "name": "getBorder",
            "return": {
                "description": "",
                "type": "Border"
            },
            "class": "UI.View",
            "module": "UI.View"
        },
        {
            "file": "framework/ui-view.js",
            "line": 711,
            "description": "Sets the border of the view. If `null`, the view receives inherited borders. Fires `borderDidChange`.",
            "itemtype": "method",
            "name": "setBorder",
            "params": [
                {
                    "name": "theBorder",
                    "description": "",
                    "type": "Border"
                }
            ],
            "class": "UI.View",
            "module": "UI.View"
        },
        {
            "file": "framework/ui-view.js",
            "line": 725,
            "description": "The border for the view. If changed, fires `borderDidChange`.",
            "itemtype": "property",
            "name": "border",
            "type": "border",
            "default": "null",
            "class": "UI.View",
            "module": "UI.View"
        },
        {
            "file": "framework/ui-view.js",
            "line": 740,
            "description": "Array of shadows for the view.",
            "access": "private",
            "tagname": "",
            "itemtype": "property",
            "name": "_shadows",
            "type": "Array",
            "default": "empty",
            "class": "UI.View",
            "module": "UI.View"
        },
        {
            "file": "framework/ui-view.js",
            "line": 749,
            "description": "Returns all the shadows in an array. If there are no shadows, the\narray will be empty.",
            "itemtype": "method",
            "name": "getShadows",
            "return": {
                "description": "of shadows",
                "type": "Array"
            },
            "class": "UI.View",
            "module": "UI.View"
        },
        {
            "file": "framework/ui-view.js",
            "line": 760,
            "description": "Sets the shadows for the view. `theShadows` must be an Array of shadow\nobjects. Shadows are applied to the DOM element in the order they appear\nin the Array. Calling this method fires `shadowDidChange`.",
            "itemtype": "method",
            "name": "setShadows",
            "params": [
                {
                    "name": "theShadows",
                    "description": "(of shadows)",
                    "type": "Array"
                }
            ],
            "class": "UI.View",
            "module": "UI.View"
        },
        {
            "file": "framework/ui-view.js",
            "line": 784,
            "description": "The shadows for the view. Shadows are applied to the DOM element in the\norder they appear in the array. If the property is set, `shadowDidChange`\nis fired.",
            "itemtype": "property",
            "name": "shadows",
            "type": "Array",
            "default": "empty",
            "class": "UI.View",
            "module": "UI.View"
        },
        {
            "file": "framework/ui-view.js",
            "line": 801,
            "description": "Maintains the visibility state of the object",
            "access": "private",
            "tagname": "",
            "itemtype": "property",
            "name": "_visible",
            "type": "boolean",
            "default": "true",
            "class": "UI.View",
            "module": "UI.View"
        },
        {
            "file": "framework/ui-view.js",
            "line": 809,
            "description": "Returns the visibility of the view.",
            "itemtype": "method",
            "name": "getVisibility",
            "return": {
                "description": "`true` if the view is visible.",
                "type": "Boolean"
            },
            "class": "UI.View",
            "module": "UI.View"
        },
        {
            "file": "framework/ui-view.js",
            "line": 819,
            "description": "Sets the visibility of the view. If the view is appearing, the `viewWillAppear`\nnotification will be fired, followed by a `viewDidAppear`. If the view is\ndisappearing, the `viewWillDisappear` will be fired, followed by a `viewDidDisappear`.\nNo matter what, `visibilityDidChange` will fire.\n\n> The DOM Element will receive a `display: inherit` while visible, to ensure that styling\n> can apply whatever `display` property it wants when the view is visible.",
            "itemtype": "method",
            "name": "setVisibility",
            "params": [
                {
                    "name": "visibility",
                    "description": "`true` to show the view; `false` to hide it.",
                    "type": "Boolean"
                }
            ],
            "class": "UI.View",
            "module": "UI.View"
        },
        {
            "file": "framework/ui-view.js",
            "line": 842,
            "description": "The state of the object's visibility. If `true`, the object is visible. Changing\nthe state will cause the obhect to hide or show, depending upon the assignment.\nIf the view is appearing, the `viewWillAppear`\nnotification will be fired, followed by a `viewDidAppear`. If the view is\ndisappearing, the `viewWillDisappear` will be fired, followed by a `viewDidDisappear`.\nNo matter what, `visibilityDidChange` will fire.\n\n> The DOM Element will receive a `display: inherit` while visible, to ensure that styling\n> can apply whatever `display` property it wants when the view is visible.",
            "itemtype": "property",
            "name": "visible",
            "type": "boolean",
            "default": "true",
            "class": "UI.View",
            "module": "UI.View"
        },
        {
            "file": "framework/ui-view.js",
            "line": 865,
            "description": "Opacity of the view; 1.0 = fully opaque; 0.0 = fully transparent.",
            "access": "private",
            "tagname": "",
            "itemtype": "property",
            "name": "_opacity",
            "type": "Number",
            "default": "1.0",
            "class": "UI.View",
            "module": "UI.View"
        },
        {
            "file": "framework/ui-view.js",
            "line": 874,
            "description": "returns the opacity of the view.",
            "itemtype": "method",
            "name": "getOpacity",
            "return": {
                "description": "",
                "type": "Number"
            },
            "class": "UI.View",
            "module": "UI.View"
        },
        {
            "file": "framework/ui-view.js",
            "line": 884,
            "description": "Sets the opacity of the view. Fires `opacityDidChange`.",
            "itemtype": "method",
            "name": "setOpacity",
            "params": [
                {
                    "name": "opacity",
                    "description": "A number between 0.0 and 1.0",
                    "type": "Number"
                }
            ],
            "class": "UI.View",
            "module": "UI.View"
        },
        {
            "file": "framework/ui-view.js",
            "line": 899,
            "description": "The opacity of the view from 0.0 (transparent) to 1.0 (fully opaque).\nWhen changed, `opacityDidChange` is fired.",
            "itemtype": "property",
            "name": "opacity",
            "type": "Number",
            "default": "1.0",
            "class": "UI.View",
            "module": "UI.View"
        },
        {
            "file": "framework/ui-view.js",
            "line": 915,
            "description": "By default views inherit their scrolling (which is typically overflow:hidden),\nbut they can determine their overflow capability (hidden, auto, scroll).",
            "access": "private",
            "tagname": "",
            "itemtype": "property",
            "name": "_overflow",
            "type": "String",
            "default": "\"inherit\"",
            "class": "UI.View",
            "module": "UI.View"
        },
        {
            "file": "framework/ui-view.js",
            "line": 925,
            "description": "Returns the overflow property; \"inherit\" means that the view inherits its scrolling\ncapability (which is usually overflow:hidden). Valid values are `hidden`, `auto`, `scroll`.",
            "itemtype": "method",
            "name": "getOverflow",
            "return": {
                "description": "",
                "type": "String"
            },
            "class": "UI.View",
            "module": "UI.View"
        },
        {
            "file": "framework/ui-view.js",
            "line": 936,
            "description": "Sets the overflow property; \"inherit\" means that the view inherits its scrolling\ncapability (which is usually overflow:hidden). Valid values are `hidden`, `auto`, `scroll`.",
            "itemtype": "method",
            "name": "setOverflow",
            "params": [
                {
                    "name": "v",
                    "description": "`hidden`, `auto`, `scroll`, `inherit`.",
                    "type": "String"
                }
            ],
            "class": "UI.View",
            "module": "UI.View"
        },
        {
            "file": "framework/ui-view.js",
            "line": 948,
            "description": "The CSS overflow property. \"inherit\" means that the view inherits its scrolling\ncapability (which is usually overflow:hidden). Valid values are `hidden`, `auto`, `scroll`.",
            "itemtype": "property",
            "name": "overflow",
            "type": "String",
            "default": "\"inherit\"",
            "class": "UI.View",
            "module": "UI.View"
        },
        {
            "file": "framework/ui-view.js",
            "line": 964,
            "description": "Called when the view is interactive and a touchStart event has been fired.\nIt will add a `touched` event to the DOM Element's class (for the benefit of\nany CSS), and then indicates the potential for a tap. `touchStarted` will be\nfired and will call `touchStart` with the event if possible.",
            "access": "private",
            "tagname": "",
            "itemtype": "method",
            "name": "_touchStart",
            "params": [
                {
                    "name": "e",
                    "description": "",
                    "type": "DOMEvent"
                }
            ],
            "class": "UI.View",
            "module": "UI.View"
        },
        {
            "file": "framework/ui-view.js",
            "line": 984,
            "description": "Called, if defined, whenever the view receives the start of a touch and is\ninteractive.",
            "optional": 1,
            "itemtype": "method",
            "name": "touchStart",
            "params": [
                {
                    "name": "event",
                    "description": "",
                    "type": "Event"
                }
            ],
            "class": "UI.View",
            "module": "UI.View"
        },
        {
            "file": "framework/ui-view.js",
            "line": 993,
            "description": "Called whenever a touch event moves if the view is interactive. It will\nremove any `touched` class from the DOM element, and then send `touchMoved`\nas a notification. It will clear the tap potential. Finally, if defined,\nit will call `touchMove` with the event.",
            "access": "private",
            "tagname": "",
            "itemtype": "method",
            "name": "_touchMove",
            "params": [
                {
                    "name": "event",
                    "description": "",
                    "type": "DOMEvent"
                }
            ],
            "class": "UI.View",
            "module": "UI.View"
        },
        {
            "file": "framework/ui-view.js",
            "line": 1017,
            "description": "Called whenever the touch moves on the view, if it is interactive.",
            "optional": 1,
            "itemtype": "method",
            "name": "touchMove",
            "params": [
                {
                    "name": "event",
                    "description": "",
                    "type": "Event"
                }
            ],
            "class": "UI.View",
            "module": "UI.View"
        },
        {
            "file": "framework/ui-view.js",
            "line": 1025,
            "description": "Called whenever the touch ends. It removes any `touched` class from the DOM element\nand checks the tap potential. If there's been no movement, it will fire `tapped`.\nNo matter what, `touchEnded` is fired, and then `touchEnd` is called if defined.",
            "access": "private",
            "tagname": "",
            "itemtype": "method",
            "name": "_touchEnd",
            "params": [
                {
                    "name": "e",
                    "description": "",
                    "type": "DOMEvent"
                }
            ],
            "class": "UI.View",
            "module": "UI.View"
        },
        {
            "file": "framework/ui-view.js",
            "line": 1053,
            "description": "Called, if defined, whenever a touch event ends.",
            "itemtype": "method",
            "name": "touchEnd",
            "params": [
                {
                    "name": "event",
                    "description": "",
                    "type": "Event"
                }
            ],
            "class": "UI.View",
            "module": "UI.View"
        },
        {
            "file": "framework/ui-view.js",
            "line": 1060,
            "description": "Stores the state of the view's interactivity.",
            "access": "private",
            "tagname": "",
            "itemtype": "property",
            "name": "_interactive",
            "type": "boolean",
            "default": "false",
            "class": "UI.View",
            "module": "UI.View"
        },
        {
            "file": "framework/ui-view.js",
            "line": 1069,
            "description": "Stores whether or not touch handlers have been added to the DOM element.\nThis ensures that they will only ever be added once.",
            "access": "private",
            "tagname": "",
            "itemtype": "property",
            "name": "_touchHandlersAdded",
            "type": "boolean",
            "default": "false",
            "class": "UI.View",
            "module": "UI.View"
        },
        {
            "file": "framework/ui-view.js",
            "line": 1079,
            "description": "Returns the interactive status of the view. If `true`, the view can be interacted with via touch.",
            "itemtype": "method",
            "name": "getInteractive",
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "UI.View",
            "module": "UI.View"
        },
        {
            "file": "framework/ui-view.js",
            "line": 1089,
            "description": "Sets the interactive status of the view. If `true` is passed, touch handlers are added to the view\nand touch events can be processed. If `false` is passed, touch handlers are removed and touch\nevents are no longer processed.",
            "itemtype": "method",
            "name": "setInteractive",
            "params": [
                {
                    "name": "v",
                    "description": "",
                    "type": "Boolean"
                }
            ],
            "class": "UI.View",
            "module": "UI.View"
        },
        {
            "file": "framework/ui-view.js",
            "line": 1121,
            "description": "Whether or not the view is interactive. If `true`, it is, and touch events will be\ngenerated.",
            "itemtype": "property",
            "name": "interactive",
            "type": "boolean",
            "default": "false",
            "class": "UI.View",
            "module": "UI.View"
        },
        {
            "file": "framework/ui-view.js",
            "line": 1132,
            "description": "Initializes the view by creating the DOM element and setting its class.\n Once complete, the view fires `viewDidInit`\n> `noNotify` should only ever be passed from overridden `init`s. The value\n > in that case should always be `true` in order to prevent multiple \n > `viewDidInit`.",
            "itemtype": "method",
            "name": "init",
            "params": [
                {
                    "name": "noNotify",
                    "description": "",
                    "type": "Boolean",
                    "optional": true
                }
            ],
            "class": "UI.View",
            "module": "UI.View"
        },
        {
            "file": "framework/ui-view.js",
            "line": 1159,
            "description": "Initializes the view by calling `init` and then sets the frame.",
            "itemtype": "method",
            "name": "initWithFrame",
            "params": [
                {
                    "name": "theFrame",
                    "description": "",
                    "type": "Frame"
                }
            ],
            "class": "UI.View",
            "module": "UI.View"
        },
        {
            "file": "framework/ui-view.js",
            "line": 1170,
            "description": "Initializes the view by calling `init` and then sets all the options in the `options` object.",
            "itemtype": "method",
            "name": "initWithOptions",
            "params": [
                {
                    "name": "options",
                    "description": "the options. Each property that is supported by the view is also\n                        supported in this object. The idea is to simplify initialization code\n                        just a little.",
                    "type": "Object"
                }
            ],
            "class": "UI.View",
            "module": "UI.View"
        },
        {
            "file": "framework/utility.js",
            "line": 1,
            "description": "UTILITY\n Author: Kerri Shotts\nThis library includes simple utility functions",
            "class": "",
            "module": "UI.View"
        },
        {
            "file": "framework/utility.js",
            "line": 46,
            "description": "Checks to see if the dependency has already been loaded.",
            "class": "",
            "module": "UI.View"
        },
        {
            "file": "framework/utility.js",
            "line": 105,
            "description": "Returns an element specified by elementId. Similar to (but not exactly like) jQuery's $()",
            "class": "",
            "module": "UI.View"
        },
        {
            "file": "framework/utility.js",
            "line": 115,
            "description": "Returns an element specified by elementId, but with localization. Localization assumes\n you have at least one element of the form <elementId_enus>, and that all other localized\n elements have the locale after the elementId appended with an underscore.\n (eg: thisElementIsLocalized_enus and thisElementIsLocalized_eses)",
            "class": "",
            "module": "UI.View"
        },
        {
            "file": "framework/utility.js",
            "line": 153,
            "description": "Similar to $$. Returns all classes matching a selector.",
            "class": "",
            "module": "UI.View"
        },
        {
            "file": "framework/utility.js",
            "line": 163,
            "description": "Utility function to delay execution of code",
            "class": "",
            "module": "UI.View"
        },
        {
            "file": "framework/utility.js",
            "line": 172,
            "description": "Loads a file or URL and returns it to the completion\n handler. The completion handler must be of the form\n fn(success/failure, data).",
            "params": [
                {
                    "name": "theFileName",
                    "description": "the file or URL to load"
                },
                {
                    "name": "aSync",
                    "description": "if TRUE, load asynchronously"
                },
                {
                    "name": "completion",
                    "description": "completion block"
                }
            ],
            "class": "",
            "module": "UI.View"
        },
        {
            "file": "framework/utility.js",
            "line": 272,
            "description": "Javascript doesn't provide any native include functionality,\n which tends to bloat code and result in long scripts that are\n brittle. Here's our tiny effort to help stem the tide and\n make Javascript just a /little/ nicer.\nNOTE: includes are loaded SYNCHRONOUSLY. This is done as further\n includes may rely upon the one being loaded now. However, it does\n mean that larger files may take longer to process.",
            "class": "",
            "module": "UI.View"
        },
        {
            "file": "framework/utility.js",
            "line": 314,
            "description": "Loads an HTML fragment, creates a DIV, and adds it to the DOM.\n Any script tags inside will be executed.",
            "params": [
                {
                    "name": "theFileName",
                    "description": "the file or URL to laod"
                },
                {
                    "name": "options",
                    "description": "An array of options, as follows:"
                },
                {
                    "name": "aSync",
                    "description": "Determines if the file is loaded\n                                 asynchronously or not."
                },
                {
                    "name": "id",
                    "description": "The ID to attach to the DIV created\n                                 to surround the content."
                },
                {
                    "name": "className",
                    "description": "The class name to attach to the DIV\n                                 created to surround the content."
                },
                {
                    "name": "attachTo",
                    "description": "Indicates the element to append the\n                                 content to. If not specified,\n                                 document.body is used."
                },
                {
                    "name": "completion",
                    "description": "A function called when loading is\n                              complete. Of the form fn ( successOrFailure )\n                              so that success or failure of the load\n                              can be determined."
                }
            ],
            "class": "",
            "module": "UI.View"
        },
        {
            "file": "framework/utility.js",
            "line": 407,
            "description": "Retrieves a JSON string from the specified URL, and executes completion.\n Completion must be of the form ( success, data ).",
            "params": [
                {
                    "name": "theURL",
                    "description": "the URL or Filename"
                },
                {
                    "name": "completion",
                    "description": "function of the from ( success, data )"
                }
            ],
            "class": "",
            "module": "UI.View"
        },
        {
            "file": "framework/utility.js",
            "line": 442,
            "description": "Loads a URL in a popup window. Uses ChildBrowser for PG 2.2.x or\n lower, and in-app browser for 2.3 or higher.",
            "class": "",
            "module": "UI.View"
        },
        {
            "file": "framework/utility.js",
            "line": 476,
            "description": "instanceOfTemplate returns an HTML string ready for insertion into the DOM\n as an instance of the supplied template (templateElement). Any %VAR% are\n replaced by VAR from the replacements object.",
            "class": "",
            "module": "UI.View"
        },
        {
            "file": "framework/utility.js",
            "line": 496,
            "description": "Filename Handling",
            "class": "",
            "module": "UI.View"
        }
    ],
    "warnings": [
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " demo/merges/android/cordova.js:4830"
        },
        {
            "message": "unknown tag: error",
            "line": " demo/merges/android/cordova.js:5228"
        },
        {
            "message": "unknown tag: error",
            "line": " demo/merges/android/cordova.js:5250"
        },
        {
            "message": "unknown tag: error",
            "line": " demo/merges/android/cordova.js:5273"
        },
        {
            "message": "unknown tag: error",
            "line": " demo/merges/android/cordova.js:5305"
        },
        {
            "message": "unknown tag: error",
            "line": " demo/merges/android/cordova.js:5346"
        },
        {
            "message": "unknown tag: error",
            "line": " demo/merges/android/cordova.js:5384"
        },
        {
            "message": "unknown tag: error",
            "line": " demo/merges/android/cordova.js:5414"
        },
        {
            "message": "unknown tag: error",
            "line": " demo/merges/android/cordova.js:5440"
        },
        {
            "message": "unknown tag: error",
            "line": " demo/merges/android/cordova.js:5464"
        },
        {
            "message": "unknown tag: error",
            "line": " demo/merges/android/cordova.js:5492"
        },
        {
            "message": "unknown tag: error",
            "line": " demo/merges/android/cordova.js:5520"
        },
        {
            "message": "unknown tag: error",
            "line": " demo/merges/android/cordova.js:5557"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " demo/merges/ios/cordova.js:4232"
        },
        {
            "message": "unknown tag: error",
            "line": " demo/merges/ios/cordova.js:4630"
        },
        {
            "message": "unknown tag: error",
            "line": " demo/merges/ios/cordova.js:4652"
        },
        {
            "message": "unknown tag: error",
            "line": " demo/merges/ios/cordova.js:4675"
        },
        {
            "message": "unknown tag: error",
            "line": " demo/merges/ios/cordova.js:4707"
        },
        {
            "message": "unknown tag: error",
            "line": " demo/merges/ios/cordova.js:4748"
        },
        {
            "message": "unknown tag: error",
            "line": " demo/merges/ios/cordova.js:4786"
        },
        {
            "message": "unknown tag: error",
            "line": " demo/merges/ios/cordova.js:4816"
        },
        {
            "message": "unknown tag: error",
            "line": " demo/merges/ios/cordova.js:4842"
        },
        {
            "message": "unknown tag: error",
            "line": " demo/merges/ios/cordova.js:4866"
        },
        {
            "message": "unknown tag: error",
            "line": " demo/merges/ios/cordova.js:4894"
        },
        {
            "message": "unknown tag: error",
            "line": " demo/merges/ios/cordova.js:4922"
        },
        {
            "message": "unknown tag: error",
            "line": " demo/merges/ios/cordova.js:4959"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " demo/platforms/android/assets/www/framework/localization.js:103"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " demo/platforms/android/assets/www/framework/localization.js:177"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " demo/platforms/android/assets/www/framework/localization.js:217"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " demo/platforms/android/assets/www/framework/localization.js:241"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " demo/platforms/android/assets/www/framework/localization.js:264"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " demo/platforms/android/assets/www/framework/localization.js:285"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " demo/platforms/android/assets/www/cordova.js:4831"
        },
        {
            "message": "unknown tag: error",
            "line": " demo/platforms/android/assets/www/cordova.js:5229"
        },
        {
            "message": "unknown tag: error",
            "line": " demo/platforms/android/assets/www/cordova.js:5251"
        },
        {
            "message": "unknown tag: error",
            "line": " demo/platforms/android/assets/www/cordova.js:5274"
        },
        {
            "message": "unknown tag: error",
            "line": " demo/platforms/android/assets/www/cordova.js:5306"
        },
        {
            "message": "unknown tag: error",
            "line": " demo/platforms/android/assets/www/cordova.js:5347"
        },
        {
            "message": "unknown tag: error",
            "line": " demo/platforms/android/assets/www/cordova.js:5385"
        },
        {
            "message": "unknown tag: error",
            "line": " demo/platforms/android/assets/www/cordova.js:5415"
        },
        {
            "message": "unknown tag: error",
            "line": " demo/platforms/android/assets/www/cordova.js:5441"
        },
        {
            "message": "unknown tag: error",
            "line": " demo/platforms/android/assets/www/cordova.js:5465"
        },
        {
            "message": "unknown tag: error",
            "line": " demo/platforms/android/assets/www/cordova.js:5493"
        },
        {
            "message": "unknown tag: error",
            "line": " demo/platforms/android/assets/www/cordova.js:5521"
        },
        {
            "message": "unknown tag: error",
            "line": " demo/platforms/android/assets/www/cordova.js:5558"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " demo/platforms/ios/build/YASMFDemoApp.app/www/framework/localization.js:103"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " demo/platforms/ios/build/YASMFDemoApp.app/www/framework/localization.js:177"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " demo/platforms/ios/build/YASMFDemoApp.app/www/framework/localization.js:217"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " demo/platforms/ios/build/YASMFDemoApp.app/www/framework/localization.js:241"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " demo/platforms/ios/build/YASMFDemoApp.app/www/framework/localization.js:264"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " demo/platforms/ios/build/YASMFDemoApp.app/www/framework/localization.js:285"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " demo/platforms/ios/build/YASMFDemoApp.app/www/cordova.js:4232"
        },
        {
            "message": "unknown tag: error",
            "line": " demo/platforms/ios/build/YASMFDemoApp.app/www/cordova.js:4630"
        },
        {
            "message": "unknown tag: error",
            "line": " demo/platforms/ios/build/YASMFDemoApp.app/www/cordova.js:4652"
        },
        {
            "message": "unknown tag: error",
            "line": " demo/platforms/ios/build/YASMFDemoApp.app/www/cordova.js:4675"
        },
        {
            "message": "unknown tag: error",
            "line": " demo/platforms/ios/build/YASMFDemoApp.app/www/cordova.js:4707"
        },
        {
            "message": "unknown tag: error",
            "line": " demo/platforms/ios/build/YASMFDemoApp.app/www/cordova.js:4748"
        },
        {
            "message": "unknown tag: error",
            "line": " demo/platforms/ios/build/YASMFDemoApp.app/www/cordova.js:4786"
        },
        {
            "message": "unknown tag: error",
            "line": " demo/platforms/ios/build/YASMFDemoApp.app/www/cordova.js:4816"
        },
        {
            "message": "unknown tag: error",
            "line": " demo/platforms/ios/build/YASMFDemoApp.app/www/cordova.js:4842"
        },
        {
            "message": "unknown tag: error",
            "line": " demo/platforms/ios/build/YASMFDemoApp.app/www/cordova.js:4866"
        },
        {
            "message": "unknown tag: error",
            "line": " demo/platforms/ios/build/YASMFDemoApp.app/www/cordova.js:4894"
        },
        {
            "message": "unknown tag: error",
            "line": " demo/platforms/ios/build/YASMFDemoApp.app/www/cordova.js:4922"
        },
        {
            "message": "unknown tag: error",
            "line": " demo/platforms/ios/build/YASMFDemoApp.app/www/cordova.js:4959"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " demo/platforms/ios/www/framework/localization.js:103"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " demo/platforms/ios/www/framework/localization.js:177"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " demo/platforms/ios/www/framework/localization.js:217"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " demo/platforms/ios/www/framework/localization.js:241"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " demo/platforms/ios/www/framework/localization.js:264"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " demo/platforms/ios/www/framework/localization.js:285"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " demo/platforms/ios/www/cordova.js:4232"
        },
        {
            "message": "unknown tag: error",
            "line": " demo/platforms/ios/www/cordova.js:4630"
        },
        {
            "message": "unknown tag: error",
            "line": " demo/platforms/ios/www/cordova.js:4652"
        },
        {
            "message": "unknown tag: error",
            "line": " demo/platforms/ios/www/cordova.js:4675"
        },
        {
            "message": "unknown tag: error",
            "line": " demo/platforms/ios/www/cordova.js:4707"
        },
        {
            "message": "unknown tag: error",
            "line": " demo/platforms/ios/www/cordova.js:4748"
        },
        {
            "message": "unknown tag: error",
            "line": " demo/platforms/ios/www/cordova.js:4786"
        },
        {
            "message": "unknown tag: error",
            "line": " demo/platforms/ios/www/cordova.js:4816"
        },
        {
            "message": "unknown tag: error",
            "line": " demo/platforms/ios/www/cordova.js:4842"
        },
        {
            "message": "unknown tag: error",
            "line": " demo/platforms/ios/www/cordova.js:4866"
        },
        {
            "message": "unknown tag: error",
            "line": " demo/platforms/ios/www/cordova.js:4894"
        },
        {
            "message": "unknown tag: error",
            "line": " demo/platforms/ios/www/cordova.js:4922"
        },
        {
            "message": "unknown tag: error",
            "line": " demo/platforms/ios/www/cordova.js:4959"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " demo/www/framework/localization.js:103"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " demo/www/framework/localization.js:177"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " demo/www/framework/localization.js:217"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " demo/www/framework/localization.js:241"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " demo/www/framework/localization.js:264"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " demo/www/framework/localization.js:285"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " framework/localization.js:103"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " framework/localization.js:177"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " framework/localization.js:217"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " framework/localization.js:241"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " framework/localization.js:264"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " framework/localization.js:285"
        },
        {
            "message": "unknown tag: version",
            "line": " framework/pk-object.js:1"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " framework/pk-object.js:95"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " framework/pk-object.js:119"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " framework/pk-object.js:279"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " framework/pk-object.js:352"
        },
        {
            "message": "unknown tag: version",
            "line": "  This provides the basics of the UI model, including poings, rects, and more.\n:1"
        },
        {
            "message": "unknown tag: typedef",
            "line": " framework/ui-base.js:34"
        },
        {
            "message": "unknown tag: typedef",
            "line": " framework/ui-base.js:34"
        },
        {
            "message": "unknown tag: typedef",
            "line": " framework/ui-base.js:34"
        },
        {
            "message": "unknown tag: typedef",
            "line": " framework/ui-base.js:34"
        },
        {
            "message": "unknown tag: typedef",
            "line": " framework/ui-base.js:34"
        },
        {
            "message": "unknown tag: typedef",
            "line": " framework/ui-base.js:34"
        },
        {
            "message": "unknown tag: typedef",
            "line": " framework/ui-base.js:34"
        },
        {
            "message": "unknown tag: typedef",
            "line": " framework/ui-base.js:34"
        },
        {
            "message": "unknown tag: typedef",
            "line": " framework/ui-base.js:34"
        },
        {
            "message": "unknown tag: typedef",
            "line": " framework/ui-base.js:34"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " framework/ui-base.js:69"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " framework/ui-base.js:85"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " framework/ui-base.js:101"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " framework/ui-base.js:119"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " framework/ui-base.js:134"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " framework/ui-base.js:148"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " framework/ui-base.js:162"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " framework/ui-base.js:177"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " framework/ui-base.js:193"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " framework/ui-base.js:211"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " framework/ui-base.js:228"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " framework/ui-base.js:244"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " framework/ui-base.js:265"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " framework/ui-base.js:297"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " framework/ui-base.js:308"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " framework/ui-base.js:319"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " framework/ui-base.js:330"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " framework/ui-base.js:341"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " framework/ui-base.js:352"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " framework/ui-base.js:371"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " framework/ui-base.js:385"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " framework/ui-base.js:400"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " framework/ui-base.js:415"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " framework/ui-base.js:467"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " framework/ui-base.js:487"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " framework/ui-base.js:505"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " framework/ui-base.js:525"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " framework/ui-base.js:616"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " framework/ui-base.js:634"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " framework/ui-base.js:656"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " framework/ui-base.js:683"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " framework/ui-base.js:700"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " framework/ui-base.js:722"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " framework/ui-base.js:727"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " framework/ui-base.js:732"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " framework/ui-base.js:737"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " framework/ui-base.js:742"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " framework/ui-base.js:747"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " framework/ui-base.js:752"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " framework/ui-base.js:757"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " framework/ui-base.js:762"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " framework/ui-base.js:767"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " framework/ui-base.js:772"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " framework/ui-base.js:777"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " framework/ui-base.js:782"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " framework/ui-base.js:787"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " framework/ui-base.js:792"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " framework/ui-base.js:797"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " framework/ui-base.js:802"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " framework/ui-base.js:811"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " framework/ui-base.js:858"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " framework/ui-base.js:931"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " framework/ui-base.js:995"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " framework/ui-base.js:1009"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " framework/ui-base.js:1058"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " framework/ui-base.js:1130"
        },
        {
            "message": "unknown tag: version",
            "line": " framework/ui-label.js:1"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " framework/ui-label.js:128"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " framework/ui-label.js:134"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " framework/ui-label.js:140"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " framework/ui-label.js:146"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " framework/ui-label.js:152"
        },
        {
            "message": "unknown tag: version",
            "line": " framework/ui-view.js:1"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " framework/ui-view.js:244"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " framework/ui-view.js:254"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " framework/ui-view.js:306"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " framework/ui-view.js:340"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " framework/ui-view.js:423"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " framework/ui-view.js:434"
        },
        {
            "message": "unknown tag: parameter",
            "line": " framework/ui-view.js:446"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " framework/ui-view.js:605"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " framework/ui-view.js:653"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " framework/ui-view.js:701"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " framework/ui-view.js:749"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " framework/ui-view.js:809"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " framework/ui-view.js:874"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " framework/ui-view.js:925"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " framework/ui-view.js:1079"
        },
        {
            "message": "Missing item type\nListen for DOMContentLoaded and notify our channel subscribers.",
            "line": " demo/merges/android/cordova.js:98"
        },
        {
            "message": "Missing item type\nIntercept calls to addEventListener + removeEventListener and handle deviceready,\nresume, and pause events.",
            "line": " demo/merges/android/cordova.js:108"
        },
        {
            "message": "Missing item type\nHouses custom event handlers to intercept on document + window event listeners.",
            "line": " demo/merges/android/cordova.js:117"
        },
        {
            "message": "Missing item type\nMethods to add/remove your own addEventListener hijacking on document + window.",
            "line": " demo/merges/android/cordova.js:183"
        },
        {
            "message": "Missing item type\nRetrieve original event handlers that were replaced by Cordova",
            "line": " demo/merges/android/cordova.js:201"
        },
        {
            "message": "Missing item type\nMethod to fire event from native code\nbNoDetach is required for events which cause an exception which needs to be caught in native code",
            "line": " demo/merges/android/cordova.js:210"
        },
        {
            "message": "Missing item type\nPlugin callback mechanism.",
            "line": " demo/merges/android/cordova.js:240"
        },
        {
            "message": "Missing item type\nCalled by native code when returning successful result from an action.",
            "line": " demo/merges/android/cordova.js:260"
        },
        {
            "message": "Missing item type\nCalled by native code when returning error result from an action.",
            "line": " demo/merges/android/cordova.js:271"
        },
        {
            "message": "Missing item type\nCalled by native code when returning the result from an action.",
            "line": " demo/merges/android/cordova.js:284"
        },
        {
            "message": "Missing item type\nMerge properties from one object onto another recursively.  Properties from\nthe src object will overwrite existing target property.",
            "line": " demo/merges/android/cordova.js:462"
        },
        {
            "message": "Missing item type\nCustom pub-sub \"channel\" that can have functions subscribed to it\nThis object is used to define and control firing of events for\ncordova initialization, as well as for custom events thereafter.\n\nThe order of events during page load and Cordova startup is as follows:\n\nonDOMContentLoaded*         Internal event that is received when the web page is loaded and parsed.\nonNativeReady*              Internal event that indicates the Cordova native side is ready.\nonCordovaReady*             Internal event fired when all Cordova JavaScript objects have been created.\nonCordovaInfoReady*         Internal event fired when device properties are available.\nonCordovaConnectionReady*   Internal event fired when the connection property has been set.\nonDeviceReady*              User event fired to indicate that Cordova is ready\nonResume                    User event fired to indicate a start/resume lifecycle event\nonPause                     User event fired to indicate a pause lifecycle event\nonDestroy*                  Internal event fired when app is being destroyed (User should use window.onunload event, not this one).\n\nThe events marked with an * are sticky. Once they have fired, they will stay in the fired state.\nAll listeners that subscribe after the event is fired will be executed right away.\n\nThe only Cordova events that user code should register for are:\n     deviceready           Cordova native code is initialized and Cordova APIs can be called from JavaScript\n     pause                 App has moved to background\n     resume                App has returned to foreground\n\nListeners can be registered as:\n     document.addEventListener(\"deviceready\", myDeviceReadyListener, false);\n     document.addEventListener(\"resume\", myResumeListener, false);\n     document.addEventListener(\"pause\", myPauseListener, false);\n\nThe DOM lifecycle events should be used for saving and restoring state\n     window.onload\n     window.onunload",
            "line": " demo/merges/android/cordova.js:507"
        },
        {
            "message": "Missing item type\nChannel",
            "line": " demo/merges/android/cordova.js:543"
        },
        {
            "message": "Missing item type\nCalls the provided function only after all of the channels specified\nhave been fired. All channels must be sticky channels.",
            "line": " demo/merges/android/cordova.js:563"
        },
        {
            "message": "Missing item type\ncordova Channels that must fire before \"deviceready\" is fired.",
            "line": " demo/merges/android/cordova.js:588"
        },
        {
            "message": "Missing item type\nIndicate that a feature needs to be initialized before it is ready to be used.\nThis holds up Cordova's \"deviceready\" event until the feature has been initialized\nand Cordova.initComplete(feature) is called.",
            "line": " demo/merges/android/cordova.js:594"
        },
        {
            "message": "Missing item type\nIndicate that initialization code has completed and the feature is ready to be used.",
            "line": " demo/merges/android/cordova.js:609"
        },
        {
            "message": "Missing item type\nSubscribes the given function to the channel. Any time that\nChannel.fire is called so too will the function.\nOptionally specify an execution context for the function\nand a guid that can be used to stop subscribing to the channel.\nReturns the guid.",
            "line": " demo/merges/android/cordova.js:626"
        },
        {
            "message": "Missing item type\nUnsubscribes the function with the given guid from the channel.",
            "line": " demo/merges/android/cordova.js:662"
        },
        {
            "message": "Missing item type\nCalls all functions subscribed to this channel.",
            "line": " demo/merges/android/cordova.js:680"
        },
        {
            "message": "Missing item type\nExecute a cordova command.  It is up to the native side whether this action\nis synchronous or asynchronous.  The native side can return:\n     Synchronous: PluginResult object as a JSON string\n     Asynchronous: Empty string \"\"\nIf async, the native side will cordova.callbackSuccess or cordova.callbackError,\ndepending upon the result of the action.",
            "line": " demo/merges/android/cordova.js:780"
        },
        {
            "message": "Missing item type\nGets a picture from source defined by \"options.sourceType\", and returns the\nimage as defined by the \"options.destinationType\" option.\n\nThe defaults are sourceType=CAMERA and destinationType=FILE_URI.",
            "line": " demo/merges/android/cordova.js:1180"
        },
        {
            "message": "Missing item type\nA handle to an image picker popover.",
            "line": " demo/merges/android/cordova.js:1261"
        },
        {
            "message": "Missing item type\nEncapsulates options for iOS Popover image picker",
            "line": " demo/merges/android/cordova.js:1279"
        },
        {
            "message": "Missing item type\nEncapsulates all audio capture operation configuration options.",
            "line": " demo/merges/android/cordova.js:1299"
        },
        {
            "message": "Missing item type\nThe CaptureError interface encapsulates all errors in the Capture API.",
            "line": " demo/merges/android/cordova.js:1318"
        },
        {
            "message": "Missing item type\nEncapsulates all image capture operation configuration options.",
            "line": " demo/merges/android/cordova.js:1343"
        },
        {
            "message": "Missing item type\nEncapsulates all video capture operation configuration options.",
            "line": " demo/merges/android/cordova.js:1360"
        },
        {
            "message": "Missing item type\nCompassError.\nAn error code assigned by an implementation when an error has occurred",
            "line": " demo/merges/android/cordova.js:1379"
        },
        {
            "message": "Missing item type\nEncapsulates a set of parameters that the capture device supports.",
            "line": " demo/merges/android/cordova.js:1412"
        },
        {
            "message": "Missing item type\nNetwork status",
            "line": " demo/merges/android/cordova.js:1433"
        },
        {
            "message": "Missing item type\nConverts primitives into Complex Object\nCurrently only used for Date fields",
            "line": " demo/merges/android/cordova.js:1457"
        },
        {
            "message": "Missing item type\nConverts Complex objects into primitives\nOnly conversion at present is for Dates.",
            "line": " demo/merges/android/cordova.js:1471"
        },
        {
            "message": "Missing item type\nContains information about a single contact.",
            "line": " demo/merges/android/cordova.js:1495"
        },
        {
            "message": "Missing item type\nRemoves contact from device storage.",
            "line": " demo/merges/android/cordova.js:1532"
        },
        {
            "message": "Missing item type\nCreates a deep copy of this Contact.\nWith the contact ID set to null.",
            "line": " demo/merges/android/cordova.js:1550"
        },
        {
            "message": "Missing item type\nPersists contact to device storage.",
            "line": " demo/merges/android/cordova.js:1580"
        },
        {
            "message": "Missing item type\nContact address.",
            "line": " demo/merges/android/cordova.js:1614"
        },
        {
            "message": "Missing item type\nContactError.\nAn error code assigned by an implementation when an error has occurred",
            "line": " demo/merges/android/cordova.js:1645"
        },
        {
            "message": "Missing item type\nError codes",
            "line": " demo/merges/android/cordova.js:1654"
        },
        {
            "message": "Missing item type\nGeneric contact field.",
            "line": " demo/merges/android/cordova.js:1672"
        },
        {
            "message": "Missing item type\nContactFindOptions.",
            "line": " demo/merges/android/cordova.js:1694"
        },
        {
            "message": "Missing item type\nContact name.",
            "line": " demo/merges/android/cordova.js:1713"
        },
        {
            "message": "Missing item type\nContact organization.",
            "line": " demo/merges/android/cordova.js:1739"
        },
        {
            "message": "Missing item type\nThis class contains position information.",
            "line": " demo/merges/android/cordova.js:1768"
        },
        {
            "message": "Missing item type\nThe latitude of the position.",
            "line": " demo/merges/android/cordova.js:1780"
        },
        {
            "message": "Missing item type\nThe longitude of the position,",
            "line": " demo/merges/android/cordova.js:1784"
        },
        {
            "message": "Missing item type\nThe accuracy of the position.",
            "line": " demo/merges/android/cordova.js:1788"
        },
        {
            "message": "Missing item type\nThe altitude of the position.",
            "line": " demo/merges/android/cordova.js:1792"
        },
        {
            "message": "Missing item type\nThe direction the device is moving at the position.",
            "line": " demo/merges/android/cordova.js:1796"
        },
        {
            "message": "Missing item type\nThe velocity with which the device is moving at the position.",
            "line": " demo/merges/android/cordova.js:1800"
        },
        {
            "message": "Missing item type\nThe altitude accuracy of the position.",
            "line": " demo/merges/android/cordova.js:1809"
        },
        {
            "message": "Missing item type\nAn interface representing a directory on the file system.\n\n{boolean} isFile always false (readonly)\n{boolean} isDirectory always true (readonly)\n{DOMString} name of the directory, excluding the path leading to it (readonly)\n{DOMString} fullPath the absolute full path to the directory (readonly)\nTODO: implement this!!! {FileSystem} filesystem on which the directory resides (readonly)",
            "line": " demo/merges/android/cordova.js:1829"
        },
        {
            "message": "Missing item type\nCreates a new DirectoryReader to read entries from this directory",
            "line": " demo/merges/android/cordova.js:1844"
        },
        {
            "message": "Missing item type\nCreates or looks up a directory",
            "line": " demo/merges/android/cordova.js:1851"
        },
        {
            "message": "Missing item type\nDeletes a directory and all of it's contents",
            "line": " demo/merges/android/cordova.js:1871"
        },
        {
            "message": "Missing item type\nCreates or looks up a file",
            "line": " demo/merges/android/cordova.js:1885"
        },
        {
            "message": "Missing item type\nAn interface that lists the files and directories in a directory.",
            "line": " demo/merges/android/cordova.js:1916"
        },
        {
            "message": "Missing item type\nReturns a list of entries from a directory.",
            "line": " demo/merges/android/cordova.js:1923"
        },
        {
            "message": "Missing item type\nRepresents a file or directory on the local file system.",
            "line": " demo/merges/android/cordova.js:1966"
        },
        {
            "message": "Missing item type\nLook up the metadata of the entry.",
            "line": " demo/merges/android/cordova.js:1988"
        },
        {
            "message": "Missing item type\nSet the metadata of the entry.",
            "line": " demo/merges/android/cordova.js:2009"
        },
        {
            "message": "Missing item type\nMove a file or directory to a new location.",
            "line": " demo/merges/android/cordova.js:2024"
        },
        {
            "message": "Missing item type\nCopy a directory to a different location.",
            "line": " demo/merges/android/cordova.js:2063"
        },
        {
            "message": "Missing item type\nReturn a URL that can be used to identify this entry.",
            "line": " demo/merges/android/cordova.js:2104"
        },
        {
            "message": "Missing item type\nReturns a URI that can be used to identify this entry.",
            "line": " demo/merges/android/cordova.js:2112"
        },
        {
            "message": "Missing item type\nRemove a file or directory. It is an error to attempt to delete a\ndirectory that is not empty. It is an error to attempt to delete a\nroot directory of a file system.",
            "line": " demo/merges/android/cordova.js:2124"
        },
        {
            "message": "Missing item type\nLook up the parent DirectoryEntry of this entry.",
            "line": " demo/merges/android/cordova.js:2140"
        },
        {
            "message": "Missing item type\nConstructor.\nname {DOMString} name of the file, without path information\nfullPath {DOMString} the full path of the file, including the name\ntype {DOMString} mime type\nlastModifiedDate {Date} last modified date\nsize {Number} size of the file in bytes",
            "line": " demo/merges/android/cordova.js:2166"
        },
        {
            "message": "Missing item type\nReturns a \"slice\" of the file. Since Cordova Files don't contain the actual\ncontent, this really returns a File with adjusted start and end.\nSlices of slices are supported.\nstart {Number} The index at which to start the slice (inclusive).\nend {Number} The index at which to end the slice (exclusive).",
            "line": " demo/merges/android/cordova.js:2187"
        },
        {
            "message": "Missing item type\nAn interface representing a file on the file system.\n\n{boolean} isFile always true (readonly)\n{boolean} isDirectory always false (readonly)\n{DOMString} name of the file, excluding the path leading to it (readonly)\n{DOMString} fullPath the absolute full path to the file (readonly)\n{FileSystem} filesystem on which the file resides (readonly)",
            "line": " demo/merges/android/cordova.js:2235"
        },
        {
            "message": "Missing item type\nCreates a new FileWriter associated with the file that this FileEntry represents.",
            "line": " demo/merges/android/cordova.js:2250"
        },
        {
            "message": "Missing item type\nReturns a File that represents the current state of the file that this FileEntry represents.",
            "line": " demo/merges/android/cordova.js:2268"
        },
        {
            "message": "Missing item type\nFileError",
            "line": " demo/merges/android/cordova.js:2293"
        },
        {
            "message": "Missing item type\nThis class reads the mobile device file system.\n\nFor Android:\n     The root directory is the root of the file system.\n     To read from the SD card, the file name is \"sdcard/my_file.txt\"",
            "line": " demo/merges/android/cordova.js:2332"
        },
        {
            "message": "Missing item type\nAbort reading file.",
            "line": " demo/merges/android/cordova.js:2403"
        },
        {
            "message": "Missing item type\nRead text file.",
            "line": " demo/merges/android/cordova.js:2428"
        },
        {
            "message": "Missing item type\nRead file and return data as a base64 encoded data url.\nA data url is of the form:\n     data:[<mediatype>][;base64],<data>",
            "line": " demo/merges/android/cordova.js:2505"
        },
        {
            "message": "Missing item type\nRead file and return data as a binary data.",
            "line": " demo/merges/android/cordova.js:2579"
        },
        {
            "message": "Missing item type\nRead file and return data as a binary data.",
            "line": " demo/merges/android/cordova.js:2593"
        },
        {
            "message": "Missing item type\nAn interface representing a file system",
            "line": " demo/merges/android/cordova.js:2616"
        },
        {
            "message": "Missing item type\nFileTransfer uploads a file to a remote server.",
            "line": " demo/merges/android/cordova.js:2652"
        },
        {
            "message": "Missing item type\nGiven an absolute file path, uploads a file on the device to a remote server\nusing a multipart HTTP request.",
            "line": " demo/merges/android/cordova.js:2661"
        },
        {
            "message": "Missing item type\nDownloads a file form a given URL and saves it to the specified directory.",
            "line": " demo/merges/android/cordova.js:2714"
        },
        {
            "message": "Missing item type\nAborts the ongoing file transfer on this object",
            "line": " demo/merges/android/cordova.js:2754"
        },
        {
            "message": "Missing item type\nFileTransferError",
            "line": " demo/merges/android/cordova.js:2770"
        },
        {
            "message": "Missing item type\nOptions to customize the HTTP request used to upload files.",
            "line": " demo/merges/android/cordova.js:2794"
        },
        {
            "message": "Missing item type\nFileUploadResult",
            "line": " demo/merges/android/cordova.js:2819"
        },
        {
            "message": "Missing item type\nThis class writes to the mobile device file system.\n\nFor Android:\n     The root directory is the root of the file system.\n     To write to the SD card, the file name is \"sdcard/my_file.txt\"",
            "line": " demo/merges/android/cordova.js:2840"
        },
        {
            "message": "Missing item type\nAbort writing file.",
            "line": " demo/merges/android/cordova.js:2882"
        },
        {
            "message": "Missing item type\nWrites data to the file",
            "line": " demo/merges/android/cordova.js:2907"
        },
        {
            "message": "Missing item type\nMoves the file pointer to the location specified.\n\nIf the offset is a negative number the position of the file\npointer is rewound.  If the offset is greater than the file\nsize the position is set to the end of the file.",
            "line": " demo/merges/android/cordova.js:2981"
        },
        {
            "message": "Missing item type\nTruncates the file to the size specified.",
            "line": " demo/merges/android/cordova.js:3016"
        },
        {
            "message": "Missing item type\nSupplies arguments to methods that lookup or create files and directories.",
            "line": " demo/merges/android/cordova.js:3095"
        },
        {
            "message": "Missing item type\nGlobalization error object",
            "line": " demo/merges/android/cordova.js:3117"
        },
        {
            "message": "Missing item type\nRepresents a local file system.",
            "line": " demo/merges/android/cordova.js:3191"
        },
        {
            "message": "Missing item type\nThis class provides access to the device media, interfaces to both sound and video",
            "line": " demo/merges/android/cordova.js:3214"
        },
        {
            "message": "Missing item type\nStart or resume playing audio file.",
            "line": " demo/merges/android/cordova.js:3258"
        },
        {
            "message": "Missing item type\nStop playing audio file.",
            "line": " demo/merges/android/cordova.js:3265"
        },
        {
            "message": "Missing item type\nSeek or jump to a new time in the track..",
            "line": " demo/merges/android/cordova.js:3275"
        },
        {
            "message": "Missing item type\nPause playing audio file.",
            "line": " demo/merges/android/cordova.js:3285"
        },
        {
            "message": "Missing item type\nGet duration of an audio file.\nThe duration is only set for audio that is playing, paused or stopped.",
            "line": " demo/merges/android/cordova.js:3292"
        },
        {
            "message": "Missing item type\nGet position of audio.",
            "line": " demo/merges/android/cordova.js:3302"
        },
        {
            "message": "Missing item type\nStart recording audio file.",
            "line": " demo/merges/android/cordova.js:3313"
        },
        {
            "message": "Missing item type\nStop recording audio file.",
            "line": " demo/merges/android/cordova.js:3320"
        },
        {
            "message": "Missing item type\nRelease the resources.",
            "line": " demo/merges/android/cordova.js:3327"
        },
        {
            "message": "Missing item type\nAdjust the volume.",
            "line": " demo/merges/android/cordova.js:3334"
        },
        {
            "message": "Missing item type\nAudio has status update.\nPRIVATE",
            "line": " demo/merges/android/cordova.js:3341"
        },
        {
            "message": "Missing item type\nThis class contains information about any Media errors.",
            "line": " demo/merges/android/cordova.js:3388"
        },
        {
            "message": "Missing item type\nRepresents a single file.\n\nname {DOMString} name of the file, without path information\nfullPath {DOMString} the full path of the file, including the name\ntype {DOMString} mime type\nlastModifiedDate {Date} last modified date\nsize {Number} size of the file in bytes",
            "line": " demo/merges/android/cordova.js:3432"
        },
        {
            "message": "Missing item type\nRequest capture format data for a specific file and type",
            "line": " demo/merges/android/cordova.js:3447"
        },
        {
            "message": "Missing item type\nMediaFileData encapsulates format information of a media file.",
            "line": " demo/merges/android/cordova.js:3468"
        },
        {
            "message": "Missing item type\nInformation about the state of the file or directory\n\n{Date} modificationTime (readonly)",
            "line": " demo/merges/android/cordova.js:3492"
        },
        {
            "message": "Missing item type\nPosition error object",
            "line": " demo/merges/android/cordova.js:3526"
        },
        {
            "message": "Missing item type\nThis class provides access to device accelerometer data.",
            "line": " demo/merges/android/cordova.js:3601"
        },
        {
            "message": "Missing item type\nAsynchronously acquires the current acceleration.",
            "line": " demo/merges/android/cordova.js:3662"
        },
        {
            "message": "Missing item type\nAsynchronously acquires the acceleration repeatedly at a given interval.",
            "line": " demo/merges/android/cordova.js:3690"
        },
        {
            "message": "Missing item type\nClears the specified accelerometer watch.",
            "line": " demo/merges/android/cordova.js:3734"
        },
        {
            "message": "Missing item type\nClear the resource cache.",
            "line": " demo/merges/android/cordova.js:3770"
        },
        {
            "message": "Missing item type\nLoad the url into the webview or into new browser instance.",
            "line": " demo/merges/android/cordova.js:3777"
        },
        {
            "message": "Missing item type\nCancel loadUrl that is waiting to be loaded.",
            "line": " demo/merges/android/cordova.js:3795"
        },
        {
            "message": "Missing item type\nClear web history in this web view.\nInstead of BACK button loading the previous web page, it will exit the app.",
            "line": " demo/merges/android/cordova.js:3802"
        },
        {
            "message": "Missing item type\nGo to previous page displayed.\nThis is the same as pressing the backbutton on Android device.",
            "line": " demo/merges/android/cordova.js:3810"
        },
        {
            "message": "Missing item type\nOverride the default behavior of the Android back button.\nIf overridden, when the back button is pressed, the \"backKeyDown\" JavaScript event will be fired.\n\nNote: The user should not have to call this method.  Instead, when the user\n      registers for the \"backbutton\" event, this is automatically done.",
            "line": " demo/merges/android/cordova.js:3818"
        },
        {
            "message": "Missing item type\nExit and terminate the application.",
            "line": " demo/merges/android/cordova.js:3831"
        },
        {
            "message": "Missing item type\nProvides Android enhanced notification API.",
            "line": " demo/merges/android/cordova.js:3910"
        },
        {
            "message": "Missing item type\nClose an activity dialog",
            "line": " demo/merges/android/cordova.js:3925"
        },
        {
            "message": "Missing item type\nDisplay a progress dialog with progress bar that goes from 0 to 100.",
            "line": " demo/merges/android/cordova.js:3932"
        },
        {
            "message": "Missing item type\nClose the progress dialog.",
            "line": " demo/merges/android/cordova.js:3944"
        },
        {
            "message": "Missing item type\nSet the progress dialog value.",
            "line": " demo/merges/android/cordova.js:3951"
        },
        {
            "message": "Missing item type\nSQL result set object\nPRIVATE METHOD",
            "line": " demo/merges/android/cordova.js:3990"
        },
        {
            "message": "Missing item type\nGet item from SQL result set",
            "line": " demo/merges/android/cordova.js:4000"
        },
        {
            "message": "Missing item type\nSQL result set that is returned to user.\nPRIVATE METHOD",
            "line": " demo/merges/android/cordova.js:4010"
        },
        {
            "message": "Missing item type\nCallback from native code when query is complete.\nPRIVATE METHOD",
            "line": " demo/merges/android/cordova.js:4019"
        },
        {
            "message": "Missing item type\nCallback from native code when query fails\nPRIVATE METHOD",
            "line": " demo/merges/android/cordova.js:4059"
        },
        {
            "message": "Missing item type\nSQL query object\nPRIVATE METHOD",
            "line": " demo/merges/android/cordova.js:4098"
        },
        {
            "message": "Missing item type\nTransaction object\nPRIVATE METHOD",
            "line": " demo/merges/android/cordova.js:4128"
        },
        {
            "message": "Missing item type\nMark query in transaction as complete.\nIf all queries are complete, call the user's transaction success callback.",
            "line": " demo/merges/android/cordova.js:4146"
        },
        {
            "message": "Missing item type\nMark query in transaction as failed.",
            "line": " demo/merges/android/cordova.js:4174"
        },
        {
            "message": "Missing item type\nExecute SQL statement",
            "line": " demo/merges/android/cordova.js:4197"
        },
        {
            "message": "Missing item type\nStart a transaction.\nDoes not support rollback in event of failure.",
            "line": " demo/merges/android/cordova.js:4227"
        },
        {
            "message": "Missing item type\nOpen database",
            "line": " demo/merges/android/cordova.js:4253"
        },
        {
            "message": "Missing item type\nThis class contains information about the current battery status.",
            "line": " demo/merges/android/cordova.js:4324"
        },
        {
            "message": "Missing item type\nEvent handlers for when callbacks get registered for the battery.\nKeep track of how many handlers we have so we can start and stop the native battery listener\nappropriately (and hopefully save on battery life!).",
            "line": " demo/merges/android/cordova.js:4350"
        },
        {
            "message": "Missing item type\nCallback for battery status",
            "line": " demo/merges/android/cordova.js:4364"
        },
        {
            "message": "Missing item type\nError callback for battery start",
            "line": " demo/merges/android/cordova.js:4392"
        },
        {
            "message": "Missing item type\nLaunches a capture of different types.",
            "line": " demo/merges/android/cordova.js:4433"
        },
        {
            "message": "Missing item type\nThe Capture interface exposes an interface to the camera and microphone of the hosting device.",
            "line": " demo/merges/android/cordova.js:4458"
        },
        {
            "message": "Missing item type\nLaunch audio recorder application for recording audio clip(s).",
            "line": " demo/merges/android/cordova.js:4467"
        },
        {
            "message": "Missing item type\nLaunch camera application for taking image(s).",
            "line": " demo/merges/android/cordova.js:4478"
        },
        {
            "message": "Missing item type\nLaunch device camera application for recording video(s).",
            "line": " demo/merges/android/cordova.js:4489"
        },
        {
            "message": "Missing item type\nAsynchronously acquires the current heading.",
            "line": " demo/merges/android/cordova.js:4531"
        },
        {
            "message": "Missing item type\nAsynchronously acquires the heading repeatedly at a given interval.",
            "line": " demo/merges/android/cordova.js:4555"
        },
        {
            "message": "Missing item type\nClears the specified heading watch.",
            "line": " demo/merges/android/cordova.js:4586"
        },
        {
            "message": "Missing item type\nRepresents a group of Contacts.",
            "line": " demo/merges/android/cordova.js:4801"
        },
        {
            "message": "Missing item type\nReturns an array of Contacts matching the search criteria.",
            "line": " demo/merges/android/cordova.js:4806"
        },
        {
            "message": "Missing item type\nThis function creates a new contact, but it does not persist the contact\nto device storage. To persist the contact to device storage, invoke\ncontact.save().",
            "line": " demo/merges/android/cordova.js:4830"
        },
        {
            "message": "Missing item type\nThis represents the mobile device, and provides properties for inspecting the model, version, UUID of the\nphone, etc.",
            "line": " demo/merges/android/cordova.js:4881"
        },
        {
            "message": "Missing item type\nGet device info",
            "line": " demo/merges/android/cordova.js:4914"
        },
        {
            "message": "Missing item type\nSends the given message through exec() to the Echo plugin, which sends it back to the successCallback.",
            "line": " demo/merges/android/cordova.js:4945"
        },
        {
            "message": "Missing item type\nAsynchronously acquires the current position.",
            "line": " demo/merges/android/cordova.js:5063"
        },
        {
            "message": "Missing item type\nAsynchronously watches the geolocation for changes to geolocation.  When a change occurs,\nthe successCallback is called with the new location.",
            "line": " demo/merges/android/cordova.js:5137"
        },
        {
            "message": "Missing item type\nClears the specified heading watch.",
            "line": " demo/merges/android/cordova.js:5188"
        },
        {
            "message": "Missing item type\nReturns the string identifier for the client's current language.\nIt returns the language identifier string to the successCB callback with a\nproperties object as a parameter. If there is an error getting the language,\nthen the errorCB callback is invoked.",
            "line": " demo/merges/android/cordova.js:5228"
        },
        {
            "message": "Missing item type\nReturns the string identifier for the client's current locale setting.\nIt returns the locale identifier string to the successCB callback with a\nproperties object as a parameter. If there is an error getting the locale,\nthen the errorCB callback is invoked.",
            "line": " demo/merges/android/cordova.js:5250"
        },
        {
            "message": "Missing item type\nReturns a date formatted as a string according to the client's user preferences and\ncalendar using the time zone of the client. It returns the formatted date string to the\nsuccessCB callback with a properties object as a parameter. If there is an error\nformatting the date, then the errorCB callback is invoked.\n\nThe defaults are: formatLenght=\"short\" and selector=\"date and time\"",
            "line": " demo/merges/android/cordova.js:5273"
        },
        {
            "message": "Missing item type\nParses a date formatted as a string according to the client's user\npreferences and calendar using the time zone of the client and returns\nthe corresponding date object. It returns the date to the successCB\ncallback with a properties object as a parameter. If there is an error\nparsing the date string, then the errorCB callback is invoked.\n\nThe defaults are: formatLength=\"short\" and selector=\"date and time\"",
            "line": " demo/merges/android/cordova.js:5305"
        },
        {
            "message": "Missing item type\nReturns a pattern string for formatting and parsing dates according to the client's\nuser preferences. It returns the pattern to the successCB callback with a\nproperties object as a parameter. If there is an error obtaining the pattern,\nthen the errorCB callback is invoked.\n\nThe defaults are: formatLength=\"short\" and selector=\"date and time\"",
            "line": " demo/merges/android/cordova.js:5346"
        },
        {
            "message": "Missing item type\nReturns an array of either the names of the months or days of the week\naccording to the client's user preferences and calendar. It returns the array of names to the\nsuccessCB callback with a properties object as a parameter. If there is an error obtaining the\nnames, then the errorCB callback is invoked.\n\nThe defaults are: type=\"wide\" and item=\"months\"",
            "line": " demo/merges/android/cordova.js:5384"
        },
        {
            "message": "Missing item type\nReturns whether daylight savings time is in effect for a given date using the client's\ntime zone and calendar. It returns whether or not daylight savings time is in effect\nto the successCB callback with a properties object as a parameter. If there is an error\nreading the date, then the errorCB callback is invoked.",
            "line": " demo/merges/android/cordova.js:5414"
        },
        {
            "message": "Missing item type\nReturns the first day of the week according to the client's user preferences and calendar.\nThe days of the week are numbered starting from 1 where 1 is considered to be Sunday.\nIt returns the day to the successCB callback with a properties object as a parameter.\nIf there is an error obtaining the pattern, then the errorCB callback is invoked.",
            "line": " demo/merges/android/cordova.js:5440"
        },
        {
            "message": "Missing item type\nReturns a number formatted as a string according to the client's user preferences.\nIt returns the formatted number string to the successCB callback with a properties object as a\nparameter. If there is an error formatting the number, then the errorCB callback is invoked.\n\nThe defaults are: type=\"decimal\"",
            "line": " demo/merges/android/cordova.js:5464"
        },
        {
            "message": "Missing item type\nParses a number formatted as a string according to the client's user preferences and\nreturns the corresponding number. It returns the number to the successCB callback with a\nproperties object as a parameter. If there is an error parsing the number string, then\nthe errorCB callback is invoked.\n\nThe defaults are: type=\"decimal\"",
            "line": " demo/merges/android/cordova.js:5492"
        },
        {
            "message": "Missing item type\nReturns a pattern string for formatting and parsing numbers according to the client's user\npreferences. It returns the pattern to the successCB callback with a properties object as a\nparameter. If there is an error obtaining the pattern, then the errorCB callback is invoked.\n\nThe defaults are: type=\"decimal\"",
            "line": " demo/merges/android/cordova.js:5520"
        },
        {
            "message": "Missing item type\nReturns a pattern string for formatting and parsing currency values according to the client's\nuser preferences and ISO 4217 currency code. It returns the pattern to the successCB callback with a\nproperties object as a parameter. If there is an error obtaining the pattern, then the errorCB\ncallback is invoked.",
            "line": " demo/merges/android/cordova.js:5557"
        },
        {
            "message": "Missing item type\nLogging levels",
            "line": " demo/merges/android/cordova.js:5650"
        },
        {
            "message": "Missing item type\nGetter/Setter for the logging level\n\nReturns the current logging level.\n\nWhen a value is passed, sets the logging level to that value.\nThe values should be one of the following constants:\n   logger.LOG\n   logger.ERROR\n   logger.WARN\n   logger.INFO\n   logger.DEBUG\n\nThe value used determines which messages get printed.  The logging\nvalues above are in order, and only messages logged at the logging\nlevel or above will actually be displayed to the user.  E.g., the\ndefault level is WARN, so only messages logged with LOG, ERROR, or\nWARN will be displayed; INFO and DEBUG messages will be ignored.",
            "line": " demo/merges/android/cordova.js:5676"
        },
        {
            "message": "Missing item type\nGetter/Setter for the useConsole functionality\n\nWhen useConsole is true, the logger will log via the\nbrowser 'console' object.  Otherwise, it will use the\nnative Logger plugin.",
            "line": " demo/merges/android/cordova.js:5706"
        },
        {
            "message": "Missing item type\nLogs a message at the LOG level.\n\nParameters passed after message are used applied to\nthe message with utils.format()",
            "line": " demo/merges/android/cordova.js:5735"
        },
        {
            "message": "Missing item type\nLogs a message at the ERROR level.\n\nParameters passed after message are used applied to\nthe message with utils.format()",
            "line": " demo/merges/android/cordova.js:5743"
        },
        {
            "message": "Missing item type\nLogs a message at the WARN level.\n\nParameters passed after message are used applied to\nthe message with utils.format()",
            "line": " demo/merges/android/cordova.js:5751"
        },
        {
            "message": "Missing item type\nLogs a message at the INFO level.\n\nParameters passed after message are used applied to\nthe message with utils.format()",
            "line": " demo/merges/android/cordova.js:5759"
        },
        {
            "message": "Missing item type\nLogs a message at the DEBUG level.\n\nParameters passed after message are used applied to\nthe message with utils.format()",
            "line": " demo/merges/android/cordova.js:5767"
        },
        {
            "message": "Missing item type\nLogs a message at the specified level.\n\nParameters passed after message are used applied to\nthe message with utils.format()",
            "line": " demo/merges/android/cordova.js:5781"
        },
        {
            "message": "Missing item type\nGet connection info",
            "line": " demo/merges/android/cordova.js:5886"
        },
        {
            "message": "Missing item type\nProvides access to notifications on the device.",
            "line": " demo/merges/android/cordova.js:5954"
        },
        {
            "message": "Missing item type\nOpen a native alert dialog, with a customizable title and button text.",
            "line": " demo/merges/android/cordova.js:5960"
        },
        {
            "message": "Missing item type\nOpen a native confirm dialog, with a customizable title and button text.\nThe result that the user selects is returned to the result callback.",
            "line": " demo/merges/android/cordova.js:5974"
        },
        {
            "message": "Missing item type\nCauses the device to vibrate.",
            "line": " demo/merges/android/cordova.js:5989"
        },
        {
            "message": "Missing item type\nCauses the device to beep.\nOn Android, the default notification ringtone is played \"count\" times.",
            "line": " demo/merges/android/cordova.js:5998"
        },
        {
            "message": "Missing item type\nRequest a file system in which to store application data.",
            "line": " demo/merges/android/cordova.js:6030"
        },
        {
            "message": "Missing item type\nLook up file system Entry referred to by local URI.",
            "line": " demo/merges/android/cordova.js:6077"
        },
        {
            "message": "Missing item type\nDefines a property getter / setter for obj[key].",
            "line": " demo/merges/android/cordova.js:6163"
        },
        {
            "message": "Missing item type\nDefines a property getter for obj[key].",
            "line": " demo/merges/android/cordova.js:6184"
        },
        {
            "message": "Missing item type\nReturns whether the item was found in the array.",
            "line": " demo/merges/android/cordova.js:6202"
        },
        {
            "message": "Missing item type\nReturns an indication of whether the argument is an array or not",
            "line": " demo/merges/android/cordova.js:6217"
        },
        {
            "message": "Missing item type\nReturns an indication of whether the argument is a Date or not",
            "line": " demo/merges/android/cordova.js:6224"
        },
        {
            "message": "Missing item type\nDoes a deep clone of the object.",
            "line": " demo/merges/android/cordova.js:6231"
        },
        {
            "message": "Missing item type\nReturns a wrapped version of the function",
            "line": " demo/merges/android/cordova.js:6258"
        },
        {
            "message": "Missing item type\nCreate a UUID",
            "line": " demo/merges/android/cordova.js:6273"
        },
        {
            "message": "Missing item type\nExtends a child object from a parent object using classical inheritance\npattern.",
            "line": " demo/merges/android/cordova.js:6284"
        },
        {
            "message": "Missing item type\nAlerts a message in any available way: alert or console.log.",
            "line": " demo/merges/android/cordova.js:6300"
        },
        {
            "message": "Missing item type\nFormats a string and arguments following it ala sprintf()\n\nsee utils.vformat() for more information",
            "line": " demo/merges/android/cordova.js:6311"
        },
        {
            "message": "Missing item type\nFormats a string and arguments following it ala vsprintf()\n\nformat chars:\n  %j - format arg as JSON\n  %o - format arg as JSON\n  %c - format arg as ''\n  %% - replace with '%'\nany other char following % will format it's\narg via toString().\n\nfor rationale, see FireBug's Console API:\n   http://getfirebug.com/wiki/index.php/Console_API",
            "line": " demo/merges/android/cordova.js:6321"
        },
        {
            "message": "Missing item type\nCreate all cordova objects once page has fully loaded and native side is ready.",
            "line": " demo/merges/android/cordova.js:6421"
        },
        {
            "message": "Missing item type\nListen for DOMContentLoaded and notify our channel subscribers.",
            "line": " demo/merges/ios/cordova.js:98"
        },
        {
            "message": "Missing item type\nIntercept calls to addEventListener + removeEventListener and handle deviceready,\nresume, and pause events.",
            "line": " demo/merges/ios/cordova.js:108"
        },
        {
            "message": "Missing item type\nHouses custom event handlers to intercept on document + window event listeners.",
            "line": " demo/merges/ios/cordova.js:117"
        },
        {
            "message": "Missing item type\nMethods to add/remove your own addEventListener hijacking on document + window.",
            "line": " demo/merges/ios/cordova.js:183"
        },
        {
            "message": "Missing item type\nRetrieve original event handlers that were replaced by Cordova",
            "line": " demo/merges/ios/cordova.js:201"
        },
        {
            "message": "Missing item type\nMethod to fire event from native code\nbNoDetach is required for events which cause an exception which needs to be caught in native code",
            "line": " demo/merges/ios/cordova.js:210"
        },
        {
            "message": "Missing item type\nPlugin callback mechanism.",
            "line": " demo/merges/ios/cordova.js:240"
        },
        {
            "message": "Missing item type\nCalled by native code when returning successful result from an action.",
            "line": " demo/merges/ios/cordova.js:260"
        },
        {
            "message": "Missing item type\nCalled by native code when returning error result from an action.",
            "line": " demo/merges/ios/cordova.js:271"
        },
        {
            "message": "Missing item type\nCalled by native code when returning the result from an action.",
            "line": " demo/merges/ios/cordova.js:284"
        },
        {
            "message": "Missing item type\nMerge properties from one object onto another recursively.  Properties from\nthe src object will overwrite existing target property.",
            "line": " demo/merges/ios/cordova.js:462"
        },
        {
            "message": "Missing item type\nCustom pub-sub \"channel\" that can have functions subscribed to it\nThis object is used to define and control firing of events for\ncordova initialization, as well as for custom events thereafter.\n\nThe order of events during page load and Cordova startup is as follows:\n\nonDOMContentLoaded*         Internal event that is received when the web page is loaded and parsed.\nonNativeReady*              Internal event that indicates the Cordova native side is ready.\nonCordovaReady*             Internal event fired when all Cordova JavaScript objects have been created.\nonCordovaInfoReady*         Internal event fired when device properties are available.\nonCordovaConnectionReady*   Internal event fired when the connection property has been set.\nonDeviceReady*              User event fired to indicate that Cordova is ready\nonResume                    User event fired to indicate a start/resume lifecycle event\nonPause                     User event fired to indicate a pause lifecycle event\nonDestroy*                  Internal event fired when app is being destroyed (User should use window.onunload event, not this one).\n\nThe events marked with an * are sticky. Once they have fired, they will stay in the fired state.\nAll listeners that subscribe after the event is fired will be executed right away.\n\nThe only Cordova events that user code should register for are:\n     deviceready           Cordova native code is initialized and Cordova APIs can be called from JavaScript\n     pause                 App has moved to background\n     resume                App has returned to foreground\n\nListeners can be registered as:\n     document.addEventListener(\"deviceready\", myDeviceReadyListener, false);\n     document.addEventListener(\"resume\", myResumeListener, false);\n     document.addEventListener(\"pause\", myPauseListener, false);\n\nThe DOM lifecycle events should be used for saving and restoring state\n     window.onload\n     window.onunload",
            "line": " demo/merges/ios/cordova.js:507"
        },
        {
            "message": "Missing item type\nChannel",
            "line": " demo/merges/ios/cordova.js:543"
        },
        {
            "message": "Missing item type\nCalls the provided function only after all of the channels specified\nhave been fired. All channels must be sticky channels.",
            "line": " demo/merges/ios/cordova.js:563"
        },
        {
            "message": "Missing item type\ncordova Channels that must fire before \"deviceready\" is fired.",
            "line": " demo/merges/ios/cordova.js:588"
        },
        {
            "message": "Missing item type\nIndicate that a feature needs to be initialized before it is ready to be used.\nThis holds up Cordova's \"deviceready\" event until the feature has been initialized\nand Cordova.initComplete(feature) is called.",
            "line": " demo/merges/ios/cordova.js:594"
        },
        {
            "message": "Missing item type\nIndicate that initialization code has completed and the feature is ready to be used.",
            "line": " demo/merges/ios/cordova.js:609"
        },
        {
            "message": "Missing item type\nSubscribes the given function to the channel. Any time that\nChannel.fire is called so too will the function.\nOptionally specify an execution context for the function\nand a guid that can be used to stop subscribing to the channel.\nReturns the guid.",
            "line": " demo/merges/ios/cordova.js:626"
        },
        {
            "message": "Missing item type\nUnsubscribes the function with the given guid from the channel.",
            "line": " demo/merges/ios/cordova.js:662"
        },
        {
            "message": "Missing item type\nCalls all functions subscribed to this channel.",
            "line": " demo/merges/ios/cordova.js:680"
        },
        {
            "message": "Missing item type\nCreates a gap bridge iframe used to notify the native code about queued\ncommands.",
            "line": " demo/merges/ios/cordova.js:780"
        },
        {
            "message": "Missing item type\nGets a picture from source defined by \"options.sourceType\", and returns the\nimage as defined by the \"options.destinationType\" option.\n\nThe defaults are sourceType=CAMERA and destinationType=FILE_URI.",
            "line": " demo/merges/ios/cordova.js:1138"
        },
        {
            "message": "Missing item type\nA handle to an image picker popover.",
            "line": " demo/merges/ios/cordova.js:1219"
        },
        {
            "message": "Missing item type\nEncapsulates options for iOS Popover image picker",
            "line": " demo/merges/ios/cordova.js:1238"
        },
        {
            "message": "Missing item type\nEncapsulates all audio capture operation configuration options.",
            "line": " demo/merges/ios/cordova.js:1258"
        },
        {
            "message": "Missing item type\nThe CaptureError interface encapsulates all errors in the Capture API.",
            "line": " demo/merges/ios/cordova.js:1277"
        },
        {
            "message": "Missing item type\nEncapsulates all image capture operation configuration options.",
            "line": " demo/merges/ios/cordova.js:1302"
        },
        {
            "message": "Missing item type\nEncapsulates all video capture operation configuration options.",
            "line": " demo/merges/ios/cordova.js:1319"
        },
        {
            "message": "Missing item type\nCompassError.\nAn error code assigned by an implementation when an error has occurred",
            "line": " demo/merges/ios/cordova.js:1338"
        },
        {
            "message": "Missing item type\nEncapsulates a set of parameters that the capture device supports.",
            "line": " demo/merges/ios/cordova.js:1371"
        },
        {
            "message": "Missing item type\nNetwork status",
            "line": " demo/merges/ios/cordova.js:1392"
        },
        {
            "message": "Missing item type\nConverts primitives into Complex Object\nCurrently only used for Date fields",
            "line": " demo/merges/ios/cordova.js:1416"
        },
        {
            "message": "Missing item type\nConverts Complex objects into primitives\nOnly conversion at present is for Dates.",
            "line": " demo/merges/ios/cordova.js:1430"
        },
        {
            "message": "Missing item type\nContains information about a single contact.",
            "line": " demo/merges/ios/cordova.js:1454"
        },
        {
            "message": "Missing item type\nRemoves contact from device storage.",
            "line": " demo/merges/ios/cordova.js:1491"
        },
        {
            "message": "Missing item type\nCreates a deep copy of this Contact.\nWith the contact ID set to null.",
            "line": " demo/merges/ios/cordova.js:1509"
        },
        {
            "message": "Missing item type\nPersists contact to device storage.",
            "line": " demo/merges/ios/cordova.js:1539"
        },
        {
            "message": "Missing item type\nContact address.",
            "line": " demo/merges/ios/cordova.js:1573"
        },
        {
            "message": "Missing item type\nContactError.\nAn error code assigned by an implementation when an error has occurred",
            "line": " demo/merges/ios/cordova.js:1604"
        },
        {
            "message": "Missing item type\nError codes",
            "line": " demo/merges/ios/cordova.js:1613"
        },
        {
            "message": "Missing item type\nGeneric contact field.",
            "line": " demo/merges/ios/cordova.js:1631"
        },
        {
            "message": "Missing item type\nContactFindOptions.",
            "line": " demo/merges/ios/cordova.js:1653"
        },
        {
            "message": "Missing item type\nContact name.",
            "line": " demo/merges/ios/cordova.js:1672"
        },
        {
            "message": "Missing item type\nContact organization.",
            "line": " demo/merges/ios/cordova.js:1698"
        },
        {
            "message": "Missing item type\nThis class contains position information.",
            "line": " demo/merges/ios/cordova.js:1727"
        },
        {
            "message": "Missing item type\nThe latitude of the position.",
            "line": " demo/merges/ios/cordova.js:1739"
        },
        {
            "message": "Missing item type\nThe longitude of the position,",
            "line": " demo/merges/ios/cordova.js:1743"
        },
        {
            "message": "Missing item type\nThe accuracy of the position.",
            "line": " demo/merges/ios/cordova.js:1747"
        },
        {
            "message": "Missing item type\nThe altitude of the position.",
            "line": " demo/merges/ios/cordova.js:1751"
        },
        {
            "message": "Missing item type\nThe direction the device is moving at the position.",
            "line": " demo/merges/ios/cordova.js:1755"
        },
        {
            "message": "Missing item type\nThe velocity with which the device is moving at the position.",
            "line": " demo/merges/ios/cordova.js:1759"
        },
        {
            "message": "Missing item type\nThe altitude accuracy of the position.",
            "line": " demo/merges/ios/cordova.js:1768"
        },
        {
            "message": "Missing item type\nAn interface representing a directory on the file system.\n\n{boolean} isFile always false (readonly)\n{boolean} isDirectory always true (readonly)\n{DOMString} name of the directory, excluding the path leading to it (readonly)\n{DOMString} fullPath the absolute full path to the directory (readonly)\nTODO: implement this!!! {FileSystem} filesystem on which the directory resides (readonly)",
            "line": " demo/merges/ios/cordova.js:1788"
        },
        {
            "message": "Missing item type\nCreates a new DirectoryReader to read entries from this directory",
            "line": " demo/merges/ios/cordova.js:1803"
        },
        {
            "message": "Missing item type\nCreates or looks up a directory",
            "line": " demo/merges/ios/cordova.js:1810"
        },
        {
            "message": "Missing item type\nDeletes a directory and all of it's contents",
            "line": " demo/merges/ios/cordova.js:1830"
        },
        {
            "message": "Missing item type\nCreates or looks up a file",
            "line": " demo/merges/ios/cordova.js:1844"
        },
        {
            "message": "Missing item type\nAn interface that lists the files and directories in a directory.",
            "line": " demo/merges/ios/cordova.js:1875"
        },
        {
            "message": "Missing item type\nReturns a list of entries from a directory.",
            "line": " demo/merges/ios/cordova.js:1882"
        },
        {
            "message": "Missing item type\nRepresents a file or directory on the local file system.",
            "line": " demo/merges/ios/cordova.js:1925"
        },
        {
            "message": "Missing item type\nLook up the metadata of the entry.",
            "line": " demo/merges/ios/cordova.js:1947"
        },
        {
            "message": "Missing item type\nSet the metadata of the entry.",
            "line": " demo/merges/ios/cordova.js:1968"
        },
        {
            "message": "Missing item type\nMove a file or directory to a new location.",
            "line": " demo/merges/ios/cordova.js:1983"
        },
        {
            "message": "Missing item type\nCopy a directory to a different location.",
            "line": " demo/merges/ios/cordova.js:2022"
        },
        {
            "message": "Missing item type\nReturn a URL that can be used to identify this entry.",
            "line": " demo/merges/ios/cordova.js:2063"
        },
        {
            "message": "Missing item type\nReturns a URI that can be used to identify this entry.",
            "line": " demo/merges/ios/cordova.js:2071"
        },
        {
            "message": "Missing item type\nRemove a file or directory. It is an error to attempt to delete a\ndirectory that is not empty. It is an error to attempt to delete a\nroot directory of a file system.",
            "line": " demo/merges/ios/cordova.js:2083"
        },
        {
            "message": "Missing item type\nLook up the parent DirectoryEntry of this entry.",
            "line": " demo/merges/ios/cordova.js:2099"
        },
        {
            "message": "Missing item type\nConstructor.\nname {DOMString} name of the file, without path information\nfullPath {DOMString} the full path of the file, including the name\ntype {DOMString} mime type\nlastModifiedDate {Date} last modified date\nsize {Number} size of the file in bytes",
            "line": " demo/merges/ios/cordova.js:2125"
        },
        {
            "message": "Missing item type\nReturns a \"slice\" of the file. Since Cordova Files don't contain the actual\ncontent, this really returns a File with adjusted start and end.\nSlices of slices are supported.\nstart {Number} The index at which to start the slice (inclusive).\nend {Number} The index at which to end the slice (exclusive).",
            "line": " demo/merges/ios/cordova.js:2146"
        },
        {
            "message": "Missing item type\nAn interface representing a file on the file system.\n\n{boolean} isFile always true (readonly)\n{boolean} isDirectory always false (readonly)\n{DOMString} name of the file, excluding the path leading to it (readonly)\n{DOMString} fullPath the absolute full path to the file (readonly)\n{FileSystem} filesystem on which the file resides (readonly)",
            "line": " demo/merges/ios/cordova.js:2194"
        },
        {
            "message": "Missing item type\nCreates a new FileWriter associated with the file that this FileEntry represents.",
            "line": " demo/merges/ios/cordova.js:2209"
        },
        {
            "message": "Missing item type\nReturns a File that represents the current state of the file that this FileEntry represents.",
            "line": " demo/merges/ios/cordova.js:2227"
        },
        {
            "message": "Missing item type\nFileError",
            "line": " demo/merges/ios/cordova.js:2252"
        },
        {
            "message": "Missing item type\nThis class reads the mobile device file system.\n\nFor Android:\n     The root directory is the root of the file system.\n     To read from the SD card, the file name is \"sdcard/my_file.txt\"",
            "line": " demo/merges/ios/cordova.js:2291"
        },
        {
            "message": "Missing item type\nAbort reading file.",
            "line": " demo/merges/ios/cordova.js:2362"
        },
        {
            "message": "Missing item type\nRead text file.",
            "line": " demo/merges/ios/cordova.js:2387"
        },
        {
            "message": "Missing item type\nRead file and return data as a base64 encoded data url.\nA data url is of the form:\n     data:[<mediatype>][;base64],<data>",
            "line": " demo/merges/ios/cordova.js:2464"
        },
        {
            "message": "Missing item type\nRead file and return data as a binary data.",
            "line": " demo/merges/ios/cordova.js:2538"
        },
        {
            "message": "Missing item type\nRead file and return data as a binary data.",
            "line": " demo/merges/ios/cordova.js:2552"
        },
        {
            "message": "Missing item type\nAn interface representing a file system",
            "line": " demo/merges/ios/cordova.js:2575"
        },
        {
            "message": "Missing item type\nFileTransfer uploads a file to a remote server.",
            "line": " demo/merges/ios/cordova.js:2611"
        },
        {
            "message": "Missing item type\nGiven an absolute file path, uploads a file on the device to a remote server\nusing a multipart HTTP request.",
            "line": " demo/merges/ios/cordova.js:2620"
        },
        {
            "message": "Missing item type\nDownloads a file form a given URL and saves it to the specified directory.",
            "line": " demo/merges/ios/cordova.js:2673"
        },
        {
            "message": "Missing item type\nAborts the ongoing file transfer on this object",
            "line": " demo/merges/ios/cordova.js:2713"
        },
        {
            "message": "Missing item type\nFileTransferError",
            "line": " demo/merges/ios/cordova.js:2729"
        },
        {
            "message": "Missing item type\nOptions to customize the HTTP request used to upload files.",
            "line": " demo/merges/ios/cordova.js:2753"
        },
        {
            "message": "Missing item type\nFileUploadResult",
            "line": " demo/merges/ios/cordova.js:2778"
        },
        {
            "message": "Missing item type\nThis class writes to the mobile device file system.\n\nFor Android:\n     The root directory is the root of the file system.\n     To write to the SD card, the file name is \"sdcard/my_file.txt\"",
            "line": " demo/merges/ios/cordova.js:2799"
        },
        {
            "message": "Missing item type\nAbort writing file.",
            "line": " demo/merges/ios/cordova.js:2841"
        },
        {
            "message": "Missing item type\nWrites data to the file",
            "line": " demo/merges/ios/cordova.js:2866"
        },
        {
            "message": "Missing item type\nMoves the file pointer to the location specified.\n\nIf the offset is a negative number the position of the file\npointer is rewound.  If the offset is greater than the file\nsize the position is set to the end of the file.",
            "line": " demo/merges/ios/cordova.js:2940"
        },
        {
            "message": "Missing item type\nTruncates the file to the size specified.",
            "line": " demo/merges/ios/cordova.js:2975"
        },
        {
            "message": "Missing item type\nSupplies arguments to methods that lookup or create files and directories.",
            "line": " demo/merges/ios/cordova.js:3054"
        },
        {
            "message": "Missing item type\nGlobalization error object",
            "line": " demo/merges/ios/cordova.js:3076"
        },
        {
            "message": "Missing item type\nRepresents a local file system.",
            "line": " demo/merges/ios/cordova.js:3150"
        },
        {
            "message": "Missing item type\nThis class provides access to the device media, interfaces to both sound and video",
            "line": " demo/merges/ios/cordova.js:3173"
        },
        {
            "message": "Missing item type\nStart or resume playing audio file.",
            "line": " demo/merges/ios/cordova.js:3217"
        },
        {
            "message": "Missing item type\nStop playing audio file.",
            "line": " demo/merges/ios/cordova.js:3224"
        },
        {
            "message": "Missing item type\nSeek or jump to a new time in the track..",
            "line": " demo/merges/ios/cordova.js:3234"
        },
        {
            "message": "Missing item type\nPause playing audio file.",
            "line": " demo/merges/ios/cordova.js:3244"
        },
        {
            "message": "Missing item type\nGet duration of an audio file.\nThe duration is only set for audio that is playing, paused or stopped.",
            "line": " demo/merges/ios/cordova.js:3251"
        },
        {
            "message": "Missing item type\nGet position of audio.",
            "line": " demo/merges/ios/cordova.js:3261"
        },
        {
            "message": "Missing item type\nStart recording audio file.",
            "line": " demo/merges/ios/cordova.js:3272"
        },
        {
            "message": "Missing item type\nStop recording audio file.",
            "line": " demo/merges/ios/cordova.js:3279"
        },
        {
            "message": "Missing item type\nRelease the resources.",
            "line": " demo/merges/ios/cordova.js:3286"
        },
        {
            "message": "Missing item type\nAdjust the volume.",
            "line": " demo/merges/ios/cordova.js:3293"
        },
        {
            "message": "Missing item type\nAudio has status update.\nPRIVATE",
            "line": " demo/merges/ios/cordova.js:3300"
        },
        {
            "message": "Missing item type\nThis class contains information about any Media errors.",
            "line": " demo/merges/ios/cordova.js:3347"
        },
        {
            "message": "Missing item type\nRepresents a single file.\n\nname {DOMString} name of the file, without path information\nfullPath {DOMString} the full path of the file, including the name\ntype {DOMString} mime type\nlastModifiedDate {Date} last modified date\nsize {Number} size of the file in bytes",
            "line": " demo/merges/ios/cordova.js:3391"
        },
        {
            "message": "Missing item type\nRequest capture format data for a specific file and type",
            "line": " demo/merges/ios/cordova.js:3406"
        },
        {
            "message": "Missing item type\nMediaFileData encapsulates format information of a media file.",
            "line": " demo/merges/ios/cordova.js:3427"
        },
        {
            "message": "Missing item type\nInformation about the state of the file or directory\n\n{Date} modificationTime (readonly)",
            "line": " demo/merges/ios/cordova.js:3451"
        },
        {
            "message": "Missing item type\nPosition error object",
            "line": " demo/merges/ios/cordova.js:3485"
        },
        {
            "message": "Missing item type\nThis class provides access to device accelerometer data.",
            "line": " demo/merges/ios/cordova.js:3560"
        },
        {
            "message": "Missing item type\nAsynchronously acquires the current acceleration.",
            "line": " demo/merges/ios/cordova.js:3621"
        },
        {
            "message": "Missing item type\nAsynchronously acquires the acceleration repeatedly at a given interval.",
            "line": " demo/merges/ios/cordova.js:3649"
        },
        {
            "message": "Missing item type\nClears the specified accelerometer watch.",
            "line": " demo/merges/ios/cordova.js:3693"
        },
        {
            "message": "Missing item type\nThis class contains information about the current battery status.",
            "line": " demo/merges/ios/cordova.js:3726"
        },
        {
            "message": "Missing item type\nEvent handlers for when callbacks get registered for the battery.\nKeep track of how many handlers we have so we can start and stop the native battery listener\nappropriately (and hopefully save on battery life!).",
            "line": " demo/merges/ios/cordova.js:3752"
        },
        {
            "message": "Missing item type\nCallback for battery status",
            "line": " demo/merges/ios/cordova.js:3766"
        },
        {
            "message": "Missing item type\nError callback for battery start",
            "line": " demo/merges/ios/cordova.js:3794"
        },
        {
            "message": "Missing item type\nLaunches a capture of different types.",
            "line": " demo/merges/ios/cordova.js:3835"
        },
        {
            "message": "Missing item type\nThe Capture interface exposes an interface to the camera and microphone of the hosting device.",
            "line": " demo/merges/ios/cordova.js:3860"
        },
        {
            "message": "Missing item type\nLaunch audio recorder application for recording audio clip(s).",
            "line": " demo/merges/ios/cordova.js:3869"
        },
        {
            "message": "Missing item type\nLaunch camera application for taking image(s).",
            "line": " demo/merges/ios/cordova.js:3880"
        },
        {
            "message": "Missing item type\nLaunch device camera application for recording video(s).",
            "line": " demo/merges/ios/cordova.js:3891"
        },
        {
            "message": "Missing item type\nAsynchronously acquires the current heading.",
            "line": " demo/merges/ios/cordova.js:3933"
        },
        {
            "message": "Missing item type\nAsynchronously acquires the heading repeatedly at a given interval.",
            "line": " demo/merges/ios/cordova.js:3957"
        },
        {
            "message": "Missing item type\nClears the specified heading watch.",
            "line": " demo/merges/ios/cordova.js:3988"
        },
        {
            "message": "Missing item type\nRepresents a group of Contacts.",
            "line": " demo/merges/ios/cordova.js:4203"
        },
        {
            "message": "Missing item type\nReturns an array of Contacts matching the search criteria.",
            "line": " demo/merges/ios/cordova.js:4208"
        },
        {
            "message": "Missing item type\nThis function creates a new contact, but it does not persist the contact\nto device storage. To persist the contact to device storage, invoke\ncontact.save().",
            "line": " demo/merges/ios/cordova.js:4232"
        },
        {
            "message": "Missing item type\nThis represents the mobile device, and provides properties for inspecting the model, version, UUID of the\nphone, etc.",
            "line": " demo/merges/ios/cordova.js:4283"
        },
        {
            "message": "Missing item type\nGet device info",
            "line": " demo/merges/ios/cordova.js:4316"
        },
        {
            "message": "Missing item type\nSends the given message through exec() to the Echo plugin, which sends it back to the successCallback.",
            "line": " demo/merges/ios/cordova.js:4346"
        },
        {
            "message": "Missing item type\nAsynchronously acquires the current position.",
            "line": " demo/merges/ios/cordova.js:4465"
        },
        {
            "message": "Missing item type\nAsynchronously watches the geolocation for changes to geolocation.  When a change occurs,\nthe successCallback is called with the new location.",
            "line": " demo/merges/ios/cordova.js:4539"
        },
        {
            "message": "Missing item type\nClears the specified heading watch.",
            "line": " demo/merges/ios/cordova.js:4590"
        },
        {
            "message": "Missing item type\nReturns the string identifier for the client's current language.\nIt returns the language identifier string to the successCB callback with a\nproperties object as a parameter. If there is an error getting the language,\nthen the errorCB callback is invoked.",
            "line": " demo/merges/ios/cordova.js:4630"
        },
        {
            "message": "Missing item type\nReturns the string identifier for the client's current locale setting.\nIt returns the locale identifier string to the successCB callback with a\nproperties object as a parameter. If there is an error getting the locale,\nthen the errorCB callback is invoked.",
            "line": " demo/merges/ios/cordova.js:4652"
        },
        {
            "message": "Missing item type\nReturns a date formatted as a string according to the client's user preferences and\ncalendar using the time zone of the client. It returns the formatted date string to the\nsuccessCB callback with a properties object as a parameter. If there is an error\nformatting the date, then the errorCB callback is invoked.\n\nThe defaults are: formatLenght=\"short\" and selector=\"date and time\"",
            "line": " demo/merges/ios/cordova.js:4675"
        },
        {
            "message": "Missing item type\nParses a date formatted as a string according to the client's user\npreferences and calendar using the time zone of the client and returns\nthe corresponding date object. It returns the date to the successCB\ncallback with a properties object as a parameter. If there is an error\nparsing the date string, then the errorCB callback is invoked.\n\nThe defaults are: formatLength=\"short\" and selector=\"date and time\"",
            "line": " demo/merges/ios/cordova.js:4707"
        },
        {
            "message": "Missing item type\nReturns a pattern string for formatting and parsing dates according to the client's\nuser preferences. It returns the pattern to the successCB callback with a\nproperties object as a parameter. If there is an error obtaining the pattern,\nthen the errorCB callback is invoked.\n\nThe defaults are: formatLength=\"short\" and selector=\"date and time\"",
            "line": " demo/merges/ios/cordova.js:4748"
        },
        {
            "message": "Missing item type\nReturns an array of either the names of the months or days of the week\naccording to the client's user preferences and calendar. It returns the array of names to the\nsuccessCB callback with a properties object as a parameter. If there is an error obtaining the\nnames, then the errorCB callback is invoked.\n\nThe defaults are: type=\"wide\" and item=\"months\"",
            "line": " demo/merges/ios/cordova.js:4786"
        },
        {
            "message": "Missing item type\nReturns whether daylight savings time is in effect for a given date using the client's\ntime zone and calendar. It returns whether or not daylight savings time is in effect\nto the successCB callback with a properties object as a parameter. If there is an error\nreading the date, then the errorCB callback is invoked.",
            "line": " demo/merges/ios/cordova.js:4816"
        },
        {
            "message": "Missing item type\nReturns the first day of the week according to the client's user preferences and calendar.\nThe days of the week are numbered starting from 1 where 1 is considered to be Sunday.\nIt returns the day to the successCB callback with a properties object as a parameter.\nIf there is an error obtaining the pattern, then the errorCB callback is invoked.",
            "line": " demo/merges/ios/cordova.js:4842"
        },
        {
            "message": "Missing item type\nReturns a number formatted as a string according to the client's user preferences.\nIt returns the formatted number string to the successCB callback with a properties object as a\nparameter. If there is an error formatting the number, then the errorCB callback is invoked.\n\nThe defaults are: type=\"decimal\"",
            "line": " demo/merges/ios/cordova.js:4866"
        },
        {
            "message": "Missing item type\nParses a number formatted as a string according to the client's user preferences and\nreturns the corresponding number. It returns the number to the successCB callback with a\nproperties object as a parameter. If there is an error parsing the number string, then\nthe errorCB callback is invoked.\n\nThe defaults are: type=\"decimal\"",
            "line": " demo/merges/ios/cordova.js:4894"
        },
        {
            "message": "Missing item type\nReturns a pattern string for formatting and parsing numbers according to the client's user\npreferences. It returns the pattern to the successCB callback with a properties object as a\nparameter. If there is an error obtaining the pattern, then the errorCB callback is invoked.\n\nThe defaults are: type=\"decimal\"",
            "line": " demo/merges/ios/cordova.js:4922"
        },
        {
            "message": "Missing item type\nReturns a pattern string for formatting and parsing currency values according to the client's\nuser preferences and ISO 4217 currency code. It returns the pattern to the successCB callback with a\nproperties object as a parameter. If there is an error obtaining the pattern, then the errorCB\ncallback is invoked.",
            "line": " demo/merges/ios/cordova.js:4959"
        },
        {
            "message": "Missing item type\nProvides iOS Contact.display API.",
            "line": " demo/merges/ios/cordova.js:5024"
        },
        {
            "message": "Missing item type\ncreate a nice string for an object",
            "line": " demo/merges/ios/cordova.js:5076"
        },
        {
            "message": "Missing item type\nWrapper one of the console logging methods, so that\nthe Cordova logging native is called, then the original.",
            "line": " demo/merges/ios/cordova.js:5096"
        },
        {
            "message": "Missing item type\nProvides iOS enhanced contacts API.",
            "line": " demo/merges/ios/cordova.js:5153"
        },
        {
            "message": "Missing item type\nLogging levels",
            "line": " demo/merges/ios/cordova.js:5272"
        },
        {
            "message": "Missing item type\nGetter/Setter for the logging level\n\nReturns the current logging level.\n\nWhen a value is passed, sets the logging level to that value.\nThe values should be one of the following constants:\n   logger.LOG\n   logger.ERROR\n   logger.WARN\n   logger.INFO\n   logger.DEBUG\n\nThe value used determines which messages get printed.  The logging\nvalues above are in order, and only messages logged at the logging\nlevel or above will actually be displayed to the user.  E.g., the\ndefault level is WARN, so only messages logged with LOG, ERROR, or\nWARN will be displayed; INFO and DEBUG messages will be ignored.",
            "line": " demo/merges/ios/cordova.js:5298"
        },
        {
            "message": "Missing item type\nGetter/Setter for the useConsole functionality\n\nWhen useConsole is true, the logger will log via the\nbrowser 'console' object.  Otherwise, it will use the\nnative Logger plugin.",
            "line": " demo/merges/ios/cordova.js:5328"
        },
        {
            "message": "Missing item type\nLogs a message at the LOG level.\n\nParameters passed after message are used applied to\nthe message with utils.format()",
            "line": " demo/merges/ios/cordova.js:5357"
        },
        {
            "message": "Missing item type\nLogs a message at the ERROR level.\n\nParameters passed after message are used applied to\nthe message with utils.format()",
            "line": " demo/merges/ios/cordova.js:5365"
        },
        {
            "message": "Missing item type\nLogs a message at the WARN level.\n\nParameters passed after message are used applied to\nthe message with utils.format()",
            "line": " demo/merges/ios/cordova.js:5373"
        },
        {
            "message": "Missing item type\nLogs a message at the INFO level.\n\nParameters passed after message are used applied to\nthe message with utils.format()",
            "line": " demo/merges/ios/cordova.js:5381"
        },
        {
            "message": "Missing item type\nLogs a message at the DEBUG level.\n\nParameters passed after message are used applied to\nthe message with utils.format()",
            "line": " demo/merges/ios/cordova.js:5389"
        },
        {
            "message": "Missing item type\nLogs a message at the specified level.\n\nParameters passed after message are used applied to\nthe message with utils.format()",
            "line": " demo/merges/ios/cordova.js:5403"
        },
        {
            "message": "Missing item type\nGet connection info",
            "line": " demo/merges/ios/cordova.js:5508"
        },
        {
            "message": "Missing item type\nProvides access to notifications on the device.",
            "line": " demo/merges/ios/cordova.js:5576"
        },
        {
            "message": "Missing item type\nOpen a native alert dialog, with a customizable title and button text.",
            "line": " demo/merges/ios/cordova.js:5582"
        },
        {
            "message": "Missing item type\nOpen a native confirm dialog, with a customizable title and button text.\nThe result that the user selects is returned to the result callback.",
            "line": " demo/merges/ios/cordova.js:5596"
        },
        {
            "message": "Missing item type\nCauses the device to vibrate.",
            "line": " demo/merges/ios/cordova.js:5611"
        },
        {
            "message": "Missing item type\nCauses the device to beep.\nOn Android, the default notification ringtone is played \"count\" times.",
            "line": " demo/merges/ios/cordova.js:5620"
        },
        {
            "message": "Missing item type\nRequest a file system in which to store application data.",
            "line": " demo/merges/ios/cordova.js:5652"
        },
        {
            "message": "Missing item type\nLook up file system Entry referred to by local URI.",
            "line": " demo/merges/ios/cordova.js:5699"
        },
        {
            "message": "Missing item type\nDefines a property getter / setter for obj[key].",
            "line": " demo/merges/ios/cordova.js:5785"
        },
        {
            "message": "Missing item type\nDefines a property getter for obj[key].",
            "line": " demo/merges/ios/cordova.js:5806"
        },
        {
            "message": "Missing item type\nReturns whether the item was found in the array.",
            "line": " demo/merges/ios/cordova.js:5824"
        },
        {
            "message": "Missing item type\nReturns an indication of whether the argument is an array or not",
            "line": " demo/merges/ios/cordova.js:5839"
        },
        {
            "message": "Missing item type\nReturns an indication of whether the argument is a Date or not",
            "line": " demo/merges/ios/cordova.js:5846"
        },
        {
            "message": "Missing item type\nDoes a deep clone of the object.",
            "line": " demo/merges/ios/cordova.js:5853"
        },
        {
            "message": "Missing item type\nReturns a wrapped version of the function",
            "line": " demo/merges/ios/cordova.js:5880"
        },
        {
            "message": "Missing item type\nCreate a UUID",
            "line": " demo/merges/ios/cordova.js:5895"
        },
        {
            "message": "Missing item type\nExtends a child object from a parent object using classical inheritance\npattern.",
            "line": " demo/merges/ios/cordova.js:5906"
        },
        {
            "message": "Missing item type\nAlerts a message in any available way: alert or console.log.",
            "line": " demo/merges/ios/cordova.js:5922"
        },
        {
            "message": "Missing item type\nFormats a string and arguments following it ala sprintf()\n\nsee utils.vformat() for more information",
            "line": " demo/merges/ios/cordova.js:5933"
        },
        {
            "message": "Missing item type\nFormats a string and arguments following it ala vsprintf()\n\nformat chars:\n  %j - format arg as JSON\n  %o - format arg as JSON\n  %c - format arg as ''\n  %% - replace with '%'\nany other char following % will format it's\narg via toString().\n\nfor rationale, see FireBug's Console API:\n   http://getfirebug.com/wiki/index.php/Console_API",
            "line": " demo/merges/ios/cordova.js:5943"
        },
        {
            "message": "Missing item type\nCreate all cordova objects once page has fully loaded and native side is ready.",
            "line": " demo/merges/ios/cordova.js:6043"
        },
        {
            "message": "Missing item type\nBASE PKOBJECT\n\n*****************************************************************************\nThe Object class provides the top object that all other objects inherit\n from. This provides object inheritance via a subclass/superclass mechanism\n without having to worry about prototype or constructor inheritance.\nPKObjects provide simple subclassing and a limited form of KVO in the form\n of tags and tag listeners.",
            "line": " demo/platforms/android/assets/www/framework/PKObject.js:1"
        },
        {
            "message": "Missing item type\nWe need a way to provide inheritance. Most methods only provide\n inheritance across the constructor chain, not across any possible\n method. But for our purposes, we need to be able to provide for\n overriding any method (such as drawing, touch responses, etc.),\n and so we implement inheritance in a different way.\nFirst, the _classHierarchy, a private property, provides the\n inheritance tree. All objects inherit from \"Object\".",
            "line": " demo/platforms/android/assets/www/framework/PKObject.js:38"
        },
        {
            "message": "Missing item type\nObjects are subclassed using this method. The newClass is the\n unique class name of the object (and should match the class'\n actual name.",
            "line": " demo/platforms/android/assets/www/framework/PKObject.js:52"
        },
        {
            "message": "Missing item type\ngetClass returns the current class of the object. The\n \"class\" property can be used as well. Note that there\n is no \"setter\" for this property; an object's class\n can *not* be changed.",
            "line": " demo/platforms/android/assets/www/framework/PKObject.js:64"
        },
        {
            "message": "Missing item type\nReturns the super class for the given class. If the\n class is not supplied, the class is assumed to be the\n object's own class.\nThe property \"superClass\" uses this to return the\n object's direct superclass, but getSuperClassOfClass\n can be used to determine superclasses higher up\n the hierarchy.",
            "line": " demo/platforms/android/assets/www/framework/PKObject.js:78"
        },
        {
            "message": "Missing item type\n_super is an object that stores overridden functions by class and method\n name. This is how we get the ability to arbitrarily override any method\n already present in the superclass.",
            "line": " demo/platforms/android/assets/www/framework/PKObject.js:105"
        },
        {
            "message": "Missing item type\nMust be called prior to defining the overridden function as this moves\n the original function into the _super object. The functionName must\n match the name of the method exactly, since there may be a long tree\n of code that depends on it.",
            "line": " demo/platforms/android/assets/www/framework/PKObject.js:114"
        },
        {
            "message": "Missing item type\nCalls a super function with up to 10 arguments.",
            "line": " demo/platforms/android/assets/www/framework/PKObject.js:132"
        },
        {
            "message": "Missing item type\ninitializes the object",
            "line": " demo/platforms/android/assets/www/framework/PKObject.js:151"
        },
        {
            "message": "Missing item type\nObjects have some properties that we want all objects to have...",
            "line": " demo/platforms/android/assets/www/framework/PKObject.js:161"
        },
        {
            "message": "Missing item type\nAll objects subject notifications for events",
            "line": " demo/platforms/android/assets/www/framework/PKObject.js:210"
        },
        {
            "message": "Missing item type\n//http://stackoverflow.com/a/11462081\nfunction clone(obj){\n    var clonedObjectsArray = [];\n    var originalObjectsArray = []; //used to remove the unique ids when finished\n    var next_objid = 0;\n\n    function objectId(obj) {\n        if (obj == null) return null;\n        if (obj.__obj_id == undefined){\n            obj.__obj_id = next_objid++;\n            originalObjectsArray[obj.__obj_id] = obj;\n        }\n        return obj.__obj_id;\n    }\n\n    function cloneRecursive(obj) {\n        if (null == obj || typeof obj == \"string\" || typeof obj == \"number\" || typeof obj == \"boolean\") return obj;\n\n        // Handle Date\n        if (obj instanceof Date) {\n            var copy = new Date();\n            copy.setTime(obj.getTime());\n            return copy;\n        }\n\n        // Handle Array\n        if (obj instanceof Array) {\n            var copy = [];\n            for (var i = 0; i < obj.length; ++i) {\n                copy[i] = cloneRecursive(obj[i]);\n            }\n            return copy;\n        }\n\n        // Handle Object\n        if (obj instanceof Object) {\n            if (clonedObjectsArray[objectId(obj)] != undefined)\n                return clonedObjectsArray[objectId(obj)];\n\n            var copy;\n            if (obj instanceof Function)//Handle Function\n                copy = function(){return obj.apply(this, arguments);};\n            else\n                copy = {};\n\n            clonedObjectsArray[objectId(obj)] = copy;\n\n            for (var attr in obj)\n                if (attr != \"__obj_id\" && obj.hasOwnProperty(attr))\n                    copy[attr] = cloneRecursive(obj[attr]);                 \n\n            return copy;\n        }       \n\n\n        throw new Error(\"Unable to copy obj! Its type isn't supported.\");\n    }\n    var cloneObj = cloneRecursive(obj);\n\n\n\n    //remove the unique ids\n    for (var i = 0; i < originalObjectsArray.length; i++)\n    {\n        delete originalObjectsArray[i].__obj_id;\n    };\n\n    return cloneObj;\n}",
            "line": " demo/platforms/android/assets/www/framework/PKObject.js:256"
        },
        {
            "message": "Missing item type\nDEVICE\n Author: Kerri Shotts\nThis library includes functions that reflect the device and its current\n state",
            "line": " demo/platforms/android/assets/www/framework/device.js:1"
        },
        {
            "message": "Missing item type\nReturns the device platform, lowercased. If PKDEVICE.platformOverride is\n other than \"false\", it is returned instead.",
            "line": " demo/platforms/android/assets/www/framework/device.js:42"
        },
        {
            "message": "Missing item type\nReturns the device's form factor. Possible values are \"tablet\" and\n \"phone\". If PKDEVICE.formFactorOverride is not false, it is returned\n instead.",
            "line": " demo/platforms/android/assets/www/framework/device.js:97"
        },
        {
            "message": "Missing item type\nDetermines if the device is in Portrait orientation.",
            "line": " demo/platforms/android/assets/www/framework/device.js:128"
        },
        {
            "message": "Missing item type\nDetermines if the device is in Landscape orientation.",
            "line": " demo/platforms/android/assets/www/framework/device.js:137"
        },
        {
            "message": "Missing item type\nDetermines if the device is a hiDPI device (aka retina)",
            "line": " demo/platforms/android/assets/www/framework/device.js:150"
        },
        {
            "message": "Missing item type\nFILEUTIL\n Author: Kerri Shotts\nThis library includes routines to deal with the FILE API, (which is... a bit\n painful.) The purpose of the library is to reduce the amount of work necessary\n to go through obtaining a file system, working with directories and files,\n etc. That isn't to say that we can eliminate callbacks or even callback\n chaining -- but it is significantly easier without all the intervening cruft,\n which is essentially (for all intents and purposes) boilerplate.\nIMPORTANT NOTE:\nThis library provides various conveniences that make referencing persistent\n and temporary storage a bit easier as well. For example, you can use a\n path like the following:\n    doc://photo.jpg   -->   /some/gobbledygook/yourApp/Documents/photo.jpg\n     tmp://photo.jpg   -->   /some/gobbledygook/yourApp/tmp/photo.jpg\nSeveral APIs (such as camera capture) may also refer to paths with\n \"file://localhost\" attached. The routines will gracefully remove this so that\n the reference is a true file.\nCONVENIENCE:\nFor those who are more comfortable with *nix/BSD commands, nearly each method\n has a version that correlates to a roughly *nix name. The parameters are the\n same, however.\nMETHODS\n   copyFileTo ( source, target, success, failure )         |   cp ()\n   moveFileTo ( source, target, success, failure )         |   mv ()\n   removeFile ( theFile, success, failure )                |   rm ()\n   renameFile ( source, newName, success, failure )        |   -\n   createFileWriter ( theFile, success, failure )          |   fcreate ()\n   writeFileData ( writer, theData, success, failure )     |   fwrite ()\nPLANNED METHODS\n  getListing ( path, filters, success, failure )          |    ls ()\n   createDirectory ( path, newDirectory, success, failure )|    mkdir()\n   removeDirectory ( path, theDirectory, success, failure )|    rmdir()\n   createFileReader ( theFile, success, failure )          |    fopen()\n   readFileData ( reader, success, failure )               |    fread()",
            "line": " demo/platforms/android/assets/www/framework/fileutil.js:1"
        },
        {
            "message": "Missing item type\nDetermines the persistent and temporary file systems prior\n to file operations. While it's unlikely that these will\n change during application execution, it certainly doesn't\n hurt to re-read them whenever possible (just in case!).\nWhen both are read, the success method is called. If we\n can't obtain one or the other, the failure method is called.",
            "line": " demo/platforms/android/assets/www/framework/fileutil.js:101"
        },
        {
            "message": "Missing item type\nHandles substition strings within a file path.\n doc:/ translates to the persistent storage. We don't use \"//\" here\n        since the persistentFS doesn't have a trailing \"/\", so we leave\n        that in the original.\n  tmp:/ translates to the temporary storage.\n  file://localhost translates to nothing.",
            "line": " demo/platforms/android/assets/www/framework/fileutil.js:140"
        },
        {
            "message": "Missing item type\nCopies the file identified by @source to the file identified by @target.\n If the copy is successful, success() is called. If not, failure() is\n called.\nThe target will generally be of the form \"doc://filename\", but it can\n be any path and file name that the application has access to.\nNOTE: Copying will fail if the target exists.",
            "line": " demo/platforms/android/assets/www/framework/fileutil.js:159"
        },
        {
            "message": "Missing item type\n*nix convenience method.",
            "line": " demo/platforms/android/assets/www/framework/fileutil.js:193"
        },
        {
            "message": "Missing item type\nMoves the file identified by @source to the file identified by @target.\n If the move is successful, success() is called. If not, failure() is\n called.\nThe target will generally be of the form \"doc://filename\", but it can\n be any path and file name that the application has access to.\nNOTE: The move will overwrite the target if it exists.",
            "line": " demo/platforms/android/assets/www/framework/fileutil.js:203"
        },
        {
            "message": "Missing item type\nConvenience method that allows renaming a file in the same\n directory as the source. The source's path will prepended\n to the new name.\nNOTE: The move will overwrite the target if it exists.",
            "line": " demo/platforms/android/assets/www/framework/fileutil.js:237"
        },
        {
            "message": "Missing item type\n*nix convenience method.",
            "line": " demo/platforms/android/assets/www/framework/fileutil.js:252"
        },
        {
            "message": "Missing item type\nRemoves the file identified by @theFile. The full path must\n be specified.",
            "line": " demo/platforms/android/assets/www/framework/fileutil.js:262"
        },
        {
            "message": "Missing item type\n*nix convenience method.",
            "line": " demo/platforms/android/assets/www/framework/fileutil.js:283"
        },
        {
            "message": "Missing item type\nCreates a fileWriter for @theFile. If successful, it will\n call success() with the created writer. If unsuccessful, it\n will call failure().\nOnce in success(), writeFileData() may be used to finish\n the writing of data to the file.\nNote: if the file exists, it will be overwritten.",
            "line": " demo/platforms/android/assets/www/framework/fileutil.js:293"
        },
        {
            "message": "Missing item type\n*nix convenience method.",
            "line": " demo/platforms/android/assets/www/framework/fileutil.js:320"
        },
        {
            "message": "Missing item type\nWrites @theData to the specified writer. When complete,\n success() will be called. If it fails, failure().",
            "line": " demo/platforms/android/assets/www/framework/fileutil.js:330"
        },
        {
            "message": "Missing item type\n*nix convenience method.",
            "line": " demo/platforms/android/assets/www/framework/fileutil.js:343"
        },
        {
            "message": "Missing item type\nlocalization.js\n Author: Kerri Shotts\nProvides simple localization, as described in Chapter 1 of PhoneGap HotShot.\nRelies on JQuery/Globalize.js, as found at https://github.com/jquery/globalize",
            "line": " demo/platforms/android/assets/www/framework/localization.js:2"
        },
        {
            "message": "Missing item type\nLoads the JQuery Globalize script from the framework directory\n as well as the underlying cultures definitions.",
            "line": " demo/platforms/android/assets/www/framework/localization.js:49"
        },
        {
            "message": "Missing item type\nLoads the appropriate locale from the JQuery Globalize script.",
            "line": " demo/platforms/android/assets/www/framework/localization.js:59"
        },
        {
            "message": "Missing item type\nSets the current locale for the JQuery Globalize script.",
            "line": " demo/platforms/android/assets/www/framework/localization.js:72"
        },
        {
            "message": "Missing item type\nAdd a translation to the existing translation matrix",
            "line": " demo/platforms/android/assets/www/framework/localization.js:81"
        },
        {
            "message": "Missing item type\nReturn the user's locale (e.g., en-US or fr-FR)\n for proper localization.",
            "line": " demo/platforms/android/assets/www/framework/localization.js:103"
        },
        {
            "message": "Missing item type\nConvenience function for translating text.",
            "line": " demo/platforms/android/assets/www/framework/localization.js:177"
        },
        {
            "message": "Missing item type\nConvenience function for localizing numbers.",
            "line": " demo/platforms/android/assets/www/framework/localization.js:217"
        },
        {
            "message": "Missing item type\nConvenience function for localizing currency.",
            "line": " demo/platforms/android/assets/www/framework/localization.js:241"
        },
        {
            "message": "Missing item type\nConvenience function for localizing percentages.",
            "line": " demo/platforms/android/assets/www/framework/localization.js:264"
        },
        {
            "message": "Missing item type\nConvenience function for localizing dates.",
            "line": " demo/platforms/android/assets/www/framework/localization.js:285"
        },
        {
            "message": "Missing item type\nBASE PKOBJECT\n\n*****************************************************************************\nThe Object class provides the top object that all other objects inherit\n from. This provides object inheritance via a subclass/superclass mechanism\n without having to worry about prototype or constructor inheritance.\nPKObjects provide simple subclassing and a limited form of KVO in the form\n of tags and tag listeners.",
            "line": " demo/platforms/android/assets/www/framework/pk-object.js:1"
        },
        {
            "message": "Missing item type\nWe need a way to provide inheritance. Most methods only provide\n inheritance across the constructor chain, not across any possible\n method. But for our purposes, we need to be able to provide for\n overriding any method (such as drawing, touch responses, etc.),\n and so we implement inheritance in a different way.\nFirst, the _classHierarchy, a private property, provides the\n inheritance tree. All objects inherit from \"Object\".",
            "line": " demo/platforms/android/assets/www/framework/pk-object.js:42"
        },
        {
            "message": "Missing item type\nObjects are subclassed using this method. The newClass is the\n unique class name of the object (and should match the class'\n actual name.",
            "line": " demo/platforms/android/assets/www/framework/pk-object.js:56"
        },
        {
            "message": "Missing item type\ngetClass returns the current class of the object. The\n \"class\" property can be used as well. Note that there\n is no \"setter\" for this property; an object's class\n can *not* be changed.",
            "line": " demo/platforms/android/assets/www/framework/pk-object.js:68"
        },
        {
            "message": "Missing item type\nReturns the super class for the given class. If the\n class is not supplied, the class is assumed to be the\n object's own class.\nThe property \"superClass\" uses this to return the\n object's direct superclass, but getSuperClassOfClass\n can be used to determine superclasses higher up\n the hierarchy.",
            "line": " demo/platforms/android/assets/www/framework/pk-object.js:82"
        },
        {
            "message": "Missing item type\n_super is an object that stores overridden functions by class and method\n name. This is how we get the ability to arbitrarily override any method\n already present in the superclass.",
            "line": " demo/platforms/android/assets/www/framework/pk-object.js:109"
        },
        {
            "message": "Missing item type\nMust be called prior to defining the overridden function as this moves\n the original function into the _super object. The functionName must\n match the name of the method exactly, since there may be a long tree\n of code that depends on it.",
            "line": " demo/platforms/android/assets/www/framework/pk-object.js:118"
        },
        {
            "message": "Missing item type\nCalls a super function with up to 10 arguments.",
            "line": " demo/platforms/android/assets/www/framework/pk-object.js:136"
        },
        {
            "message": "Missing item type\ninitializes the object",
            "line": " demo/platforms/android/assets/www/framework/pk-object.js:155"
        },
        {
            "message": "Missing item type\nObjects have some properties that we want all objects to have...",
            "line": " demo/platforms/android/assets/www/framework/pk-object.js:165"
        },
        {
            "message": "Missing item type\nAll objects subject notifications for events",
            "line": " demo/platforms/android/assets/www/framework/pk-object.js:214"
        },
        {
            "message": "Missing item type\n//http://stackoverflow.com/a/11462081\nfunction clone(obj){\n    var clonedObjectsArray = [];\n    var originalObjectsArray = []; //used to remove the unique ids when finished\n    var next_objid = 0;\n\n    function objectId(obj) {\n        if (obj == null) return null;\n        if (obj.__obj_id == undefined){\n            obj.__obj_id = next_objid++;\n            originalObjectsArray[obj.__obj_id] = obj;\n        }\n        return obj.__obj_id;\n    }\n\n    function cloneRecursive(obj) {\n        if (null == obj || typeof obj == \"string\" || typeof obj == \"number\" || typeof obj == \"boolean\") return obj;\n\n        // Handle Date\n        if (obj instanceof Date) {\n            var copy = new Date();\n            copy.setTime(obj.getTime());\n            return copy;\n        }\n\n        // Handle Array\n        if (obj instanceof Array) {\n            var copy = [];\n            for (var i = 0; i < obj.length; ++i) {\n                copy[i] = cloneRecursive(obj[i]);\n            }\n            return copy;\n        }\n\n        // Handle Object\n        if (obj instanceof Object) {\n            if (clonedObjectsArray[objectId(obj)] != undefined)\n                return clonedObjectsArray[objectId(obj)];\n\n            var copy;\n            if (obj instanceof Function)//Handle Function\n                copy = function(){return obj.apply(this, arguments);};\n            else\n                copy = {};\n\n            clonedObjectsArray[objectId(obj)] = copy;\n\n            for (var attr in obj)\n                if (attr != \"__obj_id\" && obj.hasOwnProperty(attr))\n                    copy[attr] = cloneRecursive(obj[attr]);                 \n\n            return copy;\n        }       \n\n\n        throw new Error(\"Unable to copy obj! Its type isn't supported.\");\n    }\n    var cloneObj = cloneRecursive(obj);\n\n\n\n    //remove the unique ids\n    for (var i = 0; i < originalObjectsArray.length; i++)\n    {\n        delete originalObjectsArray[i].__obj_id;\n    };\n\n    return cloneObj;\n}",
            "line": " demo/platforms/android/assets/www/framework/pk-object.js:261"
        },
        {
            "message": "Missing item type\nSCROLLER\n Author:  Kerri Shotts\n Version: 0.1 alpha\n License: MIT\nThis library is intended to be similar to iScroll-lite in that it should be\n a relatively fast method of scrolling content without being horribly laggy\n or cause incorrect \"clicks\" to be registered.\nThis library does *NOT* support physics-based scrolling, except for a small\n inertia animation at the end of a scroll. It is not intended to replicate\n native scrolling /at all/. There are no bounces at the top or bottom. There\n is no visible scroll bar either. Essentially, overflow:scroll as supported\n on iOS 5 with no bounce/inertia scrolling.\nConsider this library an experiment. The idea is to be simpler than iScroll\n to use -- for example, the scroller only needs to be created once -- it does\n not need to be refreshed when AJAX content loads. It is intended to be at\n least as fast as iScroll, if not a little faster. It is not, however,\n intended to be a native scrolling solution. At this time, I do not believe\n it truly possible or practice, and users will notice any non-native solution\n that tries to match, so why try?\nUsage:\nvar yourScroller = new SCROLLER.GenericScroller ( \"the_element_to_scroll\" );\nwhere you have the following DOM tree:\n    container_element\n     - the_element_to_scroll\nFuture Goals:\n - Detect native physics scrolling and use it when possible\n  - Detect native overflow:scroll (non-physics) and use it when possible\n  - Improve the inertial scrolling at end (this is a very rough implementation)\n  - Become irrelevant. I hope for a day when all mobile browsers can scroll\n    complex content natively and smoothly.\nSupported Platforms:\n - Android 2.3+\n  - iOS 4.3+\n  - probably any webkit browser?\nKnown Issues:\n  - A little too willing to call a scroll a \"click\".",
            "line": " demo/platforms/android/assets/www/framework/scroller.js:1"
        },
        {
            "message": "Missing item type\nAttaches the scroller to a new element. The element MUST be contained within\n another element that can support the setting of scrollTop/Left.\nAny overflow values will be overridden. Any webkit transforms may also be\n overridden.",
            "line": " demo/platforms/android/assets/www/framework/scroller.js:107"
        },
        {
            "message": "Missing item type\nGet the scroll position",
            "line": " demo/platforms/android/assets/www/framework/scroller.js:148"
        },
        {
            "message": "Missing item type\nScroll to a given location. If the location can't be scrolled to,\n the nearest location will be used.",
            "line": " demo/platforms/android/assets/www/framework/scroller.js:161"
        },
        {
            "message": "Missing item type\ntouchStart initializes all our values when a touch is received.",
            "line": " demo/platforms/android/assets/www/framework/scroller.js:174"
        },
        {
            "message": "Missing item type\nWhen a touch moves, we'll receive the event here.",
            "line": " demo/platforms/android/assets/www/framework/scroller.js:204"
        },
        {
            "message": "Missing item type\nWhen a finger is lifted from the screen, we'll get this event.\n We can determine whether or not it was a click if we scrolled at all,\n and if we scrolled a certain distance, we'll do a little inertial\n scrolling",
            "line": " demo/platforms/android/assets/www/framework/scroller.js:238"
        },
        {
            "message": "Missing item type\nUI-BASE\n Author: Kerri Shotts\n Version: 0.3\nThis provides the basics of the UI model, including poings, rects, and more.",
            "line": " demo/platforms/android/assets/www/framework/ui-base.js:1"
        },
        {
            "message": "Missing item type\nPoints are of the form { x: #, y: # }",
            "line": " demo/platforms/android/assets/www/framework/ui-base.js:37"
        },
        {
            "message": "Missing item type\noffsets a point by the values in another point. For example,\n if pointA = { x:100, y:100 } and pointB = { x:-5, y:10 }, the\n returned point will be { x:95, y:110 }.",
            "line": " demo/platforms/android/assets/www/framework/ui-base.js:50"
        },
        {
            "message": "Missing item type\nSizes are similar to points, but they are of the form\n { w: width, h: height }",
            "line": " demo/platforms/android/assets/www/framework/ui-base.js:62"
        },
        {
            "message": "Missing item type\nRects are of the form { origin: point, size: size }, or\n { origin: {x: #, y: #}, size: {w: width, h: height} }",
            "line": " demo/platforms/android/assets/www/framework/ui-base.js:89"
        },
        {
            "message": "Missing item type\nOffsets a rect's origin point by the supplied point.",
            "line": " demo/platforms/android/assets/www/framework/ui-base.js:105"
        },
        {
            "message": "Missing item type\nOffsets a rect's origin by the origin of the second rect,\n and offsets the rect's size by the size of the second rect.\nThis implies that the second rect does not need to be \"real\",\n as in, it can have negative sizes and such.",
            "line": " demo/platforms/android/assets/www/framework/ui-base.js:115"
        },
        {
            "message": "Missing item type\nReturns true if the two rects supplied intersect. Note that this\n will not work if the rectangles are non-canonical.",
            "line": " demo/platforms/android/assets/www/framework/ui-base.js:130"
        },
        {
            "message": "Missing item type\nThink of these as constants, except you have to call them like a \n method.\nzeroPoint() returns a point of {0,0}\n zeroSize() returns a size of {0,0}\n zeroRect() returns a rect of { {0,0}, {0,0} }\n screenSize() returns a **point** representing the size of the screen (or browser).\n screenBounds() returns a **rect** representing the size of the screen (with a {0,0} origin).",
            "line": " demo/platforms/android/assets/www/framework/ui-base.js:155"
        },
        {
            "message": "Missing item type\nfonts",
            "line": " demo/platforms/android/assets/www/framework/ui-base.js:173"
        },
        {
            "message": "Missing item type\nShadows",
            "line": " demo/platforms/android/assets/www/framework/ui-base.js:237"
        },
        {
            "message": "Missing item type\nColors",
            "line": " demo/platforms/android/assets/www/framework/ui-base.js:314"
        },
        {
            "message": "Missing item type\nImages",
            "line": " demo/platforms/android/assets/www/framework/ui-base.js:361"
        },
        {
            "message": "Missing item type\nborders",
            "line": " demo/platforms/android/assets/www/framework/ui-base.js:458"
        },
        {
            "message": "Missing item type\nevents",
            "line": " demo/platforms/android/assets/www/framework/ui-base.js:554"
        },
        {
            "message": "Missing item type\nUI-CORE\n Author: Kerri Shotts\nThis script provides a lot of the core user interface framework, such as\n loading content via AJAX, transitions, and more.",
            "line": " demo/platforms/android/assets/www/framework/ui-core.js:1"
        },
        {
            "message": "Missing item type\nGlobal back button handler, since doing it per-view and per-\n message is buggy. This will call backButtonPressed() on any\n active message or view. If said method isn't found, it will\n pop the view on its own.\nNOTE: if backButtonPressed() is defined, it is expected to\n pop the view, if the method is also a view. If the view is\n not popped, the back button will have no effect.\nSECOND NOTE: Since back buttons received in quick succession\n are problematic, we force the user to wait 1s before the next\n back button is accepted.",
            "line": " demo/platforms/android/assets/www/framework/ui-core.js:84"
        },
        {
            "message": "Missing item type\nInitializes the application framework\n  - in this version of the framework, we force an orientation update.\n  - by default, we attach a global back button handler\n  - we deisable animations and transforms for Android and WP7.",
            "line": " demo/platforms/android/assets/www/framework/ui-core.js:129"
        },
        {
            "message": "Missing item type\nCalled on first-start and whenever the orientation changes. It updates the\n body's class to reflect the device, formfactor, orientation, and scaling.",
            "line": " demo/platforms/android/assets/www/framework/ui-core.js:177"
        },
        {
            "message": "Missing item type\nShows a view and pushes it on the viewStack. NO ANIMATION.\n DOES NOT PROPERLY CALL viewWillHide/viewDidHide of any view, since there\n may be no view visible.",
            "line": " demo/platforms/android/assets/www/framework/ui-core.js:261"
        },
        {
            "message": "Missing item type\nHides a view and pops it off the viewStack. NO ANIMATION.\n DOES NOT ATTEMPT TO CALL viewWillShow or viewDidShow of any view\n on the stack, as there may not be any view visible.",
            "line": " demo/platforms/android/assets/www/framework/ui-core.js:288"
        },
        {
            "message": "Missing item type\nSwaps a view on the stack with the desired view. NO ANIMATION.",
            "line": " demo/platforms/android/assets/www/framework/ui-core.js:314"
        },
        {
            "message": "Missing item type\nShows a view WITH ANIMATION and pushes it onto the view stack.\n The animation is a slide from right to left.",
            "line": " demo/platforms/android/assets/www/framework/ui-core.js:505"
        },
        {
            "message": "Missing item type\nHides a view WITH ANIMATION and pops it from the stack.",
            "line": " demo/platforms/android/assets/www/framework/ui-core.js:664"
        },
        {
            "message": "Missing item type\nApplies touch listeners to various items in the dom.\nIn this version of the framework, we apply it to BUTTONs.",
            "line": " demo/platforms/android/assets/www/framework/ui-core.js:924"
        },
        {
            "message": "Missing item type\nUI-GESTURES\n Author:  Kerri Shotts\n Version: 0.1 alpha\n License: MIT\nA simple, no-frills gesture recognizer. Permits long-press recognition,\n horizontal swipe recognition, and vertical swipe recognition. Recognizing\n swipes in a particular direction (left, right, up, down) should be easy to\n add later.\nThe SimpleGesture class represents the basic recognizer -- it implements all\n the tracking of touch and mouse events. Every 100ms it calls\n a recognition function, which by default does nothing. Essentially, Simple-\n Gesture is abstract. This method is expected to be overridden by a specific\n recognizer, which the LongPressGesture, HorizontalSwipeGesture, and\n VerticalSwipeGesture do.\nThe LongPressGesture will fire off an event when a longpress is recognized.\n How this is recognized is partially defined by the caller -- that is,\n two durations can be supplied. By default, the long-press is recognized at\n 1s and cancelled at 3s (assuming no previous recognition). It is also\n cancelled should any movement outside of a 25px radius occur.\nThe HorizontalSwipeGesture and VerticalSwipeGesture will fire off an event\n when a swipe in the given axis is detected. This swipe is detected when the\n length of the swipe exceeds 75px (or the provided override), and will be\n fired as long as the duration of the swipe is less than the cancel duration\n (3s by default). The line must not deviate by more than 25px in the specified\n axis, or the gesture will fail to be recognized.\nUsage:\nvar anElement = document.getElementById(\"abc\");\n var aLongPressGesture = new GESTURES.LongPressGesture\n                             ( anElement, theFunctionToCallWhenRecognized,\n                               [ thePressDuration, [ theCancelDelay ]] );\nvar aHorizontalSwipeGesture = new GESTURES.HorizontalSwipeGesture\n                               ( anElement, theFunctionToCallWhenRecognized,\n                                 [ theSwipeLength, [ theCancelDelay ]] );\nvar aVerticalSwipeGesture = new GESTURES.VerticalSwipeGesture\n                             ( anElement, theFunctionToCallWhenRecognized,\n                               [ theSwipeLength, [ theCancelDelay ]] );\n\nWhere: anElement is an HTML DOM element\n        theFunctionToCallWhenRecognized is a function that will be called\n            when the gesture is recognized. It will be passed the recognizer,\n            and as such, one can store & retrieve data in this manner:\n                aLongPressGesture.data = \"Hello\";\n                 function theFunctionToCallWhenRecognized ( gr )\n                 { alert (gr.data); }\n           This will generate an alert of \"Hello\" when the element is long-\n            pressed.\n       thePressDuration: Optional, defaults to 1s. The amount of time required\n            to recognize a long-press.\n        theSwipeLength: Optional, defaults to 75px. The length of a swipe\n            required to recognize a swipe.\n        theCancelDelay: Optional, defaults to 3s. If a gesture is not recognized\n            prior to this delay, the gesture is cancelled, that is, it will\n            never be recognized.",
            "line": " demo/platforms/android/assets/www/framework/ui-gestures.js:1"
        },
        {
            "message": "Missing item type\nUI-LABEL\n Author: Kerri Shotts\n Version: 0.3\nUI-LABEL provides the UI.Label object",
            "line": " demo/platforms/android/assets/www/framework/ui-label.js:1"
        },
        {
            "message": "Missing item type\nlabels have the following properties:\n  - text (properlly innerHTML)\n  - textColor ( font Color )\n  - shadow\n  - shadowColor\n  - shadowOffset\n  - textAlignment\n  - font",
            "line": " demo/platforms/android/assets/www/framework/ui-label.js:48"
        },
        {
            "message": "Missing item type\ninit",
            "line": " demo/platforms/android/assets/www/framework/ui-label.js:124"
        },
        {
            "message": "Missing item type\nUI-MSG\n Author: Kerri Shotts\nThis script provides a mechanism by which alerts, prompts, and confirmations\n can be displayed to the end user.",
            "line": " demo/platforms/android/assets/www/framework/ui-msg.js:1"
        },
        {
            "message": "Missing item type\nUI-VIEW\n Author: Kerri Shotts\n Version: 0.3\nUI-VIEW provides the UI.View object",
            "line": " demo/platforms/android/assets/www/framework/ui-view.js:1"
        },
        {
            "message": "Missing item type\nAll views have direct DOM representations",
            "line": " demo/platforms/android/assets/www/framework/ui-view.js:60"
        },
        {
            "message": "Missing item type\nAll views have subviews",
            "line": " demo/platforms/android/assets/www/framework/ui-view.js:66"
        },
        {
            "message": "Missing item type\nAll views have bounds and frames.",
            "line": " demo/platforms/android/assets/www/framework/ui-view.js:104"
        },
        {
            "message": "Missing item type\nrecalculates the element's position based on\n the frame. It also calls calcElement() for the\n object, if defined. After that, it calls the\n _calcElement for every subview, in case they\n decide to be re-positioned.",
            "line": " demo/platforms/android/assets/www/framework/ui-view.js:210"
        },
        {
            "message": "Missing item type\nEvery view has a background color, even if it is transparent.",
            "line": " demo/platforms/android/assets/www/framework/ui-view.js:263"
        },
        {
            "message": "Missing item type\nEvery view can have a background image",
            "line": " demo/platforms/android/assets/www/framework/ui-view.js:283"
        },
        {
            "message": "Missing item type\nEvery view can also have a border",
            "line": " demo/platforms/android/assets/www/framework/ui-view.js:302"
        },
        {
            "message": "Missing item type\nAnd every view can also have multiple shadows",
            "line": " demo/platforms/android/assets/www/framework/ui-view.js:323"
        },
        {
            "message": "Missing item type\nEvery view can be shown or hidden",
            "line": " demo/platforms/android/assets/www/framework/ui-view.js:352"
        },
        {
            "message": "Missing item type\nEvery view has opacity",
            "line": " demo/platforms/android/assets/www/framework/ui-view.js:376"
        },
        {
            "message": "Missing item type\nViews can override their scrolling",
            "line": " demo/platforms/android/assets/www/framework/ui-view.js:398"
        },
        {
            "message": "Missing item type\nevent processing",
            "line": " demo/platforms/android/assets/www/framework/ui-view.js:416"
        },
        {
            "message": "Missing item type\ninit",
            "line": " demo/platforms/android/assets/www/framework/ui-view.js:500"
        },
        {
            "message": "Missing item type\nUTILITY\n Author: Kerri Shotts\nThis library includes simple utility functions",
            "line": " demo/platforms/android/assets/www/framework/utility.js:1"
        },
        {
            "message": "Missing item type\nChecks to see if the dependency has already been loaded.",
            "line": " demo/platforms/android/assets/www/framework/utility.js:46"
        },
        {
            "message": "Missing item type\nReturns an element specified by elementId. Similar to (but not exactly like) jQuery's $()",
            "line": " demo/platforms/android/assets/www/framework/utility.js:105"
        },
        {
            "message": "Missing item type\nReturns an element specified by elementId, but with localization. Localization assumes\n you have at least one element of the form <elementId_enus>, and that all other localized\n elements have the locale after the elementId appended with an underscore.\n (eg: thisElementIsLocalized_enus and thisElementIsLocalized_eses)",
            "line": " demo/platforms/android/assets/www/framework/utility.js:115"
        },
        {
            "message": "Missing item type\nSimilar to $$. Returns all classes matching a selector.",
            "line": " demo/platforms/android/assets/www/framework/utility.js:153"
        },
        {
            "message": "Missing item type\nUtility function to delay execution of code",
            "line": " demo/platforms/android/assets/www/framework/utility.js:163"
        },
        {
            "message": "Missing item type\nLoads a file or URL and returns it to the completion\n handler. The completion handler must be of the form\n fn(success/failure, data).",
            "line": " demo/platforms/android/assets/www/framework/utility.js:172"
        },
        {
            "message": "Missing item type\nJavascript doesn't provide any native include functionality,\n which tends to bloat code and result in long scripts that are\n brittle. Here's our tiny effort to help stem the tide and\n make Javascript just a /little/ nicer.\nNOTE: includes are loaded SYNCHRONOUSLY. This is done as further\n includes may rely upon the one being loaded now. However, it does\n mean that larger files may take longer to process.",
            "line": " demo/platforms/android/assets/www/framework/utility.js:272"
        },
        {
            "message": "Missing item type\nLoads an HTML fragment, creates a DIV, and adds it to the DOM.\n Any script tags inside will be executed.",
            "line": " demo/platforms/android/assets/www/framework/utility.js:314"
        },
        {
            "message": "Missing item type\nRetrieves a JSON string from the specified URL, and executes completion.\n Completion must be of the form ( success, data ).",
            "line": " demo/platforms/android/assets/www/framework/utility.js:407"
        },
        {
            "message": "Missing item type\nLoads a URL in a popup window. Uses ChildBrowser for PG 2.2.x or\n lower, and in-app browser for 2.3 or higher.",
            "line": " demo/platforms/android/assets/www/framework/utility.js:442"
        },
        {
            "message": "Missing item type\ninstanceOfTemplate returns an HTML string ready for insertion into the DOM\n as an instance of the supplied template (templateElement). Any %VAR% are\n replaced by VAR from the replacements object.",
            "line": " demo/platforms/android/assets/www/framework/utility.js:476"
        },
        {
            "message": "Missing item type\nFilename Handling",
            "line": " demo/platforms/android/assets/www/framework/utility.js:496"
        },
        {
            "message": "Missing item type\nListen for DOMContentLoaded and notify our channel subscribers.",
            "line": " demo/platforms/android/assets/www/cordova.js:99"
        },
        {
            "message": "Missing item type\nIntercept calls to addEventListener + removeEventListener and handle deviceready,\nresume, and pause events.",
            "line": " demo/platforms/android/assets/www/cordova.js:109"
        },
        {
            "message": "Missing item type\nHouses custom event handlers to intercept on document + window event listeners.",
            "line": " demo/platforms/android/assets/www/cordova.js:118"
        },
        {
            "message": "Missing item type\nMethods to add/remove your own addEventListener hijacking on document + window.",
            "line": " demo/platforms/android/assets/www/cordova.js:184"
        },
        {
            "message": "Missing item type\nRetrieve original event handlers that were replaced by Cordova",
            "line": " demo/platforms/android/assets/www/cordova.js:202"
        },
        {
            "message": "Missing item type\nMethod to fire event from native code\nbNoDetach is required for events which cause an exception which needs to be caught in native code",
            "line": " demo/platforms/android/assets/www/cordova.js:211"
        },
        {
            "message": "Missing item type\nPlugin callback mechanism.",
            "line": " demo/platforms/android/assets/www/cordova.js:241"
        },
        {
            "message": "Missing item type\nCalled by native code when returning successful result from an action.",
            "line": " demo/platforms/android/assets/www/cordova.js:261"
        },
        {
            "message": "Missing item type\nCalled by native code when returning error result from an action.",
            "line": " demo/platforms/android/assets/www/cordova.js:272"
        },
        {
            "message": "Missing item type\nCalled by native code when returning the result from an action.",
            "line": " demo/platforms/android/assets/www/cordova.js:285"
        },
        {
            "message": "Missing item type\nMerge properties from one object onto another recursively.  Properties from\nthe src object will overwrite existing target property.",
            "line": " demo/platforms/android/assets/www/cordova.js:463"
        },
        {
            "message": "Missing item type\nCustom pub-sub \"channel\" that can have functions subscribed to it\nThis object is used to define and control firing of events for\ncordova initialization, as well as for custom events thereafter.\n\nThe order of events during page load and Cordova startup is as follows:\n\nonDOMContentLoaded*         Internal event that is received when the web page is loaded and parsed.\nonNativeReady*              Internal event that indicates the Cordova native side is ready.\nonCordovaReady*             Internal event fired when all Cordova JavaScript objects have been created.\nonCordovaInfoReady*         Internal event fired when device properties are available.\nonCordovaConnectionReady*   Internal event fired when the connection property has been set.\nonDeviceReady*              User event fired to indicate that Cordova is ready\nonResume                    User event fired to indicate a start/resume lifecycle event\nonPause                     User event fired to indicate a pause lifecycle event\nonDestroy*                  Internal event fired when app is being destroyed (User should use window.onunload event, not this one).\n\nThe events marked with an * are sticky. Once they have fired, they will stay in the fired state.\nAll listeners that subscribe after the event is fired will be executed right away.\n\nThe only Cordova events that user code should register for are:\n     deviceready           Cordova native code is initialized and Cordova APIs can be called from JavaScript\n     pause                 App has moved to background\n     resume                App has returned to foreground\n\nListeners can be registered as:\n     document.addEventListener(\"deviceready\", myDeviceReadyListener, false);\n     document.addEventListener(\"resume\", myResumeListener, false);\n     document.addEventListener(\"pause\", myPauseListener, false);\n\nThe DOM lifecycle events should be used for saving and restoring state\n     window.onload\n     window.onunload",
            "line": " demo/platforms/android/assets/www/cordova.js:508"
        },
        {
            "message": "Missing item type\nChannel",
            "line": " demo/platforms/android/assets/www/cordova.js:544"
        },
        {
            "message": "Missing item type\nCalls the provided function only after all of the channels specified\nhave been fired. All channels must be sticky channels.",
            "line": " demo/platforms/android/assets/www/cordova.js:564"
        },
        {
            "message": "Missing item type\ncordova Channels that must fire before \"deviceready\" is fired.",
            "line": " demo/platforms/android/assets/www/cordova.js:589"
        },
        {
            "message": "Missing item type\nIndicate that a feature needs to be initialized before it is ready to be used.\nThis holds up Cordova's \"deviceready\" event until the feature has been initialized\nand Cordova.initComplete(feature) is called.",
            "line": " demo/platforms/android/assets/www/cordova.js:595"
        },
        {
            "message": "Missing item type\nIndicate that initialization code has completed and the feature is ready to be used.",
            "line": " demo/platforms/android/assets/www/cordova.js:610"
        },
        {
            "message": "Missing item type\nSubscribes the given function to the channel. Any time that\nChannel.fire is called so too will the function.\nOptionally specify an execution context for the function\nand a guid that can be used to stop subscribing to the channel.\nReturns the guid.",
            "line": " demo/platforms/android/assets/www/cordova.js:627"
        },
        {
            "message": "Missing item type\nUnsubscribes the function with the given guid from the channel.",
            "line": " demo/platforms/android/assets/www/cordova.js:663"
        },
        {
            "message": "Missing item type\nCalls all functions subscribed to this channel.",
            "line": " demo/platforms/android/assets/www/cordova.js:681"
        },
        {
            "message": "Missing item type\nExecute a cordova command.  It is up to the native side whether this action\nis synchronous or asynchronous.  The native side can return:\n     Synchronous: PluginResult object as a JSON string\n     Asynchronous: Empty string \"\"\nIf async, the native side will cordova.callbackSuccess or cordova.callbackError,\ndepending upon the result of the action.",
            "line": " demo/platforms/android/assets/www/cordova.js:781"
        },
        {
            "message": "Missing item type\nGets a picture from source defined by \"options.sourceType\", and returns the\nimage as defined by the \"options.destinationType\" option.\n\nThe defaults are sourceType=CAMERA and destinationType=FILE_URI.",
            "line": " demo/platforms/android/assets/www/cordova.js:1181"
        },
        {
            "message": "Missing item type\nA handle to an image picker popover.",
            "line": " demo/platforms/android/assets/www/cordova.js:1262"
        },
        {
            "message": "Missing item type\nEncapsulates options for iOS Popover image picker",
            "line": " demo/platforms/android/assets/www/cordova.js:1280"
        },
        {
            "message": "Missing item type\nEncapsulates all audio capture operation configuration options.",
            "line": " demo/platforms/android/assets/www/cordova.js:1300"
        },
        {
            "message": "Missing item type\nThe CaptureError interface encapsulates all errors in the Capture API.",
            "line": " demo/platforms/android/assets/www/cordova.js:1319"
        },
        {
            "message": "Missing item type\nEncapsulates all image capture operation configuration options.",
            "line": " demo/platforms/android/assets/www/cordova.js:1344"
        },
        {
            "message": "Missing item type\nEncapsulates all video capture operation configuration options.",
            "line": " demo/platforms/android/assets/www/cordova.js:1361"
        },
        {
            "message": "Missing item type\nCompassError.\nAn error code assigned by an implementation when an error has occurred",
            "line": " demo/platforms/android/assets/www/cordova.js:1380"
        },
        {
            "message": "Missing item type\nEncapsulates a set of parameters that the capture device supports.",
            "line": " demo/platforms/android/assets/www/cordova.js:1413"
        },
        {
            "message": "Missing item type\nNetwork status",
            "line": " demo/platforms/android/assets/www/cordova.js:1434"
        },
        {
            "message": "Missing item type\nConverts primitives into Complex Object\nCurrently only used for Date fields",
            "line": " demo/platforms/android/assets/www/cordova.js:1458"
        },
        {
            "message": "Missing item type\nConverts Complex objects into primitives\nOnly conversion at present is for Dates.",
            "line": " demo/platforms/android/assets/www/cordova.js:1472"
        },
        {
            "message": "Missing item type\nContains information about a single contact.",
            "line": " demo/platforms/android/assets/www/cordova.js:1496"
        },
        {
            "message": "Missing item type\nRemoves contact from device storage.",
            "line": " demo/platforms/android/assets/www/cordova.js:1533"
        },
        {
            "message": "Missing item type\nCreates a deep copy of this Contact.\nWith the contact ID set to null.",
            "line": " demo/platforms/android/assets/www/cordova.js:1551"
        },
        {
            "message": "Missing item type\nPersists contact to device storage.",
            "line": " demo/platforms/android/assets/www/cordova.js:1581"
        },
        {
            "message": "Missing item type\nContact address.",
            "line": " demo/platforms/android/assets/www/cordova.js:1615"
        },
        {
            "message": "Missing item type\nContactError.\nAn error code assigned by an implementation when an error has occurred",
            "line": " demo/platforms/android/assets/www/cordova.js:1646"
        },
        {
            "message": "Missing item type\nError codes",
            "line": " demo/platforms/android/assets/www/cordova.js:1655"
        },
        {
            "message": "Missing item type\nGeneric contact field.",
            "line": " demo/platforms/android/assets/www/cordova.js:1673"
        },
        {
            "message": "Missing item type\nContactFindOptions.",
            "line": " demo/platforms/android/assets/www/cordova.js:1695"
        },
        {
            "message": "Missing item type\nContact name.",
            "line": " demo/platforms/android/assets/www/cordova.js:1714"
        },
        {
            "message": "Missing item type\nContact organization.",
            "line": " demo/platforms/android/assets/www/cordova.js:1740"
        },
        {
            "message": "Missing item type\nThis class contains position information.",
            "line": " demo/platforms/android/assets/www/cordova.js:1769"
        },
        {
            "message": "Missing item type\nThe latitude of the position.",
            "line": " demo/platforms/android/assets/www/cordova.js:1781"
        },
        {
            "message": "Missing item type\nThe longitude of the position,",
            "line": " demo/platforms/android/assets/www/cordova.js:1785"
        },
        {
            "message": "Missing item type\nThe accuracy of the position.",
            "line": " demo/platforms/android/assets/www/cordova.js:1789"
        },
        {
            "message": "Missing item type\nThe altitude of the position.",
            "line": " demo/platforms/android/assets/www/cordova.js:1793"
        },
        {
            "message": "Missing item type\nThe direction the device is moving at the position.",
            "line": " demo/platforms/android/assets/www/cordova.js:1797"
        },
        {
            "message": "Missing item type\nThe velocity with which the device is moving at the position.",
            "line": " demo/platforms/android/assets/www/cordova.js:1801"
        },
        {
            "message": "Missing item type\nThe altitude accuracy of the position.",
            "line": " demo/platforms/android/assets/www/cordova.js:1810"
        },
        {
            "message": "Missing item type\nAn interface representing a directory on the file system.\n\n{boolean} isFile always false (readonly)\n{boolean} isDirectory always true (readonly)\n{DOMString} name of the directory, excluding the path leading to it (readonly)\n{DOMString} fullPath the absolute full path to the directory (readonly)\nTODO: implement this!!! {FileSystem} filesystem on which the directory resides (readonly)",
            "line": " demo/platforms/android/assets/www/cordova.js:1830"
        },
        {
            "message": "Missing item type\nCreates a new DirectoryReader to read entries from this directory",
            "line": " demo/platforms/android/assets/www/cordova.js:1845"
        },
        {
            "message": "Missing item type\nCreates or looks up a directory",
            "line": " demo/platforms/android/assets/www/cordova.js:1852"
        },
        {
            "message": "Missing item type\nDeletes a directory and all of it's contents",
            "line": " demo/platforms/android/assets/www/cordova.js:1872"
        },
        {
            "message": "Missing item type\nCreates or looks up a file",
            "line": " demo/platforms/android/assets/www/cordova.js:1886"
        },
        {
            "message": "Missing item type\nAn interface that lists the files and directories in a directory.",
            "line": " demo/platforms/android/assets/www/cordova.js:1917"
        },
        {
            "message": "Missing item type\nReturns a list of entries from a directory.",
            "line": " demo/platforms/android/assets/www/cordova.js:1924"
        },
        {
            "message": "Missing item type\nRepresents a file or directory on the local file system.",
            "line": " demo/platforms/android/assets/www/cordova.js:1967"
        },
        {
            "message": "Missing item type\nLook up the metadata of the entry.",
            "line": " demo/platforms/android/assets/www/cordova.js:1989"
        },
        {
            "message": "Missing item type\nSet the metadata of the entry.",
            "line": " demo/platforms/android/assets/www/cordova.js:2010"
        },
        {
            "message": "Missing item type\nMove a file or directory to a new location.",
            "line": " demo/platforms/android/assets/www/cordova.js:2025"
        },
        {
            "message": "Missing item type\nCopy a directory to a different location.",
            "line": " demo/platforms/android/assets/www/cordova.js:2064"
        },
        {
            "message": "Missing item type\nReturn a URL that can be used to identify this entry.",
            "line": " demo/platforms/android/assets/www/cordova.js:2105"
        },
        {
            "message": "Missing item type\nReturns a URI that can be used to identify this entry.",
            "line": " demo/platforms/android/assets/www/cordova.js:2113"
        },
        {
            "message": "Missing item type\nRemove a file or directory. It is an error to attempt to delete a\ndirectory that is not empty. It is an error to attempt to delete a\nroot directory of a file system.",
            "line": " demo/platforms/android/assets/www/cordova.js:2125"
        },
        {
            "message": "Missing item type\nLook up the parent DirectoryEntry of this entry.",
            "line": " demo/platforms/android/assets/www/cordova.js:2141"
        },
        {
            "message": "Missing item type\nConstructor.\nname {DOMString} name of the file, without path information\nfullPath {DOMString} the full path of the file, including the name\ntype {DOMString} mime type\nlastModifiedDate {Date} last modified date\nsize {Number} size of the file in bytes",
            "line": " demo/platforms/android/assets/www/cordova.js:2167"
        },
        {
            "message": "Missing item type\nReturns a \"slice\" of the file. Since Cordova Files don't contain the actual\ncontent, this really returns a File with adjusted start and end.\nSlices of slices are supported.\nstart {Number} The index at which to start the slice (inclusive).\nend {Number} The index at which to end the slice (exclusive).",
            "line": " demo/platforms/android/assets/www/cordova.js:2188"
        },
        {
            "message": "Missing item type\nAn interface representing a file on the file system.\n\n{boolean} isFile always true (readonly)\n{boolean} isDirectory always false (readonly)\n{DOMString} name of the file, excluding the path leading to it (readonly)\n{DOMString} fullPath the absolute full path to the file (readonly)\n{FileSystem} filesystem on which the file resides (readonly)",
            "line": " demo/platforms/android/assets/www/cordova.js:2236"
        },
        {
            "message": "Missing item type\nCreates a new FileWriter associated with the file that this FileEntry represents.",
            "line": " demo/platforms/android/assets/www/cordova.js:2251"
        },
        {
            "message": "Missing item type\nReturns a File that represents the current state of the file that this FileEntry represents.",
            "line": " demo/platforms/android/assets/www/cordova.js:2269"
        },
        {
            "message": "Missing item type\nFileError",
            "line": " demo/platforms/android/assets/www/cordova.js:2294"
        },
        {
            "message": "Missing item type\nThis class reads the mobile device file system.\n\nFor Android:\n     The root directory is the root of the file system.\n     To read from the SD card, the file name is \"sdcard/my_file.txt\"",
            "line": " demo/platforms/android/assets/www/cordova.js:2333"
        },
        {
            "message": "Missing item type\nAbort reading file.",
            "line": " demo/platforms/android/assets/www/cordova.js:2404"
        },
        {
            "message": "Missing item type\nRead text file.",
            "line": " demo/platforms/android/assets/www/cordova.js:2429"
        },
        {
            "message": "Missing item type\nRead file and return data as a base64 encoded data url.\nA data url is of the form:\n     data:[<mediatype>][;base64],<data>",
            "line": " demo/platforms/android/assets/www/cordova.js:2506"
        },
        {
            "message": "Missing item type\nRead file and return data as a binary data.",
            "line": " demo/platforms/android/assets/www/cordova.js:2580"
        },
        {
            "message": "Missing item type\nRead file and return data as a binary data.",
            "line": " demo/platforms/android/assets/www/cordova.js:2594"
        },
        {
            "message": "Missing item type\nAn interface representing a file system",
            "line": " demo/platforms/android/assets/www/cordova.js:2617"
        },
        {
            "message": "Missing item type\nFileTransfer uploads a file to a remote server.",
            "line": " demo/platforms/android/assets/www/cordova.js:2653"
        },
        {
            "message": "Missing item type\nGiven an absolute file path, uploads a file on the device to a remote server\nusing a multipart HTTP request.",
            "line": " demo/platforms/android/assets/www/cordova.js:2662"
        },
        {
            "message": "Missing item type\nDownloads a file form a given URL and saves it to the specified directory.",
            "line": " demo/platforms/android/assets/www/cordova.js:2715"
        },
        {
            "message": "Missing item type\nAborts the ongoing file transfer on this object",
            "line": " demo/platforms/android/assets/www/cordova.js:2755"
        },
        {
            "message": "Missing item type\nFileTransferError",
            "line": " demo/platforms/android/assets/www/cordova.js:2771"
        },
        {
            "message": "Missing item type\nOptions to customize the HTTP request used to upload files.",
            "line": " demo/platforms/android/assets/www/cordova.js:2795"
        },
        {
            "message": "Missing item type\nFileUploadResult",
            "line": " demo/platforms/android/assets/www/cordova.js:2820"
        },
        {
            "message": "Missing item type\nThis class writes to the mobile device file system.\n\nFor Android:\n     The root directory is the root of the file system.\n     To write to the SD card, the file name is \"sdcard/my_file.txt\"",
            "line": " demo/platforms/android/assets/www/cordova.js:2841"
        },
        {
            "message": "Missing item type\nAbort writing file.",
            "line": " demo/platforms/android/assets/www/cordova.js:2883"
        },
        {
            "message": "Missing item type\nWrites data to the file",
            "line": " demo/platforms/android/assets/www/cordova.js:2908"
        },
        {
            "message": "Missing item type\nMoves the file pointer to the location specified.\n\nIf the offset is a negative number the position of the file\npointer is rewound.  If the offset is greater than the file\nsize the position is set to the end of the file.",
            "line": " demo/platforms/android/assets/www/cordova.js:2982"
        },
        {
            "message": "Missing item type\nTruncates the file to the size specified.",
            "line": " demo/platforms/android/assets/www/cordova.js:3017"
        },
        {
            "message": "Missing item type\nSupplies arguments to methods that lookup or create files and directories.",
            "line": " demo/platforms/android/assets/www/cordova.js:3096"
        },
        {
            "message": "Missing item type\nGlobalization error object",
            "line": " demo/platforms/android/assets/www/cordova.js:3118"
        },
        {
            "message": "Missing item type\nRepresents a local file system.",
            "line": " demo/platforms/android/assets/www/cordova.js:3192"
        },
        {
            "message": "Missing item type\nThis class provides access to the device media, interfaces to both sound and video",
            "line": " demo/platforms/android/assets/www/cordova.js:3215"
        },
        {
            "message": "Missing item type\nStart or resume playing audio file.",
            "line": " demo/platforms/android/assets/www/cordova.js:3259"
        },
        {
            "message": "Missing item type\nStop playing audio file.",
            "line": " demo/platforms/android/assets/www/cordova.js:3266"
        },
        {
            "message": "Missing item type\nSeek or jump to a new time in the track..",
            "line": " demo/platforms/android/assets/www/cordova.js:3276"
        },
        {
            "message": "Missing item type\nPause playing audio file.",
            "line": " demo/platforms/android/assets/www/cordova.js:3286"
        },
        {
            "message": "Missing item type\nGet duration of an audio file.\nThe duration is only set for audio that is playing, paused or stopped.",
            "line": " demo/platforms/android/assets/www/cordova.js:3293"
        },
        {
            "message": "Missing item type\nGet position of audio.",
            "line": " demo/platforms/android/assets/www/cordova.js:3303"
        },
        {
            "message": "Missing item type\nStart recording audio file.",
            "line": " demo/platforms/android/assets/www/cordova.js:3314"
        },
        {
            "message": "Missing item type\nStop recording audio file.",
            "line": " demo/platforms/android/assets/www/cordova.js:3321"
        },
        {
            "message": "Missing item type\nRelease the resources.",
            "line": " demo/platforms/android/assets/www/cordova.js:3328"
        },
        {
            "message": "Missing item type\nAdjust the volume.",
            "line": " demo/platforms/android/assets/www/cordova.js:3335"
        },
        {
            "message": "Missing item type\nAudio has status update.\nPRIVATE",
            "line": " demo/platforms/android/assets/www/cordova.js:3342"
        },
        {
            "message": "Missing item type\nThis class contains information about any Media errors.",
            "line": " demo/platforms/android/assets/www/cordova.js:3389"
        },
        {
            "message": "Missing item type\nRepresents a single file.\n\nname {DOMString} name of the file, without path information\nfullPath {DOMString} the full path of the file, including the name\ntype {DOMString} mime type\nlastModifiedDate {Date} last modified date\nsize {Number} size of the file in bytes",
            "line": " demo/platforms/android/assets/www/cordova.js:3433"
        },
        {
            "message": "Missing item type\nRequest capture format data for a specific file and type",
            "line": " demo/platforms/android/assets/www/cordova.js:3448"
        },
        {
            "message": "Missing item type\nMediaFileData encapsulates format information of a media file.",
            "line": " demo/platforms/android/assets/www/cordova.js:3469"
        },
        {
            "message": "Missing item type\nInformation about the state of the file or directory\n\n{Date} modificationTime (readonly)",
            "line": " demo/platforms/android/assets/www/cordova.js:3493"
        },
        {
            "message": "Missing item type\nPosition error object",
            "line": " demo/platforms/android/assets/www/cordova.js:3527"
        },
        {
            "message": "Missing item type\nThis class provides access to device accelerometer data.",
            "line": " demo/platforms/android/assets/www/cordova.js:3602"
        },
        {
            "message": "Missing item type\nAsynchronously acquires the current acceleration.",
            "line": " demo/platforms/android/assets/www/cordova.js:3663"
        },
        {
            "message": "Missing item type\nAsynchronously acquires the acceleration repeatedly at a given interval.",
            "line": " demo/platforms/android/assets/www/cordova.js:3691"
        },
        {
            "message": "Missing item type\nClears the specified accelerometer watch.",
            "line": " demo/platforms/android/assets/www/cordova.js:3735"
        },
        {
            "message": "Missing item type\nClear the resource cache.",
            "line": " demo/platforms/android/assets/www/cordova.js:3771"
        },
        {
            "message": "Missing item type\nLoad the url into the webview or into new browser instance.",
            "line": " demo/platforms/android/assets/www/cordova.js:3778"
        },
        {
            "message": "Missing item type\nCancel loadUrl that is waiting to be loaded.",
            "line": " demo/platforms/android/assets/www/cordova.js:3796"
        },
        {
            "message": "Missing item type\nClear web history in this web view.\nInstead of BACK button loading the previous web page, it will exit the app.",
            "line": " demo/platforms/android/assets/www/cordova.js:3803"
        },
        {
            "message": "Missing item type\nGo to previous page displayed.\nThis is the same as pressing the backbutton on Android device.",
            "line": " demo/platforms/android/assets/www/cordova.js:3811"
        },
        {
            "message": "Missing item type\nOverride the default behavior of the Android back button.\nIf overridden, when the back button is pressed, the \"backKeyDown\" JavaScript event will be fired.\n\nNote: The user should not have to call this method.  Instead, when the user\n      registers for the \"backbutton\" event, this is automatically done.",
            "line": " demo/platforms/android/assets/www/cordova.js:3819"
        },
        {
            "message": "Missing item type\nExit and terminate the application.",
            "line": " demo/platforms/android/assets/www/cordova.js:3832"
        },
        {
            "message": "Missing item type\nProvides Android enhanced notification API.",
            "line": " demo/platforms/android/assets/www/cordova.js:3911"
        },
        {
            "message": "Missing item type\nClose an activity dialog",
            "line": " demo/platforms/android/assets/www/cordova.js:3926"
        },
        {
            "message": "Missing item type\nDisplay a progress dialog with progress bar that goes from 0 to 100.",
            "line": " demo/platforms/android/assets/www/cordova.js:3933"
        },
        {
            "message": "Missing item type\nClose the progress dialog.",
            "line": " demo/platforms/android/assets/www/cordova.js:3945"
        },
        {
            "message": "Missing item type\nSet the progress dialog value.",
            "line": " demo/platforms/android/assets/www/cordova.js:3952"
        },
        {
            "message": "Missing item type\nSQL result set object\nPRIVATE METHOD",
            "line": " demo/platforms/android/assets/www/cordova.js:3991"
        },
        {
            "message": "Missing item type\nGet item from SQL result set",
            "line": " demo/platforms/android/assets/www/cordova.js:4001"
        },
        {
            "message": "Missing item type\nSQL result set that is returned to user.\nPRIVATE METHOD",
            "line": " demo/platforms/android/assets/www/cordova.js:4011"
        },
        {
            "message": "Missing item type\nCallback from native code when query is complete.\nPRIVATE METHOD",
            "line": " demo/platforms/android/assets/www/cordova.js:4020"
        },
        {
            "message": "Missing item type\nCallback from native code when query fails\nPRIVATE METHOD",
            "line": " demo/platforms/android/assets/www/cordova.js:4060"
        },
        {
            "message": "Missing item type\nSQL query object\nPRIVATE METHOD",
            "line": " demo/platforms/android/assets/www/cordova.js:4099"
        },
        {
            "message": "Missing item type\nTransaction object\nPRIVATE METHOD",
            "line": " demo/platforms/android/assets/www/cordova.js:4129"
        },
        {
            "message": "Missing item type\nMark query in transaction as complete.\nIf all queries are complete, call the user's transaction success callback.",
            "line": " demo/platforms/android/assets/www/cordova.js:4147"
        },
        {
            "message": "Missing item type\nMark query in transaction as failed.",
            "line": " demo/platforms/android/assets/www/cordova.js:4175"
        },
        {
            "message": "Missing item type\nExecute SQL statement",
            "line": " demo/platforms/android/assets/www/cordova.js:4198"
        },
        {
            "message": "Missing item type\nStart a transaction.\nDoes not support rollback in event of failure.",
            "line": " demo/platforms/android/assets/www/cordova.js:4228"
        },
        {
            "message": "Missing item type\nOpen database",
            "line": " demo/platforms/android/assets/www/cordova.js:4254"
        },
        {
            "message": "Missing item type\nThis class contains information about the current battery status.",
            "line": " demo/platforms/android/assets/www/cordova.js:4325"
        },
        {
            "message": "Missing item type\nEvent handlers for when callbacks get registered for the battery.\nKeep track of how many handlers we have so we can start and stop the native battery listener\nappropriately (and hopefully save on battery life!).",
            "line": " demo/platforms/android/assets/www/cordova.js:4351"
        },
        {
            "message": "Missing item type\nCallback for battery status",
            "line": " demo/platforms/android/assets/www/cordova.js:4365"
        },
        {
            "message": "Missing item type\nError callback for battery start",
            "line": " demo/platforms/android/assets/www/cordova.js:4393"
        },
        {
            "message": "Missing item type\nLaunches a capture of different types.",
            "line": " demo/platforms/android/assets/www/cordova.js:4434"
        },
        {
            "message": "Missing item type\nThe Capture interface exposes an interface to the camera and microphone of the hosting device.",
            "line": " demo/platforms/android/assets/www/cordova.js:4459"
        },
        {
            "message": "Missing item type\nLaunch audio recorder application for recording audio clip(s).",
            "line": " demo/platforms/android/assets/www/cordova.js:4468"
        },
        {
            "message": "Missing item type\nLaunch camera application for taking image(s).",
            "line": " demo/platforms/android/assets/www/cordova.js:4479"
        },
        {
            "message": "Missing item type\nLaunch device camera application for recording video(s).",
            "line": " demo/platforms/android/assets/www/cordova.js:4490"
        },
        {
            "message": "Missing item type\nAsynchronously acquires the current heading.",
            "line": " demo/platforms/android/assets/www/cordova.js:4532"
        },
        {
            "message": "Missing item type\nAsynchronously acquires the heading repeatedly at a given interval.",
            "line": " demo/platforms/android/assets/www/cordova.js:4556"
        },
        {
            "message": "Missing item type\nClears the specified heading watch.",
            "line": " demo/platforms/android/assets/www/cordova.js:4587"
        },
        {
            "message": "Missing item type\nRepresents a group of Contacts.",
            "line": " demo/platforms/android/assets/www/cordova.js:4802"
        },
        {
            "message": "Missing item type\nReturns an array of Contacts matching the search criteria.",
            "line": " demo/platforms/android/assets/www/cordova.js:4807"
        },
        {
            "message": "Missing item type\nThis function creates a new contact, but it does not persist the contact\nto device storage. To persist the contact to device storage, invoke\ncontact.save().",
            "line": " demo/platforms/android/assets/www/cordova.js:4831"
        },
        {
            "message": "Missing item type\nThis represents the mobile device, and provides properties for inspecting the model, version, UUID of the\nphone, etc.",
            "line": " demo/platforms/android/assets/www/cordova.js:4882"
        },
        {
            "message": "Missing item type\nGet device info",
            "line": " demo/platforms/android/assets/www/cordova.js:4915"
        },
        {
            "message": "Missing item type\nSends the given message through exec() to the Echo plugin, which sends it back to the successCallback.",
            "line": " demo/platforms/android/assets/www/cordova.js:4946"
        },
        {
            "message": "Missing item type\nAsynchronously acquires the current position.",
            "line": " demo/platforms/android/assets/www/cordova.js:5064"
        },
        {
            "message": "Missing item type\nAsynchronously watches the geolocation for changes to geolocation.  When a change occurs,\nthe successCallback is called with the new location.",
            "line": " demo/platforms/android/assets/www/cordova.js:5138"
        },
        {
            "message": "Missing item type\nClears the specified heading watch.",
            "line": " demo/platforms/android/assets/www/cordova.js:5189"
        },
        {
            "message": "Missing item type\nReturns the string identifier for the client's current language.\nIt returns the language identifier string to the successCB callback with a\nproperties object as a parameter. If there is an error getting the language,\nthen the errorCB callback is invoked.",
            "line": " demo/platforms/android/assets/www/cordova.js:5229"
        },
        {
            "message": "Missing item type\nReturns the string identifier for the client's current locale setting.\nIt returns the locale identifier string to the successCB callback with a\nproperties object as a parameter. If there is an error getting the locale,\nthen the errorCB callback is invoked.",
            "line": " demo/platforms/android/assets/www/cordova.js:5251"
        },
        {
            "message": "Missing item type\nReturns a date formatted as a string according to the client's user preferences and\ncalendar using the time zone of the client. It returns the formatted date string to the\nsuccessCB callback with a properties object as a parameter. If there is an error\nformatting the date, then the errorCB callback is invoked.\n\nThe defaults are: formatLenght=\"short\" and selector=\"date and time\"",
            "line": " demo/platforms/android/assets/www/cordova.js:5274"
        },
        {
            "message": "Missing item type\nParses a date formatted as a string according to the client's user\npreferences and calendar using the time zone of the client and returns\nthe corresponding date object. It returns the date to the successCB\ncallback with a properties object as a parameter. If there is an error\nparsing the date string, then the errorCB callback is invoked.\n\nThe defaults are: formatLength=\"short\" and selector=\"date and time\"",
            "line": " demo/platforms/android/assets/www/cordova.js:5306"
        },
        {
            "message": "Missing item type\nReturns a pattern string for formatting and parsing dates according to the client's\nuser preferences. It returns the pattern to the successCB callback with a\nproperties object as a parameter. If there is an error obtaining the pattern,\nthen the errorCB callback is invoked.\n\nThe defaults are: formatLength=\"short\" and selector=\"date and time\"",
            "line": " demo/platforms/android/assets/www/cordova.js:5347"
        },
        {
            "message": "Missing item type\nReturns an array of either the names of the months or days of the week\naccording to the client's user preferences and calendar. It returns the array of names to the\nsuccessCB callback with a properties object as a parameter. If there is an error obtaining the\nnames, then the errorCB callback is invoked.\n\nThe defaults are: type=\"wide\" and item=\"months\"",
            "line": " demo/platforms/android/assets/www/cordova.js:5385"
        },
        {
            "message": "Missing item type\nReturns whether daylight savings time is in effect for a given date using the client's\ntime zone and calendar. It returns whether or not daylight savings time is in effect\nto the successCB callback with a properties object as a parameter. If there is an error\nreading the date, then the errorCB callback is invoked.",
            "line": " demo/platforms/android/assets/www/cordova.js:5415"
        },
        {
            "message": "Missing item type\nReturns the first day of the week according to the client's user preferences and calendar.\nThe days of the week are numbered starting from 1 where 1 is considered to be Sunday.\nIt returns the day to the successCB callback with a properties object as a parameter.\nIf there is an error obtaining the pattern, then the errorCB callback is invoked.",
            "line": " demo/platforms/android/assets/www/cordova.js:5441"
        },
        {
            "message": "Missing item type\nReturns a number formatted as a string according to the client's user preferences.\nIt returns the formatted number string to the successCB callback with a properties object as a\nparameter. If there is an error formatting the number, then the errorCB callback is invoked.\n\nThe defaults are: type=\"decimal\"",
            "line": " demo/platforms/android/assets/www/cordova.js:5465"
        },
        {
            "message": "Missing item type\nParses a number formatted as a string according to the client's user preferences and\nreturns the corresponding number. It returns the number to the successCB callback with a\nproperties object as a parameter. If there is an error parsing the number string, then\nthe errorCB callback is invoked.\n\nThe defaults are: type=\"decimal\"",
            "line": " demo/platforms/android/assets/www/cordova.js:5493"
        },
        {
            "message": "Missing item type\nReturns a pattern string for formatting and parsing numbers according to the client's user\npreferences. It returns the pattern to the successCB callback with a properties object as a\nparameter. If there is an error obtaining the pattern, then the errorCB callback is invoked.\n\nThe defaults are: type=\"decimal\"",
            "line": " demo/platforms/android/assets/www/cordova.js:5521"
        },
        {
            "message": "Missing item type\nReturns a pattern string for formatting and parsing currency values according to the client's\nuser preferences and ISO 4217 currency code. It returns the pattern to the successCB callback with a\nproperties object as a parameter. If there is an error obtaining the pattern, then the errorCB\ncallback is invoked.",
            "line": " demo/platforms/android/assets/www/cordova.js:5558"
        },
        {
            "message": "Missing item type\nLogging levels",
            "line": " demo/platforms/android/assets/www/cordova.js:5651"
        },
        {
            "message": "Missing item type\nGetter/Setter for the logging level\n\nReturns the current logging level.\n\nWhen a value is passed, sets the logging level to that value.\nThe values should be one of the following constants:\n   logger.LOG\n   logger.ERROR\n   logger.WARN\n   logger.INFO\n   logger.DEBUG\n\nThe value used determines which messages get printed.  The logging\nvalues above are in order, and only messages logged at the logging\nlevel or above will actually be displayed to the user.  E.g., the\ndefault level is WARN, so only messages logged with LOG, ERROR, or\nWARN will be displayed; INFO and DEBUG messages will be ignored.",
            "line": " demo/platforms/android/assets/www/cordova.js:5677"
        },
        {
            "message": "Missing item type\nGetter/Setter for the useConsole functionality\n\nWhen useConsole is true, the logger will log via the\nbrowser 'console' object.  Otherwise, it will use the\nnative Logger plugin.",
            "line": " demo/platforms/android/assets/www/cordova.js:5707"
        },
        {
            "message": "Missing item type\nLogs a message at the LOG level.\n\nParameters passed after message are used applied to\nthe message with utils.format()",
            "line": " demo/platforms/android/assets/www/cordova.js:5736"
        },
        {
            "message": "Missing item type\nLogs a message at the ERROR level.\n\nParameters passed after message are used applied to\nthe message with utils.format()",
            "line": " demo/platforms/android/assets/www/cordova.js:5744"
        },
        {
            "message": "Missing item type\nLogs a message at the WARN level.\n\nParameters passed after message are used applied to\nthe message with utils.format()",
            "line": " demo/platforms/android/assets/www/cordova.js:5752"
        },
        {
            "message": "Missing item type\nLogs a message at the INFO level.\n\nParameters passed after message are used applied to\nthe message with utils.format()",
            "line": " demo/platforms/android/assets/www/cordova.js:5760"
        },
        {
            "message": "Missing item type\nLogs a message at the DEBUG level.\n\nParameters passed after message are used applied to\nthe message with utils.format()",
            "line": " demo/platforms/android/assets/www/cordova.js:5768"
        },
        {
            "message": "Missing item type\nLogs a message at the specified level.\n\nParameters passed after message are used applied to\nthe message with utils.format()",
            "line": " demo/platforms/android/assets/www/cordova.js:5782"
        },
        {
            "message": "Missing item type\nGet connection info",
            "line": " demo/platforms/android/assets/www/cordova.js:5887"
        },
        {
            "message": "Missing item type\nProvides access to notifications on the device.",
            "line": " demo/platforms/android/assets/www/cordova.js:5955"
        },
        {
            "message": "Missing item type\nOpen a native alert dialog, with a customizable title and button text.",
            "line": " demo/platforms/android/assets/www/cordova.js:5961"
        },
        {
            "message": "Missing item type\nOpen a native confirm dialog, with a customizable title and button text.\nThe result that the user selects is returned to the result callback.",
            "line": " demo/platforms/android/assets/www/cordova.js:5975"
        },
        {
            "message": "Missing item type\nCauses the device to vibrate.",
            "line": " demo/platforms/android/assets/www/cordova.js:5990"
        },
        {
            "message": "Missing item type\nCauses the device to beep.\nOn Android, the default notification ringtone is played \"count\" times.",
            "line": " demo/platforms/android/assets/www/cordova.js:5999"
        },
        {
            "message": "Missing item type\nRequest a file system in which to store application data.",
            "line": " demo/platforms/android/assets/www/cordova.js:6031"
        },
        {
            "message": "Missing item type\nLook up file system Entry referred to by local URI.",
            "line": " demo/platforms/android/assets/www/cordova.js:6078"
        },
        {
            "message": "Missing item type\nDefines a property getter / setter for obj[key].",
            "line": " demo/platforms/android/assets/www/cordova.js:6164"
        },
        {
            "message": "Missing item type\nDefines a property getter for obj[key].",
            "line": " demo/platforms/android/assets/www/cordova.js:6185"
        },
        {
            "message": "Missing item type\nReturns whether the item was found in the array.",
            "line": " demo/platforms/android/assets/www/cordova.js:6203"
        },
        {
            "message": "Missing item type\nReturns an indication of whether the argument is an array or not",
            "line": " demo/platforms/android/assets/www/cordova.js:6218"
        },
        {
            "message": "Missing item type\nReturns an indication of whether the argument is a Date or not",
            "line": " demo/platforms/android/assets/www/cordova.js:6225"
        },
        {
            "message": "Missing item type\nDoes a deep clone of the object.",
            "line": " demo/platforms/android/assets/www/cordova.js:6232"
        },
        {
            "message": "Missing item type\nReturns a wrapped version of the function",
            "line": " demo/platforms/android/assets/www/cordova.js:6259"
        },
        {
            "message": "Missing item type\nCreate a UUID",
            "line": " demo/platforms/android/assets/www/cordova.js:6274"
        },
        {
            "message": "Missing item type\nExtends a child object from a parent object using classical inheritance\npattern.",
            "line": " demo/platforms/android/assets/www/cordova.js:6285"
        },
        {
            "message": "Missing item type\nAlerts a message in any available way: alert or console.log.",
            "line": " demo/platforms/android/assets/www/cordova.js:6301"
        },
        {
            "message": "Missing item type\nFormats a string and arguments following it ala sprintf()\n\nsee utils.vformat() for more information",
            "line": " demo/platforms/android/assets/www/cordova.js:6312"
        },
        {
            "message": "Missing item type\nFormats a string and arguments following it ala vsprintf()\n\nformat chars:\n  %j - format arg as JSON\n  %o - format arg as JSON\n  %c - format arg as ''\n  %% - replace with '%'\nany other char following % will format it's\narg via toString().\n\nfor rationale, see FireBug's Console API:\n   http://getfirebug.com/wiki/index.php/Console_API",
            "line": " demo/platforms/android/assets/www/cordova.js:6322"
        },
        {
            "message": "Missing item type\nCreate all cordova objects once page has fully loaded and native side is ready.",
            "line": " demo/platforms/android/assets/www/cordova.js:6422"
        },
        {
            "message": "Missing item type\nBASE PKOBJECT\n\n*****************************************************************************\nThe Object class provides the top object that all other objects inherit\n from. This provides object inheritance via a subclass/superclass mechanism\n without having to worry about prototype or constructor inheritance.\nPKObjects provide simple subclassing and a limited form of KVO in the form\n of tags and tag listeners.",
            "line": " demo/platforms/ios/build/YASMFDemoApp.app/www/framework/PKObject.js:1"
        },
        {
            "message": "Missing item type\nWe need a way to provide inheritance. Most methods only provide\n inheritance across the constructor chain, not across any possible\n method. But for our purposes, we need to be able to provide for\n overriding any method (such as drawing, touch responses, etc.),\n and so we implement inheritance in a different way.\nFirst, the _classHierarchy, a private property, provides the\n inheritance tree. All objects inherit from \"Object\".",
            "line": " demo/platforms/ios/build/YASMFDemoApp.app/www/framework/PKObject.js:38"
        },
        {
            "message": "Missing item type\nObjects are subclassed using this method. The newClass is the\n unique class name of the object (and should match the class'\n actual name.",
            "line": " demo/platforms/ios/build/YASMFDemoApp.app/www/framework/PKObject.js:52"
        },
        {
            "message": "Missing item type\ngetClass returns the current class of the object. The\n \"class\" property can be used as well. Note that there\n is no \"setter\" for this property; an object's class\n can *not* be changed.",
            "line": " demo/platforms/ios/build/YASMFDemoApp.app/www/framework/PKObject.js:64"
        },
        {
            "message": "Missing item type\nReturns the super class for the given class. If the\n class is not supplied, the class is assumed to be the\n object's own class.\nThe property \"superClass\" uses this to return the\n object's direct superclass, but getSuperClassOfClass\n can be used to determine superclasses higher up\n the hierarchy.",
            "line": " demo/platforms/ios/build/YASMFDemoApp.app/www/framework/PKObject.js:78"
        },
        {
            "message": "Missing item type\n_super is an object that stores overridden functions by class and method\n name. This is how we get the ability to arbitrarily override any method\n already present in the superclass.",
            "line": " demo/platforms/ios/build/YASMFDemoApp.app/www/framework/PKObject.js:105"
        },
        {
            "message": "Missing item type\nMust be called prior to defining the overridden function as this moves\n the original function into the _super object. The functionName must\n match the name of the method exactly, since there may be a long tree\n of code that depends on it.",
            "line": " demo/platforms/ios/build/YASMFDemoApp.app/www/framework/PKObject.js:114"
        },
        {
            "message": "Missing item type\nCalls a super function with up to 10 arguments.",
            "line": " demo/platforms/ios/build/YASMFDemoApp.app/www/framework/PKObject.js:132"
        },
        {
            "message": "Missing item type\ninitializes the object",
            "line": " demo/platforms/ios/build/YASMFDemoApp.app/www/framework/PKObject.js:151"
        },
        {
            "message": "Missing item type\nObjects have some properties that we want all objects to have...",
            "line": " demo/platforms/ios/build/YASMFDemoApp.app/www/framework/PKObject.js:161"
        },
        {
            "message": "Missing item type\nAll objects subject notifications for events",
            "line": " demo/platforms/ios/build/YASMFDemoApp.app/www/framework/PKObject.js:210"
        },
        {
            "message": "Missing item type\n//http://stackoverflow.com/a/11462081\nfunction clone(obj){\n    var clonedObjectsArray = [];\n    var originalObjectsArray = []; //used to remove the unique ids when finished\n    var next_objid = 0;\n\n    function objectId(obj) {\n        if (obj == null) return null;\n        if (obj.__obj_id == undefined){\n            obj.__obj_id = next_objid++;\n            originalObjectsArray[obj.__obj_id] = obj;\n        }\n        return obj.__obj_id;\n    }\n\n    function cloneRecursive(obj) {\n        if (null == obj || typeof obj == \"string\" || typeof obj == \"number\" || typeof obj == \"boolean\") return obj;\n\n        // Handle Date\n        if (obj instanceof Date) {\n            var copy = new Date();\n            copy.setTime(obj.getTime());\n            return copy;\n        }\n\n        // Handle Array\n        if (obj instanceof Array) {\n            var copy = [];\n            for (var i = 0; i < obj.length; ++i) {\n                copy[i] = cloneRecursive(obj[i]);\n            }\n            return copy;\n        }\n\n        // Handle Object\n        if (obj instanceof Object) {\n            if (clonedObjectsArray[objectId(obj)] != undefined)\n                return clonedObjectsArray[objectId(obj)];\n\n            var copy;\n            if (obj instanceof Function)//Handle Function\n                copy = function(){return obj.apply(this, arguments);};\n            else\n                copy = {};\n\n            clonedObjectsArray[objectId(obj)] = copy;\n\n            for (var attr in obj)\n                if (attr != \"__obj_id\" && obj.hasOwnProperty(attr))\n                    copy[attr] = cloneRecursive(obj[attr]);                 \n\n            return copy;\n        }       \n\n\n        throw new Error(\"Unable to copy obj! Its type isn't supported.\");\n    }\n    var cloneObj = cloneRecursive(obj);\n\n\n\n    //remove the unique ids\n    for (var i = 0; i < originalObjectsArray.length; i++)\n    {\n        delete originalObjectsArray[i].__obj_id;\n    };\n\n    return cloneObj;\n}",
            "line": " demo/platforms/ios/build/YASMFDemoApp.app/www/framework/PKObject.js:256"
        },
        {
            "message": "Missing item type\nDEVICE\n Author: Kerri Shotts\nThis library includes functions that reflect the device and its current\n state",
            "line": " demo/platforms/ios/build/YASMFDemoApp.app/www/framework/device.js:1"
        },
        {
            "message": "Missing item type\nReturns the device platform, lowercased. If PKDEVICE.platformOverride is\n other than \"false\", it is returned instead.",
            "line": " demo/platforms/ios/build/YASMFDemoApp.app/www/framework/device.js:42"
        },
        {
            "message": "Missing item type\nReturns the device's form factor. Possible values are \"tablet\" and\n \"phone\". If PKDEVICE.formFactorOverride is not false, it is returned\n instead.",
            "line": " demo/platforms/ios/build/YASMFDemoApp.app/www/framework/device.js:73"
        },
        {
            "message": "Missing item type\nDetermines if the device is in Portrait orientation.",
            "line": " demo/platforms/ios/build/YASMFDemoApp.app/www/framework/device.js:104"
        },
        {
            "message": "Missing item type\nDetermines if the device is in Landscape orientation.",
            "line": " demo/platforms/ios/build/YASMFDemoApp.app/www/framework/device.js:113"
        },
        {
            "message": "Missing item type\nDetermines if the device is a hiDPI device (aka retina)",
            "line": " demo/platforms/ios/build/YASMFDemoApp.app/www/framework/device.js:126"
        },
        {
            "message": "Missing item type\nFILEUTIL\n Author: Kerri Shotts\nThis library includes routines to deal with the FILE API, (which is... a bit\n painful.) The purpose of the library is to reduce the amount of work necessary\n to go through obtaining a file system, working with directories and files,\n etc. That isn't to say that we can eliminate callbacks or even callback\n chaining -- but it is significantly easier without all the intervening cruft,\n which is essentially (for all intents and purposes) boilerplate.\nIMPORTANT NOTE:\nThis library provides various conveniences that make referencing persistent\n and temporary storage a bit easier as well. For example, you can use a\n path like the following:\n    doc://photo.jpg   -->   /some/gobbledygook/yourApp/Documents/photo.jpg\n     tmp://photo.jpg   -->   /some/gobbledygook/yourApp/tmp/photo.jpg\nSeveral APIs (such as camera capture) may also refer to paths with\n \"file://localhost\" attached. The routines will gracefully remove this so that\n the reference is a true file.\nCONVENIENCE:\nFor those who are more comfortable with *nix/BSD commands, nearly each method\n has a version that correlates to a roughly *nix name. The parameters are the\n same, however.\nMETHODS\n   copyFileTo ( source, target, success, failure )         |   cp ()\n   moveFileTo ( source, target, success, failure )         |   mv ()\n   removeFile ( theFile, success, failure )                |   rm ()\n   renameFile ( source, newName, success, failure )        |   -\n   createFileWriter ( theFile, success, failure )          |   fcreate ()\n   writeFileData ( writer, theData, success, failure )     |   fwrite ()\nPLANNED METHODS\n  getListing ( path, filters, success, failure )          |    ls ()\n   createDirectory ( path, newDirectory, success, failure )|    mkdir()\n   removeDirectory ( path, theDirectory, success, failure )|    rmdir()\n   createFileReader ( theFile, success, failure )          |    fopen()\n   readFileData ( reader, success, failure )               |    fread()",
            "line": " demo/platforms/ios/build/YASMFDemoApp.app/www/framework/fileutil.js:1"
        },
        {
            "message": "Missing item type\nDetermines the persistent and temporary file systems prior\n to file operations. While it's unlikely that these will\n change during application execution, it certainly doesn't\n hurt to re-read them whenever possible (just in case!).\nWhen both are read, the success method is called. If we\n can't obtain one or the other, the failure method is called.",
            "line": " demo/platforms/ios/build/YASMFDemoApp.app/www/framework/fileutil.js:101"
        },
        {
            "message": "Missing item type\nHandles substition strings within a file path.\n doc:/ translates to the persistent storage. We don't use \"//\" here\n        since the persistentFS doesn't have a trailing \"/\", so we leave\n        that in the original.\n  tmp:/ translates to the temporary storage.\n  file://localhost translates to nothing.",
            "line": " demo/platforms/ios/build/YASMFDemoApp.app/www/framework/fileutil.js:140"
        },
        {
            "message": "Missing item type\nCopies the file identified by @source to the file identified by @target.\n If the copy is successful, success() is called. If not, failure() is\n called.\nThe target will generally be of the form \"doc://filename\", but it can\n be any path and file name that the application has access to.\nNOTE: Copying will fail if the target exists.",
            "line": " demo/platforms/ios/build/YASMFDemoApp.app/www/framework/fileutil.js:159"
        },
        {
            "message": "Missing item type\n*nix convenience method.",
            "line": " demo/platforms/ios/build/YASMFDemoApp.app/www/framework/fileutil.js:193"
        },
        {
            "message": "Missing item type\nMoves the file identified by @source to the file identified by @target.\n If the move is successful, success() is called. If not, failure() is\n called.\nThe target will generally be of the form \"doc://filename\", but it can\n be any path and file name that the application has access to.\nNOTE: The move will overwrite the target if it exists.",
            "line": " demo/platforms/ios/build/YASMFDemoApp.app/www/framework/fileutil.js:203"
        },
        {
            "message": "Missing item type\nConvenience method that allows renaming a file in the same\n directory as the source. The source's path will prepended\n to the new name.\nNOTE: The move will overwrite the target if it exists.",
            "line": " demo/platforms/ios/build/YASMFDemoApp.app/www/framework/fileutil.js:237"
        },
        {
            "message": "Missing item type\n*nix convenience method.",
            "line": " demo/platforms/ios/build/YASMFDemoApp.app/www/framework/fileutil.js:252"
        },
        {
            "message": "Missing item type\nRemoves the file identified by @theFile. The full path must\n be specified.",
            "line": " demo/platforms/ios/build/YASMFDemoApp.app/www/framework/fileutil.js:262"
        },
        {
            "message": "Missing item type\n*nix convenience method.",
            "line": " demo/platforms/ios/build/YASMFDemoApp.app/www/framework/fileutil.js:283"
        },
        {
            "message": "Missing item type\nCreates a fileWriter for @theFile. If successful, it will\n call success() with the created writer. If unsuccessful, it\n will call failure().\nOnce in success(), writeFileData() may be used to finish\n the writing of data to the file.\nNote: if the file exists, it will be overwritten.",
            "line": " demo/platforms/ios/build/YASMFDemoApp.app/www/framework/fileutil.js:293"
        },
        {
            "message": "Missing item type\n*nix convenience method.",
            "line": " demo/platforms/ios/build/YASMFDemoApp.app/www/framework/fileutil.js:320"
        },
        {
            "message": "Missing item type\nWrites @theData to the specified writer. When complete,\n success() will be called. If it fails, failure().",
            "line": " demo/platforms/ios/build/YASMFDemoApp.app/www/framework/fileutil.js:330"
        },
        {
            "message": "Missing item type\n*nix convenience method.",
            "line": " demo/platforms/ios/build/YASMFDemoApp.app/www/framework/fileutil.js:343"
        },
        {
            "message": "Missing item type\nlocalization.js\n Author: Kerri Shotts\nProvides simple localization, as described in Chapter 1 of PhoneGap HotShot.\nRelies on JQuery/Globalize.js, as found at https://github.com/jquery/globalize",
            "line": " demo/platforms/ios/build/YASMFDemoApp.app/www/framework/localization.js:2"
        },
        {
            "message": "Missing item type\nLoads the JQuery Globalize script from the framework directory\n as well as the underlying cultures definitions.",
            "line": " demo/platforms/ios/build/YASMFDemoApp.app/www/framework/localization.js:49"
        },
        {
            "message": "Missing item type\nLoads the appropriate locale from the JQuery Globalize script.",
            "line": " demo/platforms/ios/build/YASMFDemoApp.app/www/framework/localization.js:59"
        },
        {
            "message": "Missing item type\nSets the current locale for the JQuery Globalize script.",
            "line": " demo/platforms/ios/build/YASMFDemoApp.app/www/framework/localization.js:72"
        },
        {
            "message": "Missing item type\nAdd a translation to the existing translation matrix",
            "line": " demo/platforms/ios/build/YASMFDemoApp.app/www/framework/localization.js:81"
        },
        {
            "message": "Missing item type\nReturn the user's locale (e.g., en-US or fr-FR)\n for proper localization.",
            "line": " demo/platforms/ios/build/YASMFDemoApp.app/www/framework/localization.js:103"
        },
        {
            "message": "Missing item type\nConvenience function for translating text.",
            "line": " demo/platforms/ios/build/YASMFDemoApp.app/www/framework/localization.js:177"
        },
        {
            "message": "Missing item type\nConvenience function for localizing numbers.",
            "line": " demo/platforms/ios/build/YASMFDemoApp.app/www/framework/localization.js:217"
        },
        {
            "message": "Missing item type\nConvenience function for localizing currency.",
            "line": " demo/platforms/ios/build/YASMFDemoApp.app/www/framework/localization.js:241"
        },
        {
            "message": "Missing item type\nConvenience function for localizing percentages.",
            "line": " demo/platforms/ios/build/YASMFDemoApp.app/www/framework/localization.js:264"
        },
        {
            "message": "Missing item type\nConvenience function for localizing dates.",
            "line": " demo/platforms/ios/build/YASMFDemoApp.app/www/framework/localization.js:285"
        },
        {
            "message": "Missing item type\nBASE PKOBJECT\n\n*****************************************************************************\nThe Object class provides the top object that all other objects inherit\n from. This provides object inheritance via a subclass/superclass mechanism\n without having to worry about prototype or constructor inheritance.\nPKObjects provide simple subclassing and a limited form of KVO in the form\n of tags and tag listeners.",
            "line": " demo/platforms/ios/build/YASMFDemoApp.app/www/framework/pk-object.js:1"
        },
        {
            "message": "Missing item type\nWe need a way to provide inheritance. Most methods only provide\n inheritance across the constructor chain, not across any possible\n method. But for our purposes, we need to be able to provide for\n overriding any method (such as drawing, touch responses, etc.),\n and so we implement inheritance in a different way.\nFirst, the _classHierarchy, a private property, provides the\n inheritance tree. All objects inherit from \"Object\".",
            "line": " demo/platforms/ios/build/YASMFDemoApp.app/www/framework/pk-object.js:42"
        },
        {
            "message": "Missing item type\nObjects are subclassed using this method. The newClass is the\n unique class name of the object (and should match the class'\n actual name.",
            "line": " demo/platforms/ios/build/YASMFDemoApp.app/www/framework/pk-object.js:56"
        },
        {
            "message": "Missing item type\ngetClass returns the current class of the object. The\n \"class\" property can be used as well. Note that there\n is no \"setter\" for this property; an object's class\n can *not* be changed.",
            "line": " demo/platforms/ios/build/YASMFDemoApp.app/www/framework/pk-object.js:68"
        },
        {
            "message": "Missing item type\nReturns the super class for the given class. If the\n class is not supplied, the class is assumed to be the\n object's own class.\nThe property \"superClass\" uses this to return the\n object's direct superclass, but getSuperClassOfClass\n can be used to determine superclasses higher up\n the hierarchy.",
            "line": " demo/platforms/ios/build/YASMFDemoApp.app/www/framework/pk-object.js:82"
        },
        {
            "message": "Missing item type\n_super is an object that stores overridden functions by class and method\n name. This is how we get the ability to arbitrarily override any method\n already present in the superclass.",
            "line": " demo/platforms/ios/build/YASMFDemoApp.app/www/framework/pk-object.js:109"
        },
        {
            "message": "Missing item type\nMust be called prior to defining the overridden function as this moves\n the original function into the _super object. The functionName must\n match the name of the method exactly, since there may be a long tree\n of code that depends on it.",
            "line": " demo/platforms/ios/build/YASMFDemoApp.app/www/framework/pk-object.js:118"
        },
        {
            "message": "Missing item type\nCalls a super function with up to 10 arguments.",
            "line": " demo/platforms/ios/build/YASMFDemoApp.app/www/framework/pk-object.js:136"
        },
        {
            "message": "Missing item type\ninitializes the object",
            "line": " demo/platforms/ios/build/YASMFDemoApp.app/www/framework/pk-object.js:155"
        },
        {
            "message": "Missing item type\nObjects have some properties that we want all objects to have...",
            "line": " demo/platforms/ios/build/YASMFDemoApp.app/www/framework/pk-object.js:165"
        },
        {
            "message": "Missing item type\nAll objects subject notifications for events",
            "line": " demo/platforms/ios/build/YASMFDemoApp.app/www/framework/pk-object.js:214"
        },
        {
            "message": "Missing item type\n//http://stackoverflow.com/a/11462081\nfunction clone(obj){\n    var clonedObjectsArray = [];\n    var originalObjectsArray = []; //used to remove the unique ids when finished\n    var next_objid = 0;\n\n    function objectId(obj) {\n        if (obj == null) return null;\n        if (obj.__obj_id == undefined){\n            obj.__obj_id = next_objid++;\n            originalObjectsArray[obj.__obj_id] = obj;\n        }\n        return obj.__obj_id;\n    }\n\n    function cloneRecursive(obj) {\n        if (null == obj || typeof obj == \"string\" || typeof obj == \"number\" || typeof obj == \"boolean\") return obj;\n\n        // Handle Date\n        if (obj instanceof Date) {\n            var copy = new Date();\n            copy.setTime(obj.getTime());\n            return copy;\n        }\n\n        // Handle Array\n        if (obj instanceof Array) {\n            var copy = [];\n            for (var i = 0; i < obj.length; ++i) {\n                copy[i] = cloneRecursive(obj[i]);\n            }\n            return copy;\n        }\n\n        // Handle Object\n        if (obj instanceof Object) {\n            if (clonedObjectsArray[objectId(obj)] != undefined)\n                return clonedObjectsArray[objectId(obj)];\n\n            var copy;\n            if (obj instanceof Function)//Handle Function\n                copy = function(){return obj.apply(this, arguments);};\n            else\n                copy = {};\n\n            clonedObjectsArray[objectId(obj)] = copy;\n\n            for (var attr in obj)\n                if (attr != \"__obj_id\" && obj.hasOwnProperty(attr))\n                    copy[attr] = cloneRecursive(obj[attr]);                 \n\n            return copy;\n        }       \n\n\n        throw new Error(\"Unable to copy obj! Its type isn't supported.\");\n    }\n    var cloneObj = cloneRecursive(obj);\n\n\n\n    //remove the unique ids\n    for (var i = 0; i < originalObjectsArray.length; i++)\n    {\n        delete originalObjectsArray[i].__obj_id;\n    };\n\n    return cloneObj;\n}",
            "line": " demo/platforms/ios/build/YASMFDemoApp.app/www/framework/pk-object.js:261"
        },
        {
            "message": "Missing item type\nSCROLLER\n Author:  Kerri Shotts\n Version: 0.1 alpha\n License: MIT\nThis library is intended to be similar to iScroll-lite in that it should be\n a relatively fast method of scrolling content without being horribly laggy\n or cause incorrect \"clicks\" to be registered.\nThis library does *NOT* support physics-based scrolling, except for a small\n inertia animation at the end of a scroll. It is not intended to replicate\n native scrolling /at all/. There are no bounces at the top or bottom. There\n is no visible scroll bar either. Essentially, overflow:scroll as supported\n on iOS 5 with no bounce/inertia scrolling.\nConsider this library an experiment. The idea is to be simpler than iScroll\n to use -- for example, the scroller only needs to be created once -- it does\n not need to be refreshed when AJAX content loads. It is intended to be at\n least as fast as iScroll, if not a little faster. It is not, however,\n intended to be a native scrolling solution. At this time, I do not believe\n it truly possible or practice, and users will notice any non-native solution\n that tries to match, so why try?\nUsage:\nvar yourScroller = new SCROLLER.GenericScroller ( \"the_element_to_scroll\" );\nwhere you have the following DOM tree:\n    container_element\n     - the_element_to_scroll\nFuture Goals:\n - Detect native physics scrolling and use it when possible\n  - Detect native overflow:scroll (non-physics) and use it when possible\n  - Improve the inertial scrolling at end (this is a very rough implementation)\n  - Become irrelevant. I hope for a day when all mobile browsers can scroll\n    complex content natively and smoothly.\nSupported Platforms:\n - Android 2.3+\n  - iOS 4.3+\n  - probably any webkit browser?\nKnown Issues:\n  - A little too willing to call a scroll a \"click\".",
            "line": " demo/platforms/ios/build/YASMFDemoApp.app/www/framework/scroller.js:1"
        },
        {
            "message": "Missing item type\nAttaches the scroller to a new element. The element MUST be contained within\n another element that can support the setting of scrollTop/Left.\nAny overflow values will be overridden. Any webkit transforms may also be\n overridden.",
            "line": " demo/platforms/ios/build/YASMFDemoApp.app/www/framework/scroller.js:107"
        },
        {
            "message": "Missing item type\nGet the scroll position",
            "line": " demo/platforms/ios/build/YASMFDemoApp.app/www/framework/scroller.js:148"
        },
        {
            "message": "Missing item type\nScroll to a given location. If the location can't be scrolled to,\n the nearest location will be used.",
            "line": " demo/platforms/ios/build/YASMFDemoApp.app/www/framework/scroller.js:161"
        },
        {
            "message": "Missing item type\ntouchStart initializes all our values when a touch is received.",
            "line": " demo/platforms/ios/build/YASMFDemoApp.app/www/framework/scroller.js:174"
        },
        {
            "message": "Missing item type\nWhen a touch moves, we'll receive the event here.",
            "line": " demo/platforms/ios/build/YASMFDemoApp.app/www/framework/scroller.js:204"
        },
        {
            "message": "Missing item type\nWhen a finger is lifted from the screen, we'll get this event.\n We can determine whether or not it was a click if we scrolled at all,\n and if we scrolled a certain distance, we'll do a little inertial\n scrolling",
            "line": " demo/platforms/ios/build/YASMFDemoApp.app/www/framework/scroller.js:238"
        },
        {
            "message": "Missing item type\nUI-BASE\n Author: Kerri Shotts\n Version: 0.3\nThis provides the basics of the UI model, including poings, rects, and more.",
            "line": " demo/platforms/ios/build/YASMFDemoApp.app/www/framework/ui-base.js:1"
        },
        {
            "message": "Missing item type\nPoints are of the form { x: #, y: # }",
            "line": " demo/platforms/ios/build/YASMFDemoApp.app/www/framework/ui-base.js:37"
        },
        {
            "message": "Missing item type\noffsets a point by the values in another point. For example,\n if pointA = { x:100, y:100 } and pointB = { x:-5, y:10 }, the\n returned point will be { x:95, y:110 }.",
            "line": " demo/platforms/ios/build/YASMFDemoApp.app/www/framework/ui-base.js:50"
        },
        {
            "message": "Missing item type\nSizes are similar to points, but they are of the form\n { w: width, h: height }",
            "line": " demo/platforms/ios/build/YASMFDemoApp.app/www/framework/ui-base.js:62"
        },
        {
            "message": "Missing item type\nRects are of the form { origin: point, size: size }, or\n { origin: {x: #, y: #}, size: {w: width, h: height} }",
            "line": " demo/platforms/ios/build/YASMFDemoApp.app/www/framework/ui-base.js:89"
        },
        {
            "message": "Missing item type\nOffsets a rect's origin point by the supplied point.",
            "line": " demo/platforms/ios/build/YASMFDemoApp.app/www/framework/ui-base.js:105"
        },
        {
            "message": "Missing item type\nOffsets a rect's origin by the origin of the second rect,\n and offsets the rect's size by the size of the second rect.\nThis implies that the second rect does not need to be \"real\",\n as in, it can have negative sizes and such.",
            "line": " demo/platforms/ios/build/YASMFDemoApp.app/www/framework/ui-base.js:115"
        },
        {
            "message": "Missing item type\nReturns true if the two rects supplied intersect. Note that this\n will not work if the rectangles are non-canonical.",
            "line": " demo/platforms/ios/build/YASMFDemoApp.app/www/framework/ui-base.js:130"
        },
        {
            "message": "Missing item type\nThink of these as constants, except you have to call them like a \n method.\nzeroPoint() returns a point of {0,0}\n zeroSize() returns a size of {0,0}\n zeroRect() returns a rect of { {0,0}, {0,0} }\n screenSize() returns a **point** representing the size of the screen (or browser).\n screenBounds() returns a **rect** representing the size of the screen (with a {0,0} origin).",
            "line": " demo/platforms/ios/build/YASMFDemoApp.app/www/framework/ui-base.js:155"
        },
        {
            "message": "Missing item type\nfonts",
            "line": " demo/platforms/ios/build/YASMFDemoApp.app/www/framework/ui-base.js:173"
        },
        {
            "message": "Missing item type\nShadows",
            "line": " demo/platforms/ios/build/YASMFDemoApp.app/www/framework/ui-base.js:237"
        },
        {
            "message": "Missing item type\nColors",
            "line": " demo/platforms/ios/build/YASMFDemoApp.app/www/framework/ui-base.js:291"
        },
        {
            "message": "Missing item type\nevents",
            "line": " demo/platforms/ios/build/YASMFDemoApp.app/www/framework/ui-base.js:338"
        },
        {
            "message": "Missing item type\nUI-CORE\n Author: Kerri Shotts\nThis script provides a lot of the core user interface framework, such as\n loading content via AJAX, transitions, and more.",
            "line": " demo/platforms/ios/build/YASMFDemoApp.app/www/framework/ui-core.js:1"
        },
        {
            "message": "Missing item type\nGlobal back button handler, since doing it per-view and per-\n message is buggy. This will call backButtonPressed() on any\n active message or view. If said method isn't found, it will\n pop the view on its own.\nNOTE: if backButtonPressed() is defined, it is expected to\n pop the view, if the method is also a view. If the view is\n not popped, the back button will have no effect.\nSECOND NOTE: Since back buttons received in quick succession\n are problematic, we force the user to wait 1s before the next\n back button is accepted.",
            "line": " demo/platforms/ios/build/YASMFDemoApp.app/www/framework/ui-core.js:84"
        },
        {
            "message": "Missing item type\nInitializes the application framework\n  - in this version of the framework, we force an orientation update.\n  - by default, we attach a global back button handler\n  - we deisable animations and transforms for Android and WP7.",
            "line": " demo/platforms/ios/build/YASMFDemoApp.app/www/framework/ui-core.js:129"
        },
        {
            "message": "Missing item type\nCalled on first-start and whenever the orientation changes. It updates the\n body's class to reflect the device, formfactor, orientation, and scaling.",
            "line": " demo/platforms/ios/build/YASMFDemoApp.app/www/framework/ui-core.js:177"
        },
        {
            "message": "Missing item type\nShows a view and pushes it on the viewStack. NO ANIMATION.\n DOES NOT PROPERLY CALL viewWillHide/viewDidHide of any view, since there\n may be no view visible.",
            "line": " demo/platforms/ios/build/YASMFDemoApp.app/www/framework/ui-core.js:261"
        },
        {
            "message": "Missing item type\nHides a view and pops it off the viewStack. NO ANIMATION.\n DOES NOT ATTEMPT TO CALL viewWillShow or viewDidShow of any view\n on the stack, as there may not be any view visible.",
            "line": " demo/platforms/ios/build/YASMFDemoApp.app/www/framework/ui-core.js:288"
        },
        {
            "message": "Missing item type\nSwaps a view on the stack with the desired view. NO ANIMATION.",
            "line": " demo/platforms/ios/build/YASMFDemoApp.app/www/framework/ui-core.js:314"
        },
        {
            "message": "Missing item type\nShows a view WITH ANIMATION and pushes it onto the view stack.\n The animation is a slide from right to left.",
            "line": " demo/platforms/ios/build/YASMFDemoApp.app/www/framework/ui-core.js:505"
        },
        {
            "message": "Missing item type\nHides a view WITH ANIMATION and pops it from the stack.",
            "line": " demo/platforms/ios/build/YASMFDemoApp.app/www/framework/ui-core.js:664"
        },
        {
            "message": "Missing item type\nApplies touch listeners to various items in the dom.\nIn this version of the framework, we apply it to BUTTONs.",
            "line": " demo/platforms/ios/build/YASMFDemoApp.app/www/framework/ui-core.js:924"
        },
        {
            "message": "Missing item type\nUI-GESTURES\n Author:  Kerri Shotts\n Version: 0.1 alpha\n License: MIT\nA simple, no-frills gesture recognizer. Permits long-press recognition,\n horizontal swipe recognition, and vertical swipe recognition. Recognizing\n swipes in a particular direction (left, right, up, down) should be easy to\n add later.\nThe SimpleGesture class represents the basic recognizer -- it implements all\n the tracking of touch and mouse events. Every 100ms it calls\n a recognition function, which by default does nothing. Essentially, Simple-\n Gesture is abstract. This method is expected to be overridden by a specific\n recognizer, which the LongPressGesture, HorizontalSwipeGesture, and\n VerticalSwipeGesture do.\nThe LongPressGesture will fire off an event when a longpress is recognized.\n How this is recognized is partially defined by the caller -- that is,\n two durations can be supplied. By default, the long-press is recognized at\n 1s and cancelled at 3s (assuming no previous recognition). It is also\n cancelled should any movement outside of a 25px radius occur.\nThe HorizontalSwipeGesture and VerticalSwipeGesture will fire off an event\n when a swipe in the given axis is detected. This swipe is detected when the\n length of the swipe exceeds 75px (or the provided override), and will be\n fired as long as the duration of the swipe is less than the cancel duration\n (3s by default). The line must not deviate by more than 25px in the specified\n axis, or the gesture will fail to be recognized.\nUsage:\nvar anElement = document.getElementById(\"abc\");\n var aLongPressGesture = new GESTURES.LongPressGesture\n                             ( anElement, theFunctionToCallWhenRecognized,\n                               [ thePressDuration, [ theCancelDelay ]] );\nvar aHorizontalSwipeGesture = new GESTURES.HorizontalSwipeGesture\n                               ( anElement, theFunctionToCallWhenRecognized,\n                                 [ theSwipeLength, [ theCancelDelay ]] );\nvar aVerticalSwipeGesture = new GESTURES.VerticalSwipeGesture\n                             ( anElement, theFunctionToCallWhenRecognized,\n                               [ theSwipeLength, [ theCancelDelay ]] );\n\nWhere: anElement is an HTML DOM element\n        theFunctionToCallWhenRecognized is a function that will be called\n            when the gesture is recognized. It will be passed the recognizer,\n            and as such, one can store & retrieve data in this manner:\n                aLongPressGesture.data = \"Hello\";\n                 function theFunctionToCallWhenRecognized ( gr )\n                 { alert (gr.data); }\n           This will generate an alert of \"Hello\" when the element is long-\n            pressed.\n       thePressDuration: Optional, defaults to 1s. The amount of time required\n            to recognize a long-press.\n        theSwipeLength: Optional, defaults to 75px. The length of a swipe\n            required to recognize a swipe.\n        theCancelDelay: Optional, defaults to 3s. If a gesture is not recognized\n            prior to this delay, the gesture is cancelled, that is, it will\n            never be recognized.",
            "line": " demo/platforms/ios/build/YASMFDemoApp.app/www/framework/ui-gestures.js:1"
        },
        {
            "message": "Missing item type\nUI-LABEL\n Author: Kerri Shotts\n Version: 0.3\nUI-LABEL provides the UI.Label object",
            "line": " demo/platforms/ios/build/YASMFDemoApp.app/www/framework/ui-label.js:1"
        },
        {
            "message": "Missing item type\nlabels have the following properties:\n  - text (properlly innerHTML)\n  - textColor ( font Color )\n  - shadow\n  - shadowColor\n  - shadowOffset\n  - textAlignment\n  - font",
            "line": " demo/platforms/ios/build/YASMFDemoApp.app/www/framework/ui-label.js:48"
        },
        {
            "message": "Missing item type\ninit",
            "line": " demo/platforms/ios/build/YASMFDemoApp.app/www/framework/ui-label.js:124"
        },
        {
            "message": "Missing item type\nUI-MSG\n Author: Kerri Shotts\nThis script provides a mechanism by which alerts, prompts, and confirmations\n can be displayed to the end user.",
            "line": " demo/platforms/ios/build/YASMFDemoApp.app/www/framework/ui-msg.js:1"
        },
        {
            "message": "Missing item type\nUI-VIEW\n Author: Kerri Shotts\n Version: 0.3\nUI-VIEW provides the UI.View object",
            "line": " demo/platforms/ios/build/YASMFDemoApp.app/www/framework/ui-view.js:1"
        },
        {
            "message": "Missing item type\nAll views have direct DOM representations",
            "line": " demo/platforms/ios/build/YASMFDemoApp.app/www/framework/ui-view.js:53"
        },
        {
            "message": "Missing item type\nAll views have subviews",
            "line": " demo/platforms/ios/build/YASMFDemoApp.app/www/framework/ui-view.js:59"
        },
        {
            "message": "Missing item type\nAll views have bounds and frames.",
            "line": " demo/platforms/ios/build/YASMFDemoApp.app/www/framework/ui-view.js:97"
        },
        {
            "message": "Missing item type\nrecalculates the element's position based on\n the frame. It also calls calcElement() for the\n object, if defined. After that, it calls the\n _calcElement for every subview, in case they\n decide to be re-positioned.",
            "line": " demo/platforms/ios/build/YASMFDemoApp.app/www/framework/ui-view.js:203"
        },
        {
            "message": "Missing item type\nEvery view has a background color, even if it is transparent.",
            "line": " demo/platforms/ios/build/YASMFDemoApp.app/www/framework/ui-view.js:256"
        },
        {
            "message": "Missing item type\nEvery view can be shown or hidden",
            "line": " demo/platforms/ios/build/YASMFDemoApp.app/www/framework/ui-view.js:276"
        },
        {
            "message": "Missing item type\nEvery view has opacity",
            "line": " demo/platforms/ios/build/YASMFDemoApp.app/www/framework/ui-view.js:300"
        },
        {
            "message": "Missing item type\nViews can override their scrolling",
            "line": " demo/platforms/ios/build/YASMFDemoApp.app/www/framework/ui-view.js:322"
        },
        {
            "message": "Missing item type\nevent processing",
            "line": " demo/platforms/ios/build/YASMFDemoApp.app/www/framework/ui-view.js:340"
        },
        {
            "message": "Missing item type\ninit",
            "line": " demo/platforms/ios/build/YASMFDemoApp.app/www/framework/ui-view.js:386"
        },
        {
            "message": "Missing item type\nUTILITY\n Author: Kerri Shotts\nThis library includes simple utility functions",
            "line": " demo/platforms/ios/build/YASMFDemoApp.app/www/framework/utility.js:1"
        },
        {
            "message": "Missing item type\nChecks to see if the dependency has already been loaded.",
            "line": " demo/platforms/ios/build/YASMFDemoApp.app/www/framework/utility.js:46"
        },
        {
            "message": "Missing item type\nReturns an element specified by elementId. Similar to (but not exactly like) jQuery's $()",
            "line": " demo/platforms/ios/build/YASMFDemoApp.app/www/framework/utility.js:105"
        },
        {
            "message": "Missing item type\nReturns an element specified by elementId, but with localization. Localization assumes\n you have at least one element of the form <elementId_enus>, and that all other localized\n elements have the locale after the elementId appended with an underscore.\n (eg: thisElementIsLocalized_enus and thisElementIsLocalized_eses)",
            "line": " demo/platforms/ios/build/YASMFDemoApp.app/www/framework/utility.js:115"
        },
        {
            "message": "Missing item type\nSimilar to $$. Returns all classes matching a selector.",
            "line": " demo/platforms/ios/build/YASMFDemoApp.app/www/framework/utility.js:153"
        },
        {
            "message": "Missing item type\nUtility function to delay execution of code",
            "line": " demo/platforms/ios/build/YASMFDemoApp.app/www/framework/utility.js:163"
        },
        {
            "message": "Missing item type\nLoads a file or URL and returns it to the completion\n handler. The completion handler must be of the form\n fn(success/failure, data).",
            "line": " demo/platforms/ios/build/YASMFDemoApp.app/www/framework/utility.js:172"
        },
        {
            "message": "Missing item type\nJavascript doesn't provide any native include functionality,\n which tends to bloat code and result in long scripts that are\n brittle. Here's our tiny effort to help stem the tide and\n make Javascript just a /little/ nicer.\nNOTE: includes are loaded SYNCHRONOUSLY. This is done as further\n includes may rely upon the one being loaded now. However, it does\n mean that larger files may take longer to process.",
            "line": " demo/platforms/ios/build/YASMFDemoApp.app/www/framework/utility.js:272"
        },
        {
            "message": "Missing item type\nLoads an HTML fragment, creates a DIV, and adds it to the DOM.\n Any script tags inside will be executed.",
            "line": " demo/platforms/ios/build/YASMFDemoApp.app/www/framework/utility.js:314"
        },
        {
            "message": "Missing item type\nRetrieves a JSON string from the specified URL, and executes completion.\n Completion must be of the form ( success, data ).",
            "line": " demo/platforms/ios/build/YASMFDemoApp.app/www/framework/utility.js:407"
        },
        {
            "message": "Missing item type\nLoads a URL in a popup window. Uses ChildBrowser for PG 2.2.x or\n lower, and in-app browser for 2.3 or higher.",
            "line": " demo/platforms/ios/build/YASMFDemoApp.app/www/framework/utility.js:442"
        },
        {
            "message": "Missing item type\ninstanceOfTemplate returns an HTML string ready for insertion into the DOM\n as an instance of the supplied template (templateElement). Any %VAR% are\n replaced by VAR from the replacements object.",
            "line": " demo/platforms/ios/build/YASMFDemoApp.app/www/framework/utility.js:476"
        },
        {
            "message": "Missing item type\nFilename Handling",
            "line": " demo/platforms/ios/build/YASMFDemoApp.app/www/framework/utility.js:496"
        },
        {
            "message": "Missing item type\nListen for DOMContentLoaded and notify our channel subscribers.",
            "line": " demo/platforms/ios/build/YASMFDemoApp.app/www/cordova.js:98"
        },
        {
            "message": "Missing item type\nIntercept calls to addEventListener + removeEventListener and handle deviceready,\nresume, and pause events.",
            "line": " demo/platforms/ios/build/YASMFDemoApp.app/www/cordova.js:108"
        },
        {
            "message": "Missing item type\nHouses custom event handlers to intercept on document + window event listeners.",
            "line": " demo/platforms/ios/build/YASMFDemoApp.app/www/cordova.js:117"
        },
        {
            "message": "Missing item type\nMethods to add/remove your own addEventListener hijacking on document + window.",
            "line": " demo/platforms/ios/build/YASMFDemoApp.app/www/cordova.js:183"
        },
        {
            "message": "Missing item type\nRetrieve original event handlers that were replaced by Cordova",
            "line": " demo/platforms/ios/build/YASMFDemoApp.app/www/cordova.js:201"
        },
        {
            "message": "Missing item type\nMethod to fire event from native code\nbNoDetach is required for events which cause an exception which needs to be caught in native code",
            "line": " demo/platforms/ios/build/YASMFDemoApp.app/www/cordova.js:210"
        },
        {
            "message": "Missing item type\nPlugin callback mechanism.",
            "line": " demo/platforms/ios/build/YASMFDemoApp.app/www/cordova.js:240"
        },
        {
            "message": "Missing item type\nCalled by native code when returning successful result from an action.",
            "line": " demo/platforms/ios/build/YASMFDemoApp.app/www/cordova.js:260"
        },
        {
            "message": "Missing item type\nCalled by native code when returning error result from an action.",
            "line": " demo/platforms/ios/build/YASMFDemoApp.app/www/cordova.js:271"
        },
        {
            "message": "Missing item type\nCalled by native code when returning the result from an action.",
            "line": " demo/platforms/ios/build/YASMFDemoApp.app/www/cordova.js:284"
        },
        {
            "message": "Missing item type\nMerge properties from one object onto another recursively.  Properties from\nthe src object will overwrite existing target property.",
            "line": " demo/platforms/ios/build/YASMFDemoApp.app/www/cordova.js:462"
        },
        {
            "message": "Missing item type\nCustom pub-sub \"channel\" that can have functions subscribed to it\nThis object is used to define and control firing of events for\ncordova initialization, as well as for custom events thereafter.\n\nThe order of events during page load and Cordova startup is as follows:\n\nonDOMContentLoaded*         Internal event that is received when the web page is loaded and parsed.\nonNativeReady*              Internal event that indicates the Cordova native side is ready.\nonCordovaReady*             Internal event fired when all Cordova JavaScript objects have been created.\nonCordovaInfoReady*         Internal event fired when device properties are available.\nonCordovaConnectionReady*   Internal event fired when the connection property has been set.\nonDeviceReady*              User event fired to indicate that Cordova is ready\nonResume                    User event fired to indicate a start/resume lifecycle event\nonPause                     User event fired to indicate a pause lifecycle event\nonDestroy*                  Internal event fired when app is being destroyed (User should use window.onunload event, not this one).\n\nThe events marked with an * are sticky. Once they have fired, they will stay in the fired state.\nAll listeners that subscribe after the event is fired will be executed right away.\n\nThe only Cordova events that user code should register for are:\n     deviceready           Cordova native code is initialized and Cordova APIs can be called from JavaScript\n     pause                 App has moved to background\n     resume                App has returned to foreground\n\nListeners can be registered as:\n     document.addEventListener(\"deviceready\", myDeviceReadyListener, false);\n     document.addEventListener(\"resume\", myResumeListener, false);\n     document.addEventListener(\"pause\", myPauseListener, false);\n\nThe DOM lifecycle events should be used for saving and restoring state\n     window.onload\n     window.onunload",
            "line": " demo/platforms/ios/build/YASMFDemoApp.app/www/cordova.js:507"
        },
        {
            "message": "Missing item type\nChannel",
            "line": " demo/platforms/ios/build/YASMFDemoApp.app/www/cordova.js:543"
        },
        {
            "message": "Missing item type\nCalls the provided function only after all of the channels specified\nhave been fired. All channels must be sticky channels.",
            "line": " demo/platforms/ios/build/YASMFDemoApp.app/www/cordova.js:563"
        },
        {
            "message": "Missing item type\ncordova Channels that must fire before \"deviceready\" is fired.",
            "line": " demo/platforms/ios/build/YASMFDemoApp.app/www/cordova.js:588"
        },
        {
            "message": "Missing item type\nIndicate that a feature needs to be initialized before it is ready to be used.\nThis holds up Cordova's \"deviceready\" event until the feature has been initialized\nand Cordova.initComplete(feature) is called.",
            "line": " demo/platforms/ios/build/YASMFDemoApp.app/www/cordova.js:594"
        },
        {
            "message": "Missing item type\nIndicate that initialization code has completed and the feature is ready to be used.",
            "line": " demo/platforms/ios/build/YASMFDemoApp.app/www/cordova.js:609"
        },
        {
            "message": "Missing item type\nSubscribes the given function to the channel. Any time that\nChannel.fire is called so too will the function.\nOptionally specify an execution context for the function\nand a guid that can be used to stop subscribing to the channel.\nReturns the guid.",
            "line": " demo/platforms/ios/build/YASMFDemoApp.app/www/cordova.js:626"
        },
        {
            "message": "Missing item type\nUnsubscribes the function with the given guid from the channel.",
            "line": " demo/platforms/ios/build/YASMFDemoApp.app/www/cordova.js:662"
        },
        {
            "message": "Missing item type\nCalls all functions subscribed to this channel.",
            "line": " demo/platforms/ios/build/YASMFDemoApp.app/www/cordova.js:680"
        },
        {
            "message": "Missing item type\nCreates a gap bridge iframe used to notify the native code about queued\ncommands.",
            "line": " demo/platforms/ios/build/YASMFDemoApp.app/www/cordova.js:780"
        },
        {
            "message": "Missing item type\nGets a picture from source defined by \"options.sourceType\", and returns the\nimage as defined by the \"options.destinationType\" option.\n\nThe defaults are sourceType=CAMERA and destinationType=FILE_URI.",
            "line": " demo/platforms/ios/build/YASMFDemoApp.app/www/cordova.js:1138"
        },
        {
            "message": "Missing item type\nA handle to an image picker popover.",
            "line": " demo/platforms/ios/build/YASMFDemoApp.app/www/cordova.js:1219"
        },
        {
            "message": "Missing item type\nEncapsulates options for iOS Popover image picker",
            "line": " demo/platforms/ios/build/YASMFDemoApp.app/www/cordova.js:1238"
        },
        {
            "message": "Missing item type\nEncapsulates all audio capture operation configuration options.",
            "line": " demo/platforms/ios/build/YASMFDemoApp.app/www/cordova.js:1258"
        },
        {
            "message": "Missing item type\nThe CaptureError interface encapsulates all errors in the Capture API.",
            "line": " demo/platforms/ios/build/YASMFDemoApp.app/www/cordova.js:1277"
        },
        {
            "message": "Missing item type\nEncapsulates all image capture operation configuration options.",
            "line": " demo/platforms/ios/build/YASMFDemoApp.app/www/cordova.js:1302"
        },
        {
            "message": "Missing item type\nEncapsulates all video capture operation configuration options.",
            "line": " demo/platforms/ios/build/YASMFDemoApp.app/www/cordova.js:1319"
        },
        {
            "message": "Missing item type\nCompassError.\nAn error code assigned by an implementation when an error has occurred",
            "line": " demo/platforms/ios/build/YASMFDemoApp.app/www/cordova.js:1338"
        },
        {
            "message": "Missing item type\nEncapsulates a set of parameters that the capture device supports.",
            "line": " demo/platforms/ios/build/YASMFDemoApp.app/www/cordova.js:1371"
        },
        {
            "message": "Missing item type\nNetwork status",
            "line": " demo/platforms/ios/build/YASMFDemoApp.app/www/cordova.js:1392"
        },
        {
            "message": "Missing item type\nConverts primitives into Complex Object\nCurrently only used for Date fields",
            "line": " demo/platforms/ios/build/YASMFDemoApp.app/www/cordova.js:1416"
        },
        {
            "message": "Missing item type\nConverts Complex objects into primitives\nOnly conversion at present is for Dates.",
            "line": " demo/platforms/ios/build/YASMFDemoApp.app/www/cordova.js:1430"
        },
        {
            "message": "Missing item type\nContains information about a single contact.",
            "line": " demo/platforms/ios/build/YASMFDemoApp.app/www/cordova.js:1454"
        },
        {
            "message": "Missing item type\nRemoves contact from device storage.",
            "line": " demo/platforms/ios/build/YASMFDemoApp.app/www/cordova.js:1491"
        },
        {
            "message": "Missing item type\nCreates a deep copy of this Contact.\nWith the contact ID set to null.",
            "line": " demo/platforms/ios/build/YASMFDemoApp.app/www/cordova.js:1509"
        },
        {
            "message": "Missing item type\nPersists contact to device storage.",
            "line": " demo/platforms/ios/build/YASMFDemoApp.app/www/cordova.js:1539"
        },
        {
            "message": "Missing item type\nContact address.",
            "line": " demo/platforms/ios/build/YASMFDemoApp.app/www/cordova.js:1573"
        },
        {
            "message": "Missing item type\nContactError.\nAn error code assigned by an implementation when an error has occurred",
            "line": " demo/platforms/ios/build/YASMFDemoApp.app/www/cordova.js:1604"
        },
        {
            "message": "Missing item type\nError codes",
            "line": " demo/platforms/ios/build/YASMFDemoApp.app/www/cordova.js:1613"
        },
        {
            "message": "Missing item type\nGeneric contact field.",
            "line": " demo/platforms/ios/build/YASMFDemoApp.app/www/cordova.js:1631"
        },
        {
            "message": "Missing item type\nContactFindOptions.",
            "line": " demo/platforms/ios/build/YASMFDemoApp.app/www/cordova.js:1653"
        },
        {
            "message": "Missing item type\nContact name.",
            "line": " demo/platforms/ios/build/YASMFDemoApp.app/www/cordova.js:1672"
        },
        {
            "message": "Missing item type\nContact organization.",
            "line": " demo/platforms/ios/build/YASMFDemoApp.app/www/cordova.js:1698"
        },
        {
            "message": "Missing item type\nThis class contains position information.",
            "line": " demo/platforms/ios/build/YASMFDemoApp.app/www/cordova.js:1727"
        },
        {
            "message": "Missing item type\nThe latitude of the position.",
            "line": " demo/platforms/ios/build/YASMFDemoApp.app/www/cordova.js:1739"
        },
        {
            "message": "Missing item type\nThe longitude of the position,",
            "line": " demo/platforms/ios/build/YASMFDemoApp.app/www/cordova.js:1743"
        },
        {
            "message": "Missing item type\nThe accuracy of the position.",
            "line": " demo/platforms/ios/build/YASMFDemoApp.app/www/cordova.js:1747"
        },
        {
            "message": "Missing item type\nThe altitude of the position.",
            "line": " demo/platforms/ios/build/YASMFDemoApp.app/www/cordova.js:1751"
        },
        {
            "message": "Missing item type\nThe direction the device is moving at the position.",
            "line": " demo/platforms/ios/build/YASMFDemoApp.app/www/cordova.js:1755"
        },
        {
            "message": "Missing item type\nThe velocity with which the device is moving at the position.",
            "line": " demo/platforms/ios/build/YASMFDemoApp.app/www/cordova.js:1759"
        },
        {
            "message": "Missing item type\nThe altitude accuracy of the position.",
            "line": " demo/platforms/ios/build/YASMFDemoApp.app/www/cordova.js:1768"
        },
        {
            "message": "Missing item type\nAn interface representing a directory on the file system.\n\n{boolean} isFile always false (readonly)\n{boolean} isDirectory always true (readonly)\n{DOMString} name of the directory, excluding the path leading to it (readonly)\n{DOMString} fullPath the absolute full path to the directory (readonly)\nTODO: implement this!!! {FileSystem} filesystem on which the directory resides (readonly)",
            "line": " demo/platforms/ios/build/YASMFDemoApp.app/www/cordova.js:1788"
        },
        {
            "message": "Missing item type\nCreates a new DirectoryReader to read entries from this directory",
            "line": " demo/platforms/ios/build/YASMFDemoApp.app/www/cordova.js:1803"
        },
        {
            "message": "Missing item type\nCreates or looks up a directory",
            "line": " demo/platforms/ios/build/YASMFDemoApp.app/www/cordova.js:1810"
        },
        {
            "message": "Missing item type\nDeletes a directory and all of it's contents",
            "line": " demo/platforms/ios/build/YASMFDemoApp.app/www/cordova.js:1830"
        },
        {
            "message": "Missing item type\nCreates or looks up a file",
            "line": " demo/platforms/ios/build/YASMFDemoApp.app/www/cordova.js:1844"
        },
        {
            "message": "Missing item type\nAn interface that lists the files and directories in a directory.",
            "line": " demo/platforms/ios/build/YASMFDemoApp.app/www/cordova.js:1875"
        },
        {
            "message": "Missing item type\nReturns a list of entries from a directory.",
            "line": " demo/platforms/ios/build/YASMFDemoApp.app/www/cordova.js:1882"
        },
        {
            "message": "Missing item type\nRepresents a file or directory on the local file system.",
            "line": " demo/platforms/ios/build/YASMFDemoApp.app/www/cordova.js:1925"
        },
        {
            "message": "Missing item type\nLook up the metadata of the entry.",
            "line": " demo/platforms/ios/build/YASMFDemoApp.app/www/cordova.js:1947"
        },
        {
            "message": "Missing item type\nSet the metadata of the entry.",
            "line": " demo/platforms/ios/build/YASMFDemoApp.app/www/cordova.js:1968"
        },
        {
            "message": "Missing item type\nMove a file or directory to a new location.",
            "line": " demo/platforms/ios/build/YASMFDemoApp.app/www/cordova.js:1983"
        },
        {
            "message": "Missing item type\nCopy a directory to a different location.",
            "line": " demo/platforms/ios/build/YASMFDemoApp.app/www/cordova.js:2022"
        },
        {
            "message": "Missing item type\nReturn a URL that can be used to identify this entry.",
            "line": " demo/platforms/ios/build/YASMFDemoApp.app/www/cordova.js:2063"
        },
        {
            "message": "Missing item type\nReturns a URI that can be used to identify this entry.",
            "line": " demo/platforms/ios/build/YASMFDemoApp.app/www/cordova.js:2071"
        },
        {
            "message": "Missing item type\nRemove a file or directory. It is an error to attempt to delete a\ndirectory that is not empty. It is an error to attempt to delete a\nroot directory of a file system.",
            "line": " demo/platforms/ios/build/YASMFDemoApp.app/www/cordova.js:2083"
        },
        {
            "message": "Missing item type\nLook up the parent DirectoryEntry of this entry.",
            "line": " demo/platforms/ios/build/YASMFDemoApp.app/www/cordova.js:2099"
        },
        {
            "message": "Missing item type\nConstructor.\nname {DOMString} name of the file, without path information\nfullPath {DOMString} the full path of the file, including the name\ntype {DOMString} mime type\nlastModifiedDate {Date} last modified date\nsize {Number} size of the file in bytes",
            "line": " demo/platforms/ios/build/YASMFDemoApp.app/www/cordova.js:2125"
        },
        {
            "message": "Missing item type\nReturns a \"slice\" of the file. Since Cordova Files don't contain the actual\ncontent, this really returns a File with adjusted start and end.\nSlices of slices are supported.\nstart {Number} The index at which to start the slice (inclusive).\nend {Number} The index at which to end the slice (exclusive).",
            "line": " demo/platforms/ios/build/YASMFDemoApp.app/www/cordova.js:2146"
        },
        {
            "message": "Missing item type\nAn interface representing a file on the file system.\n\n{boolean} isFile always true (readonly)\n{boolean} isDirectory always false (readonly)\n{DOMString} name of the file, excluding the path leading to it (readonly)\n{DOMString} fullPath the absolute full path to the file (readonly)\n{FileSystem} filesystem on which the file resides (readonly)",
            "line": " demo/platforms/ios/build/YASMFDemoApp.app/www/cordova.js:2194"
        },
        {
            "message": "Missing item type\nCreates a new FileWriter associated with the file that this FileEntry represents.",
            "line": " demo/platforms/ios/build/YASMFDemoApp.app/www/cordova.js:2209"
        },
        {
            "message": "Missing item type\nReturns a File that represents the current state of the file that this FileEntry represents.",
            "line": " demo/platforms/ios/build/YASMFDemoApp.app/www/cordova.js:2227"
        },
        {
            "message": "Missing item type\nFileError",
            "line": " demo/platforms/ios/build/YASMFDemoApp.app/www/cordova.js:2252"
        },
        {
            "message": "Missing item type\nThis class reads the mobile device file system.\n\nFor Android:\n     The root directory is the root of the file system.\n     To read from the SD card, the file name is \"sdcard/my_file.txt\"",
            "line": " demo/platforms/ios/build/YASMFDemoApp.app/www/cordova.js:2291"
        },
        {
            "message": "Missing item type\nAbort reading file.",
            "line": " demo/platforms/ios/build/YASMFDemoApp.app/www/cordova.js:2362"
        },
        {
            "message": "Missing item type\nRead text file.",
            "line": " demo/platforms/ios/build/YASMFDemoApp.app/www/cordova.js:2387"
        },
        {
            "message": "Missing item type\nRead file and return data as a base64 encoded data url.\nA data url is of the form:\n     data:[<mediatype>][;base64],<data>",
            "line": " demo/platforms/ios/build/YASMFDemoApp.app/www/cordova.js:2464"
        },
        {
            "message": "Missing item type\nRead file and return data as a binary data.",
            "line": " demo/platforms/ios/build/YASMFDemoApp.app/www/cordova.js:2538"
        },
        {
            "message": "Missing item type\nRead file and return data as a binary data.",
            "line": " demo/platforms/ios/build/YASMFDemoApp.app/www/cordova.js:2552"
        },
        {
            "message": "Missing item type\nAn interface representing a file system",
            "line": " demo/platforms/ios/build/YASMFDemoApp.app/www/cordova.js:2575"
        },
        {
            "message": "Missing item type\nFileTransfer uploads a file to a remote server.",
            "line": " demo/platforms/ios/build/YASMFDemoApp.app/www/cordova.js:2611"
        },
        {
            "message": "Missing item type\nGiven an absolute file path, uploads a file on the device to a remote server\nusing a multipart HTTP request.",
            "line": " demo/platforms/ios/build/YASMFDemoApp.app/www/cordova.js:2620"
        },
        {
            "message": "Missing item type\nDownloads a file form a given URL and saves it to the specified directory.",
            "line": " demo/platforms/ios/build/YASMFDemoApp.app/www/cordova.js:2673"
        },
        {
            "message": "Missing item type\nAborts the ongoing file transfer on this object",
            "line": " demo/platforms/ios/build/YASMFDemoApp.app/www/cordova.js:2713"
        },
        {
            "message": "Missing item type\nFileTransferError",
            "line": " demo/platforms/ios/build/YASMFDemoApp.app/www/cordova.js:2729"
        },
        {
            "message": "Missing item type\nOptions to customize the HTTP request used to upload files.",
            "line": " demo/platforms/ios/build/YASMFDemoApp.app/www/cordova.js:2753"
        },
        {
            "message": "Missing item type\nFileUploadResult",
            "line": " demo/platforms/ios/build/YASMFDemoApp.app/www/cordova.js:2778"
        },
        {
            "message": "Missing item type\nThis class writes to the mobile device file system.\n\nFor Android:\n     The root directory is the root of the file system.\n     To write to the SD card, the file name is \"sdcard/my_file.txt\"",
            "line": " demo/platforms/ios/build/YASMFDemoApp.app/www/cordova.js:2799"
        },
        {
            "message": "Missing item type\nAbort writing file.",
            "line": " demo/platforms/ios/build/YASMFDemoApp.app/www/cordova.js:2841"
        },
        {
            "message": "Missing item type\nWrites data to the file",
            "line": " demo/platforms/ios/build/YASMFDemoApp.app/www/cordova.js:2866"
        },
        {
            "message": "Missing item type\nMoves the file pointer to the location specified.\n\nIf the offset is a negative number the position of the file\npointer is rewound.  If the offset is greater than the file\nsize the position is set to the end of the file.",
            "line": " demo/platforms/ios/build/YASMFDemoApp.app/www/cordova.js:2940"
        },
        {
            "message": "Missing item type\nTruncates the file to the size specified.",
            "line": " demo/platforms/ios/build/YASMFDemoApp.app/www/cordova.js:2975"
        },
        {
            "message": "Missing item type\nSupplies arguments to methods that lookup or create files and directories.",
            "line": " demo/platforms/ios/build/YASMFDemoApp.app/www/cordova.js:3054"
        },
        {
            "message": "Missing item type\nGlobalization error object",
            "line": " demo/platforms/ios/build/YASMFDemoApp.app/www/cordova.js:3076"
        },
        {
            "message": "Missing item type\nRepresents a local file system.",
            "line": " demo/platforms/ios/build/YASMFDemoApp.app/www/cordova.js:3150"
        },
        {
            "message": "Missing item type\nThis class provides access to the device media, interfaces to both sound and video",
            "line": " demo/platforms/ios/build/YASMFDemoApp.app/www/cordova.js:3173"
        },
        {
            "message": "Missing item type\nStart or resume playing audio file.",
            "line": " demo/platforms/ios/build/YASMFDemoApp.app/www/cordova.js:3217"
        },
        {
            "message": "Missing item type\nStop playing audio file.",
            "line": " demo/platforms/ios/build/YASMFDemoApp.app/www/cordova.js:3224"
        },
        {
            "message": "Missing item type\nSeek or jump to a new time in the track..",
            "line": " demo/platforms/ios/build/YASMFDemoApp.app/www/cordova.js:3234"
        },
        {
            "message": "Missing item type\nPause playing audio file.",
            "line": " demo/platforms/ios/build/YASMFDemoApp.app/www/cordova.js:3244"
        },
        {
            "message": "Missing item type\nGet duration of an audio file.\nThe duration is only set for audio that is playing, paused or stopped.",
            "line": " demo/platforms/ios/build/YASMFDemoApp.app/www/cordova.js:3251"
        },
        {
            "message": "Missing item type\nGet position of audio.",
            "line": " demo/platforms/ios/build/YASMFDemoApp.app/www/cordova.js:3261"
        },
        {
            "message": "Missing item type\nStart recording audio file.",
            "line": " demo/platforms/ios/build/YASMFDemoApp.app/www/cordova.js:3272"
        },
        {
            "message": "Missing item type\nStop recording audio file.",
            "line": " demo/platforms/ios/build/YASMFDemoApp.app/www/cordova.js:3279"
        },
        {
            "message": "Missing item type\nRelease the resources.",
            "line": " demo/platforms/ios/build/YASMFDemoApp.app/www/cordova.js:3286"
        },
        {
            "message": "Missing item type\nAdjust the volume.",
            "line": " demo/platforms/ios/build/YASMFDemoApp.app/www/cordova.js:3293"
        },
        {
            "message": "Missing item type\nAudio has status update.\nPRIVATE",
            "line": " demo/platforms/ios/build/YASMFDemoApp.app/www/cordova.js:3300"
        },
        {
            "message": "Missing item type\nThis class contains information about any Media errors.",
            "line": " demo/platforms/ios/build/YASMFDemoApp.app/www/cordova.js:3347"
        },
        {
            "message": "Missing item type\nRepresents a single file.\n\nname {DOMString} name of the file, without path information\nfullPath {DOMString} the full path of the file, including the name\ntype {DOMString} mime type\nlastModifiedDate {Date} last modified date\nsize {Number} size of the file in bytes",
            "line": " demo/platforms/ios/build/YASMFDemoApp.app/www/cordova.js:3391"
        },
        {
            "message": "Missing item type\nRequest capture format data for a specific file and type",
            "line": " demo/platforms/ios/build/YASMFDemoApp.app/www/cordova.js:3406"
        },
        {
            "message": "Missing item type\nMediaFileData encapsulates format information of a media file.",
            "line": " demo/platforms/ios/build/YASMFDemoApp.app/www/cordova.js:3427"
        },
        {
            "message": "Missing item type\nInformation about the state of the file or directory\n\n{Date} modificationTime (readonly)",
            "line": " demo/platforms/ios/build/YASMFDemoApp.app/www/cordova.js:3451"
        },
        {
            "message": "Missing item type\nPosition error object",
            "line": " demo/platforms/ios/build/YASMFDemoApp.app/www/cordova.js:3485"
        },
        {
            "message": "Missing item type\nThis class provides access to device accelerometer data.",
            "line": " demo/platforms/ios/build/YASMFDemoApp.app/www/cordova.js:3560"
        },
        {
            "message": "Missing item type\nAsynchronously acquires the current acceleration.",
            "line": " demo/platforms/ios/build/YASMFDemoApp.app/www/cordova.js:3621"
        },
        {
            "message": "Missing item type\nAsynchronously acquires the acceleration repeatedly at a given interval.",
            "line": " demo/platforms/ios/build/YASMFDemoApp.app/www/cordova.js:3649"
        },
        {
            "message": "Missing item type\nClears the specified accelerometer watch.",
            "line": " demo/platforms/ios/build/YASMFDemoApp.app/www/cordova.js:3693"
        },
        {
            "message": "Missing item type\nThis class contains information about the current battery status.",
            "line": " demo/platforms/ios/build/YASMFDemoApp.app/www/cordova.js:3726"
        },
        {
            "message": "Missing item type\nEvent handlers for when callbacks get registered for the battery.\nKeep track of how many handlers we have so we can start and stop the native battery listener\nappropriately (and hopefully save on battery life!).",
            "line": " demo/platforms/ios/build/YASMFDemoApp.app/www/cordova.js:3752"
        },
        {
            "message": "Missing item type\nCallback for battery status",
            "line": " demo/platforms/ios/build/YASMFDemoApp.app/www/cordova.js:3766"
        },
        {
            "message": "Missing item type\nError callback for battery start",
            "line": " demo/platforms/ios/build/YASMFDemoApp.app/www/cordova.js:3794"
        },
        {
            "message": "Missing item type\nLaunches a capture of different types.",
            "line": " demo/platforms/ios/build/YASMFDemoApp.app/www/cordova.js:3835"
        },
        {
            "message": "Missing item type\nThe Capture interface exposes an interface to the camera and microphone of the hosting device.",
            "line": " demo/platforms/ios/build/YASMFDemoApp.app/www/cordova.js:3860"
        },
        {
            "message": "Missing item type\nLaunch audio recorder application for recording audio clip(s).",
            "line": " demo/platforms/ios/build/YASMFDemoApp.app/www/cordova.js:3869"
        },
        {
            "message": "Missing item type\nLaunch camera application for taking image(s).",
            "line": " demo/platforms/ios/build/YASMFDemoApp.app/www/cordova.js:3880"
        },
        {
            "message": "Missing item type\nLaunch device camera application for recording video(s).",
            "line": " demo/platforms/ios/build/YASMFDemoApp.app/www/cordova.js:3891"
        },
        {
            "message": "Missing item type\nAsynchronously acquires the current heading.",
            "line": " demo/platforms/ios/build/YASMFDemoApp.app/www/cordova.js:3933"
        },
        {
            "message": "Missing item type\nAsynchronously acquires the heading repeatedly at a given interval.",
            "line": " demo/platforms/ios/build/YASMFDemoApp.app/www/cordova.js:3957"
        },
        {
            "message": "Missing item type\nClears the specified heading watch.",
            "line": " demo/platforms/ios/build/YASMFDemoApp.app/www/cordova.js:3988"
        },
        {
            "message": "Missing item type\nRepresents a group of Contacts.",
            "line": " demo/platforms/ios/build/YASMFDemoApp.app/www/cordova.js:4203"
        },
        {
            "message": "Missing item type\nReturns an array of Contacts matching the search criteria.",
            "line": " demo/platforms/ios/build/YASMFDemoApp.app/www/cordova.js:4208"
        },
        {
            "message": "Missing item type\nThis function creates a new contact, but it does not persist the contact\nto device storage. To persist the contact to device storage, invoke\ncontact.save().",
            "line": " demo/platforms/ios/build/YASMFDemoApp.app/www/cordova.js:4232"
        },
        {
            "message": "Missing item type\nThis represents the mobile device, and provides properties for inspecting the model, version, UUID of the\nphone, etc.",
            "line": " demo/platforms/ios/build/YASMFDemoApp.app/www/cordova.js:4283"
        },
        {
            "message": "Missing item type\nGet device info",
            "line": " demo/platforms/ios/build/YASMFDemoApp.app/www/cordova.js:4316"
        },
        {
            "message": "Missing item type\nSends the given message through exec() to the Echo plugin, which sends it back to the successCallback.",
            "line": " demo/platforms/ios/build/YASMFDemoApp.app/www/cordova.js:4346"
        },
        {
            "message": "Missing item type\nAsynchronously acquires the current position.",
            "line": " demo/platforms/ios/build/YASMFDemoApp.app/www/cordova.js:4465"
        },
        {
            "message": "Missing item type\nAsynchronously watches the geolocation for changes to geolocation.  When a change occurs,\nthe successCallback is called with the new location.",
            "line": " demo/platforms/ios/build/YASMFDemoApp.app/www/cordova.js:4539"
        },
        {
            "message": "Missing item type\nClears the specified heading watch.",
            "line": " demo/platforms/ios/build/YASMFDemoApp.app/www/cordova.js:4590"
        },
        {
            "message": "Missing item type\nReturns the string identifier for the client's current language.\nIt returns the language identifier string to the successCB callback with a\nproperties object as a parameter. If there is an error getting the language,\nthen the errorCB callback is invoked.",
            "line": " demo/platforms/ios/build/YASMFDemoApp.app/www/cordova.js:4630"
        },
        {
            "message": "Missing item type\nReturns the string identifier for the client's current locale setting.\nIt returns the locale identifier string to the successCB callback with a\nproperties object as a parameter. If there is an error getting the locale,\nthen the errorCB callback is invoked.",
            "line": " demo/platforms/ios/build/YASMFDemoApp.app/www/cordova.js:4652"
        },
        {
            "message": "Missing item type\nReturns a date formatted as a string according to the client's user preferences and\ncalendar using the time zone of the client. It returns the formatted date string to the\nsuccessCB callback with a properties object as a parameter. If there is an error\nformatting the date, then the errorCB callback is invoked.\n\nThe defaults are: formatLenght=\"short\" and selector=\"date and time\"",
            "line": " demo/platforms/ios/build/YASMFDemoApp.app/www/cordova.js:4675"
        },
        {
            "message": "Missing item type\nParses a date formatted as a string according to the client's user\npreferences and calendar using the time zone of the client and returns\nthe corresponding date object. It returns the date to the successCB\ncallback with a properties object as a parameter. If there is an error\nparsing the date string, then the errorCB callback is invoked.\n\nThe defaults are: formatLength=\"short\" and selector=\"date and time\"",
            "line": " demo/platforms/ios/build/YASMFDemoApp.app/www/cordova.js:4707"
        },
        {
            "message": "Missing item type\nReturns a pattern string for formatting and parsing dates according to the client's\nuser preferences. It returns the pattern to the successCB callback with a\nproperties object as a parameter. If there is an error obtaining the pattern,\nthen the errorCB callback is invoked.\n\nThe defaults are: formatLength=\"short\" and selector=\"date and time\"",
            "line": " demo/platforms/ios/build/YASMFDemoApp.app/www/cordova.js:4748"
        },
        {
            "message": "Missing item type\nReturns an array of either the names of the months or days of the week\naccording to the client's user preferences and calendar. It returns the array of names to the\nsuccessCB callback with a properties object as a parameter. If there is an error obtaining the\nnames, then the errorCB callback is invoked.\n\nThe defaults are: type=\"wide\" and item=\"months\"",
            "line": " demo/platforms/ios/build/YASMFDemoApp.app/www/cordova.js:4786"
        },
        {
            "message": "Missing item type\nReturns whether daylight savings time is in effect for a given date using the client's\ntime zone and calendar. It returns whether or not daylight savings time is in effect\nto the successCB callback with a properties object as a parameter. If there is an error\nreading the date, then the errorCB callback is invoked.",
            "line": " demo/platforms/ios/build/YASMFDemoApp.app/www/cordova.js:4816"
        },
        {
            "message": "Missing item type\nReturns the first day of the week according to the client's user preferences and calendar.\nThe days of the week are numbered starting from 1 where 1 is considered to be Sunday.\nIt returns the day to the successCB callback with a properties object as a parameter.\nIf there is an error obtaining the pattern, then the errorCB callback is invoked.",
            "line": " demo/platforms/ios/build/YASMFDemoApp.app/www/cordova.js:4842"
        },
        {
            "message": "Missing item type\nReturns a number formatted as a string according to the client's user preferences.\nIt returns the formatted number string to the successCB callback with a properties object as a\nparameter. If there is an error formatting the number, then the errorCB callback is invoked.\n\nThe defaults are: type=\"decimal\"",
            "line": " demo/platforms/ios/build/YASMFDemoApp.app/www/cordova.js:4866"
        },
        {
            "message": "Missing item type\nParses a number formatted as a string according to the client's user preferences and\nreturns the corresponding number. It returns the number to the successCB callback with a\nproperties object as a parameter. If there is an error parsing the number string, then\nthe errorCB callback is invoked.\n\nThe defaults are: type=\"decimal\"",
            "line": " demo/platforms/ios/build/YASMFDemoApp.app/www/cordova.js:4894"
        },
        {
            "message": "Missing item type\nReturns a pattern string for formatting and parsing numbers according to the client's user\npreferences. It returns the pattern to the successCB callback with a properties object as a\nparameter. If there is an error obtaining the pattern, then the errorCB callback is invoked.\n\nThe defaults are: type=\"decimal\"",
            "line": " demo/platforms/ios/build/YASMFDemoApp.app/www/cordova.js:4922"
        },
        {
            "message": "Missing item type\nReturns a pattern string for formatting and parsing currency values according to the client's\nuser preferences and ISO 4217 currency code. It returns the pattern to the successCB callback with a\nproperties object as a parameter. If there is an error obtaining the pattern, then the errorCB\ncallback is invoked.",
            "line": " demo/platforms/ios/build/YASMFDemoApp.app/www/cordova.js:4959"
        },
        {
            "message": "Missing item type\nProvides iOS Contact.display API.",
            "line": " demo/platforms/ios/build/YASMFDemoApp.app/www/cordova.js:5024"
        },
        {
            "message": "Missing item type\ncreate a nice string for an object",
            "line": " demo/platforms/ios/build/YASMFDemoApp.app/www/cordova.js:5076"
        },
        {
            "message": "Missing item type\nWrapper one of the console logging methods, so that\nthe Cordova logging native is called, then the original.",
            "line": " demo/platforms/ios/build/YASMFDemoApp.app/www/cordova.js:5096"
        },
        {
            "message": "Missing item type\nProvides iOS enhanced contacts API.",
            "line": " demo/platforms/ios/build/YASMFDemoApp.app/www/cordova.js:5153"
        },
        {
            "message": "Missing item type\nLogging levels",
            "line": " demo/platforms/ios/build/YASMFDemoApp.app/www/cordova.js:5272"
        },
        {
            "message": "Missing item type\nGetter/Setter for the logging level\n\nReturns the current logging level.\n\nWhen a value is passed, sets the logging level to that value.\nThe values should be one of the following constants:\n   logger.LOG\n   logger.ERROR\n   logger.WARN\n   logger.INFO\n   logger.DEBUG\n\nThe value used determines which messages get printed.  The logging\nvalues above are in order, and only messages logged at the logging\nlevel or above will actually be displayed to the user.  E.g., the\ndefault level is WARN, so only messages logged with LOG, ERROR, or\nWARN will be displayed; INFO and DEBUG messages will be ignored.",
            "line": " demo/platforms/ios/build/YASMFDemoApp.app/www/cordova.js:5298"
        },
        {
            "message": "Missing item type\nGetter/Setter for the useConsole functionality\n\nWhen useConsole is true, the logger will log via the\nbrowser 'console' object.  Otherwise, it will use the\nnative Logger plugin.",
            "line": " demo/platforms/ios/build/YASMFDemoApp.app/www/cordova.js:5328"
        },
        {
            "message": "Missing item type\nLogs a message at the LOG level.\n\nParameters passed after message are used applied to\nthe message with utils.format()",
            "line": " demo/platforms/ios/build/YASMFDemoApp.app/www/cordova.js:5357"
        },
        {
            "message": "Missing item type\nLogs a message at the ERROR level.\n\nParameters passed after message are used applied to\nthe message with utils.format()",
            "line": " demo/platforms/ios/build/YASMFDemoApp.app/www/cordova.js:5365"
        },
        {
            "message": "Missing item type\nLogs a message at the WARN level.\n\nParameters passed after message are used applied to\nthe message with utils.format()",
            "line": " demo/platforms/ios/build/YASMFDemoApp.app/www/cordova.js:5373"
        },
        {
            "message": "Missing item type\nLogs a message at the INFO level.\n\nParameters passed after message are used applied to\nthe message with utils.format()",
            "line": " demo/platforms/ios/build/YASMFDemoApp.app/www/cordova.js:5381"
        },
        {
            "message": "Missing item type\nLogs a message at the DEBUG level.\n\nParameters passed after message are used applied to\nthe message with utils.format()",
            "line": " demo/platforms/ios/build/YASMFDemoApp.app/www/cordova.js:5389"
        },
        {
            "message": "Missing item type\nLogs a message at the specified level.\n\nParameters passed after message are used applied to\nthe message with utils.format()",
            "line": " demo/platforms/ios/build/YASMFDemoApp.app/www/cordova.js:5403"
        },
        {
            "message": "Missing item type\nGet connection info",
            "line": " demo/platforms/ios/build/YASMFDemoApp.app/www/cordova.js:5508"
        },
        {
            "message": "Missing item type\nProvides access to notifications on the device.",
            "line": " demo/platforms/ios/build/YASMFDemoApp.app/www/cordova.js:5576"
        },
        {
            "message": "Missing item type\nOpen a native alert dialog, with a customizable title and button text.",
            "line": " demo/platforms/ios/build/YASMFDemoApp.app/www/cordova.js:5582"
        },
        {
            "message": "Missing item type\nOpen a native confirm dialog, with a customizable title and button text.\nThe result that the user selects is returned to the result callback.",
            "line": " demo/platforms/ios/build/YASMFDemoApp.app/www/cordova.js:5596"
        },
        {
            "message": "Missing item type\nCauses the device to vibrate.",
            "line": " demo/platforms/ios/build/YASMFDemoApp.app/www/cordova.js:5611"
        },
        {
            "message": "Missing item type\nCauses the device to beep.\nOn Android, the default notification ringtone is played \"count\" times.",
            "line": " demo/platforms/ios/build/YASMFDemoApp.app/www/cordova.js:5620"
        },
        {
            "message": "Missing item type\nRequest a file system in which to store application data.",
            "line": " demo/platforms/ios/build/YASMFDemoApp.app/www/cordova.js:5652"
        },
        {
            "message": "Missing item type\nLook up file system Entry referred to by local URI.",
            "line": " demo/platforms/ios/build/YASMFDemoApp.app/www/cordova.js:5699"
        },
        {
            "message": "Missing item type\nDefines a property getter / setter for obj[key].",
            "line": " demo/platforms/ios/build/YASMFDemoApp.app/www/cordova.js:5785"
        },
        {
            "message": "Missing item type\nDefines a property getter for obj[key].",
            "line": " demo/platforms/ios/build/YASMFDemoApp.app/www/cordova.js:5806"
        },
        {
            "message": "Missing item type\nReturns whether the item was found in the array.",
            "line": " demo/platforms/ios/build/YASMFDemoApp.app/www/cordova.js:5824"
        },
        {
            "message": "Missing item type\nReturns an indication of whether the argument is an array or not",
            "line": " demo/platforms/ios/build/YASMFDemoApp.app/www/cordova.js:5839"
        },
        {
            "message": "Missing item type\nReturns an indication of whether the argument is a Date or not",
            "line": " demo/platforms/ios/build/YASMFDemoApp.app/www/cordova.js:5846"
        },
        {
            "message": "Missing item type\nDoes a deep clone of the object.",
            "line": " demo/platforms/ios/build/YASMFDemoApp.app/www/cordova.js:5853"
        },
        {
            "message": "Missing item type\nReturns a wrapped version of the function",
            "line": " demo/platforms/ios/build/YASMFDemoApp.app/www/cordova.js:5880"
        },
        {
            "message": "Missing item type\nCreate a UUID",
            "line": " demo/platforms/ios/build/YASMFDemoApp.app/www/cordova.js:5895"
        },
        {
            "message": "Missing item type\nExtends a child object from a parent object using classical inheritance\npattern.",
            "line": " demo/platforms/ios/build/YASMFDemoApp.app/www/cordova.js:5906"
        },
        {
            "message": "Missing item type\nAlerts a message in any available way: alert or console.log.",
            "line": " demo/platforms/ios/build/YASMFDemoApp.app/www/cordova.js:5922"
        },
        {
            "message": "Missing item type\nFormats a string and arguments following it ala sprintf()\n\nsee utils.vformat() for more information",
            "line": " demo/platforms/ios/build/YASMFDemoApp.app/www/cordova.js:5933"
        },
        {
            "message": "Missing item type\nFormats a string and arguments following it ala vsprintf()\n\nformat chars:\n  %j - format arg as JSON\n  %o - format arg as JSON\n  %c - format arg as ''\n  %% - replace with '%'\nany other char following % will format it's\narg via toString().\n\nfor rationale, see FireBug's Console API:\n   http://getfirebug.com/wiki/index.php/Console_API",
            "line": " demo/platforms/ios/build/YASMFDemoApp.app/www/cordova.js:5943"
        },
        {
            "message": "Missing item type\nCreate all cordova objects once page has fully loaded and native side is ready.",
            "line": " demo/platforms/ios/build/YASMFDemoApp.app/www/cordova.js:6043"
        },
        {
            "message": "Missing item type\nBASE PKOBJECT\n\n*****************************************************************************\nThe Object class provides the top object that all other objects inherit\n from. This provides object inheritance via a subclass/superclass mechanism\n without having to worry about prototype or constructor inheritance.\nPKObjects provide simple subclassing and a limited form of KVO in the form\n of tags and tag listeners.",
            "line": " demo/platforms/ios/www/framework/PKObject.js:1"
        },
        {
            "message": "Missing item type\nWe need a way to provide inheritance. Most methods only provide\n inheritance across the constructor chain, not across any possible\n method. But for our purposes, we need to be able to provide for\n overriding any method (such as drawing, touch responses, etc.),\n and so we implement inheritance in a different way.\nFirst, the _classHierarchy, a private property, provides the\n inheritance tree. All objects inherit from \"Object\".",
            "line": " demo/platforms/ios/www/framework/PKObject.js:38"
        },
        {
            "message": "Missing item type\nObjects are subclassed using this method. The newClass is the\n unique class name of the object (and should match the class'\n actual name.",
            "line": " demo/platforms/ios/www/framework/PKObject.js:52"
        },
        {
            "message": "Missing item type\ngetClass returns the current class of the object. The\n \"class\" property can be used as well. Note that there\n is no \"setter\" for this property; an object's class\n can *not* be changed.",
            "line": " demo/platforms/ios/www/framework/PKObject.js:64"
        },
        {
            "message": "Missing item type\nReturns the super class for the given class. If the\n class is not supplied, the class is assumed to be the\n object's own class.\nThe property \"superClass\" uses this to return the\n object's direct superclass, but getSuperClassOfClass\n can be used to determine superclasses higher up\n the hierarchy.",
            "line": " demo/platforms/ios/www/framework/PKObject.js:78"
        },
        {
            "message": "Missing item type\n_super is an object that stores overridden functions by class and method\n name. This is how we get the ability to arbitrarily override any method\n already present in the superclass.",
            "line": " demo/platforms/ios/www/framework/PKObject.js:105"
        },
        {
            "message": "Missing item type\nMust be called prior to defining the overridden function as this moves\n the original function into the _super object. The functionName must\n match the name of the method exactly, since there may be a long tree\n of code that depends on it.",
            "line": " demo/platforms/ios/www/framework/PKObject.js:114"
        },
        {
            "message": "Missing item type\nCalls a super function with up to 10 arguments.",
            "line": " demo/platforms/ios/www/framework/PKObject.js:132"
        },
        {
            "message": "Missing item type\ninitializes the object",
            "line": " demo/platforms/ios/www/framework/PKObject.js:151"
        },
        {
            "message": "Missing item type\nObjects have some properties that we want all objects to have...",
            "line": " demo/platforms/ios/www/framework/PKObject.js:161"
        },
        {
            "message": "Missing item type\nAll objects subject notifications for events",
            "line": " demo/platforms/ios/www/framework/PKObject.js:210"
        },
        {
            "message": "Missing item type\n//http://stackoverflow.com/a/11462081\nfunction clone(obj){\n    var clonedObjectsArray = [];\n    var originalObjectsArray = []; //used to remove the unique ids when finished\n    var next_objid = 0;\n\n    function objectId(obj) {\n        if (obj == null) return null;\n        if (obj.__obj_id == undefined){\n            obj.__obj_id = next_objid++;\n            originalObjectsArray[obj.__obj_id] = obj;\n        }\n        return obj.__obj_id;\n    }\n\n    function cloneRecursive(obj) {\n        if (null == obj || typeof obj == \"string\" || typeof obj == \"number\" || typeof obj == \"boolean\") return obj;\n\n        // Handle Date\n        if (obj instanceof Date) {\n            var copy = new Date();\n            copy.setTime(obj.getTime());\n            return copy;\n        }\n\n        // Handle Array\n        if (obj instanceof Array) {\n            var copy = [];\n            for (var i = 0; i < obj.length; ++i) {\n                copy[i] = cloneRecursive(obj[i]);\n            }\n            return copy;\n        }\n\n        // Handle Object\n        if (obj instanceof Object) {\n            if (clonedObjectsArray[objectId(obj)] != undefined)\n                return clonedObjectsArray[objectId(obj)];\n\n            var copy;\n            if (obj instanceof Function)//Handle Function\n                copy = function(){return obj.apply(this, arguments);};\n            else\n                copy = {};\n\n            clonedObjectsArray[objectId(obj)] = copy;\n\n            for (var attr in obj)\n                if (attr != \"__obj_id\" && obj.hasOwnProperty(attr))\n                    copy[attr] = cloneRecursive(obj[attr]);                 \n\n            return copy;\n        }       \n\n\n        throw new Error(\"Unable to copy obj! Its type isn't supported.\");\n    }\n    var cloneObj = cloneRecursive(obj);\n\n\n\n    //remove the unique ids\n    for (var i = 0; i < originalObjectsArray.length; i++)\n    {\n        delete originalObjectsArray[i].__obj_id;\n    };\n\n    return cloneObj;\n}",
            "line": " demo/platforms/ios/www/framework/PKObject.js:256"
        },
        {
            "message": "Missing item type\nDEVICE\n Author: Kerri Shotts\nThis library includes functions that reflect the device and its current\n state",
            "line": " demo/platforms/ios/www/framework/device.js:1"
        },
        {
            "message": "Missing item type\nReturns the device platform, lowercased. If PKDEVICE.platformOverride is\n other than \"false\", it is returned instead.",
            "line": " demo/platforms/ios/www/framework/device.js:42"
        },
        {
            "message": "Missing item type\nReturns the device's form factor. Possible values are \"tablet\" and\n \"phone\". If PKDEVICE.formFactorOverride is not false, it is returned\n instead.",
            "line": " demo/platforms/ios/www/framework/device.js:97"
        },
        {
            "message": "Missing item type\nDetermines if the device is in Portrait orientation.",
            "line": " demo/platforms/ios/www/framework/device.js:128"
        },
        {
            "message": "Missing item type\nDetermines if the device is in Landscape orientation.",
            "line": " demo/platforms/ios/www/framework/device.js:137"
        },
        {
            "message": "Missing item type\nDetermines if the device is a hiDPI device (aka retina)",
            "line": " demo/platforms/ios/www/framework/device.js:150"
        },
        {
            "message": "Missing item type\nFILEUTIL\n Author: Kerri Shotts\nThis library includes routines to deal with the FILE API, (which is... a bit\n painful.) The purpose of the library is to reduce the amount of work necessary\n to go through obtaining a file system, working with directories and files,\n etc. That isn't to say that we can eliminate callbacks or even callback\n chaining -- but it is significantly easier without all the intervening cruft,\n which is essentially (for all intents and purposes) boilerplate.\nIMPORTANT NOTE:\nThis library provides various conveniences that make referencing persistent\n and temporary storage a bit easier as well. For example, you can use a\n path like the following:\n    doc://photo.jpg   -->   /some/gobbledygook/yourApp/Documents/photo.jpg\n     tmp://photo.jpg   -->   /some/gobbledygook/yourApp/tmp/photo.jpg\nSeveral APIs (such as camera capture) may also refer to paths with\n \"file://localhost\" attached. The routines will gracefully remove this so that\n the reference is a true file.\nCONVENIENCE:\nFor those who are more comfortable with *nix/BSD commands, nearly each method\n has a version that correlates to a roughly *nix name. The parameters are the\n same, however.\nMETHODS\n   copyFileTo ( source, target, success, failure )         |   cp ()\n   moveFileTo ( source, target, success, failure )         |   mv ()\n   removeFile ( theFile, success, failure )                |   rm ()\n   renameFile ( source, newName, success, failure )        |   -\n   createFileWriter ( theFile, success, failure )          |   fcreate ()\n   writeFileData ( writer, theData, success, failure )     |   fwrite ()\nPLANNED METHODS\n  getListing ( path, filters, success, failure )          |    ls ()\n   createDirectory ( path, newDirectory, success, failure )|    mkdir()\n   removeDirectory ( path, theDirectory, success, failure )|    rmdir()\n   createFileReader ( theFile, success, failure )          |    fopen()\n   readFileData ( reader, success, failure )               |    fread()",
            "line": " demo/platforms/ios/www/framework/fileutil.js:1"
        },
        {
            "message": "Missing item type\nDetermines the persistent and temporary file systems prior\n to file operations. While it's unlikely that these will\n change during application execution, it certainly doesn't\n hurt to re-read them whenever possible (just in case!).\nWhen both are read, the success method is called. If we\n can't obtain one or the other, the failure method is called.",
            "line": " demo/platforms/ios/www/framework/fileutil.js:101"
        },
        {
            "message": "Missing item type\nHandles substition strings within a file path.\n doc:/ translates to the persistent storage. We don't use \"//\" here\n        since the persistentFS doesn't have a trailing \"/\", so we leave\n        that in the original.\n  tmp:/ translates to the temporary storage.\n  file://localhost translates to nothing.",
            "line": " demo/platforms/ios/www/framework/fileutil.js:140"
        },
        {
            "message": "Missing item type\nCopies the file identified by @source to the file identified by @target.\n If the copy is successful, success() is called. If not, failure() is\n called.\nThe target will generally be of the form \"doc://filename\", but it can\n be any path and file name that the application has access to.\nNOTE: Copying will fail if the target exists.",
            "line": " demo/platforms/ios/www/framework/fileutil.js:159"
        },
        {
            "message": "Missing item type\n*nix convenience method.",
            "line": " demo/platforms/ios/www/framework/fileutil.js:193"
        },
        {
            "message": "Missing item type\nMoves the file identified by @source to the file identified by @target.\n If the move is successful, success() is called. If not, failure() is\n called.\nThe target will generally be of the form \"doc://filename\", but it can\n be any path and file name that the application has access to.\nNOTE: The move will overwrite the target if it exists.",
            "line": " demo/platforms/ios/www/framework/fileutil.js:203"
        },
        {
            "message": "Missing item type\nConvenience method that allows renaming a file in the same\n directory as the source. The source's path will prepended\n to the new name.\nNOTE: The move will overwrite the target if it exists.",
            "line": " demo/platforms/ios/www/framework/fileutil.js:237"
        },
        {
            "message": "Missing item type\n*nix convenience method.",
            "line": " demo/platforms/ios/www/framework/fileutil.js:252"
        },
        {
            "message": "Missing item type\nRemoves the file identified by @theFile. The full path must\n be specified.",
            "line": " demo/platforms/ios/www/framework/fileutil.js:262"
        },
        {
            "message": "Missing item type\n*nix convenience method.",
            "line": " demo/platforms/ios/www/framework/fileutil.js:283"
        },
        {
            "message": "Missing item type\nCreates a fileWriter for @theFile. If successful, it will\n call success() with the created writer. If unsuccessful, it\n will call failure().\nOnce in success(), writeFileData() may be used to finish\n the writing of data to the file.\nNote: if the file exists, it will be overwritten.",
            "line": " demo/platforms/ios/www/framework/fileutil.js:293"
        },
        {
            "message": "Missing item type\n*nix convenience method.",
            "line": " demo/platforms/ios/www/framework/fileutil.js:320"
        },
        {
            "message": "Missing item type\nWrites @theData to the specified writer. When complete,\n success() will be called. If it fails, failure().",
            "line": " demo/platforms/ios/www/framework/fileutil.js:330"
        },
        {
            "message": "Missing item type\n*nix convenience method.",
            "line": " demo/platforms/ios/www/framework/fileutil.js:343"
        },
        {
            "message": "Missing item type\nlocalization.js\n Author: Kerri Shotts\nProvides simple localization, as described in Chapter 1 of PhoneGap HotShot.\nRelies on JQuery/Globalize.js, as found at https://github.com/jquery/globalize",
            "line": " demo/platforms/ios/www/framework/localization.js:2"
        },
        {
            "message": "Missing item type\nLoads the JQuery Globalize script from the framework directory\n as well as the underlying cultures definitions.",
            "line": " demo/platforms/ios/www/framework/localization.js:49"
        },
        {
            "message": "Missing item type\nLoads the appropriate locale from the JQuery Globalize script.",
            "line": " demo/platforms/ios/www/framework/localization.js:59"
        },
        {
            "message": "Missing item type\nSets the current locale for the JQuery Globalize script.",
            "line": " demo/platforms/ios/www/framework/localization.js:72"
        },
        {
            "message": "Missing item type\nAdd a translation to the existing translation matrix",
            "line": " demo/platforms/ios/www/framework/localization.js:81"
        },
        {
            "message": "Missing item type\nReturn the user's locale (e.g., en-US or fr-FR)\n for proper localization.",
            "line": " demo/platforms/ios/www/framework/localization.js:103"
        },
        {
            "message": "Missing item type\nConvenience function for translating text.",
            "line": " demo/platforms/ios/www/framework/localization.js:177"
        },
        {
            "message": "Missing item type\nConvenience function for localizing numbers.",
            "line": " demo/platforms/ios/www/framework/localization.js:217"
        },
        {
            "message": "Missing item type\nConvenience function for localizing currency.",
            "line": " demo/platforms/ios/www/framework/localization.js:241"
        },
        {
            "message": "Missing item type\nConvenience function for localizing percentages.",
            "line": " demo/platforms/ios/www/framework/localization.js:264"
        },
        {
            "message": "Missing item type\nConvenience function for localizing dates.",
            "line": " demo/platforms/ios/www/framework/localization.js:285"
        },
        {
            "message": "Missing item type\nBASE PKOBJECT\n\n*****************************************************************************\nThe Object class provides the top object that all other objects inherit\n from. This provides object inheritance via a subclass/superclass mechanism\n without having to worry about prototype or constructor inheritance.\nPKObjects provide simple subclassing and a limited form of KVO in the form\n of tags and tag listeners.",
            "line": " demo/platforms/ios/www/framework/pk-object.js:1"
        },
        {
            "message": "Missing item type\nWe need a way to provide inheritance. Most methods only provide\n inheritance across the constructor chain, not across any possible\n method. But for our purposes, we need to be able to provide for\n overriding any method (such as drawing, touch responses, etc.),\n and so we implement inheritance in a different way.\nFirst, the _classHierarchy, a private property, provides the\n inheritance tree. All objects inherit from \"Object\".",
            "line": " demo/platforms/ios/www/framework/pk-object.js:42"
        },
        {
            "message": "Missing item type\nObjects are subclassed using this method. The newClass is the\n unique class name of the object (and should match the class'\n actual name.",
            "line": " demo/platforms/ios/www/framework/pk-object.js:56"
        },
        {
            "message": "Missing item type\ngetClass returns the current class of the object. The\n \"class\" property can be used as well. Note that there\n is no \"setter\" for this property; an object's class\n can *not* be changed.",
            "line": " demo/platforms/ios/www/framework/pk-object.js:68"
        },
        {
            "message": "Missing item type\nReturns the super class for the given class. If the\n class is not supplied, the class is assumed to be the\n object's own class.\nThe property \"superClass\" uses this to return the\n object's direct superclass, but getSuperClassOfClass\n can be used to determine superclasses higher up\n the hierarchy.",
            "line": " demo/platforms/ios/www/framework/pk-object.js:82"
        },
        {
            "message": "Missing item type\n_super is an object that stores overridden functions by class and method\n name. This is how we get the ability to arbitrarily override any method\n already present in the superclass.",
            "line": " demo/platforms/ios/www/framework/pk-object.js:109"
        },
        {
            "message": "Missing item type\nMust be called prior to defining the overridden function as this moves\n the original function into the _super object. The functionName must\n match the name of the method exactly, since there may be a long tree\n of code that depends on it.",
            "line": " demo/platforms/ios/www/framework/pk-object.js:118"
        },
        {
            "message": "Missing item type\nCalls a super function with up to 10 arguments.",
            "line": " demo/platforms/ios/www/framework/pk-object.js:136"
        },
        {
            "message": "Missing item type\ninitializes the object",
            "line": " demo/platforms/ios/www/framework/pk-object.js:155"
        },
        {
            "message": "Missing item type\nObjects have some properties that we want all objects to have...",
            "line": " demo/platforms/ios/www/framework/pk-object.js:165"
        },
        {
            "message": "Missing item type\nAll objects subject notifications for events",
            "line": " demo/platforms/ios/www/framework/pk-object.js:214"
        },
        {
            "message": "Missing item type\n//http://stackoverflow.com/a/11462081\nfunction clone(obj){\n    var clonedObjectsArray = [];\n    var originalObjectsArray = []; //used to remove the unique ids when finished\n    var next_objid = 0;\n\n    function objectId(obj) {\n        if (obj == null) return null;\n        if (obj.__obj_id == undefined){\n            obj.__obj_id = next_objid++;\n            originalObjectsArray[obj.__obj_id] = obj;\n        }\n        return obj.__obj_id;\n    }\n\n    function cloneRecursive(obj) {\n        if (null == obj || typeof obj == \"string\" || typeof obj == \"number\" || typeof obj == \"boolean\") return obj;\n\n        // Handle Date\n        if (obj instanceof Date) {\n            var copy = new Date();\n            copy.setTime(obj.getTime());\n            return copy;\n        }\n\n        // Handle Array\n        if (obj instanceof Array) {\n            var copy = [];\n            for (var i = 0; i < obj.length; ++i) {\n                copy[i] = cloneRecursive(obj[i]);\n            }\n            return copy;\n        }\n\n        // Handle Object\n        if (obj instanceof Object) {\n            if (clonedObjectsArray[objectId(obj)] != undefined)\n                return clonedObjectsArray[objectId(obj)];\n\n            var copy;\n            if (obj instanceof Function)//Handle Function\n                copy = function(){return obj.apply(this, arguments);};\n            else\n                copy = {};\n\n            clonedObjectsArray[objectId(obj)] = copy;\n\n            for (var attr in obj)\n                if (attr != \"__obj_id\" && obj.hasOwnProperty(attr))\n                    copy[attr] = cloneRecursive(obj[attr]);                 \n\n            return copy;\n        }       \n\n\n        throw new Error(\"Unable to copy obj! Its type isn't supported.\");\n    }\n    var cloneObj = cloneRecursive(obj);\n\n\n\n    //remove the unique ids\n    for (var i = 0; i < originalObjectsArray.length; i++)\n    {\n        delete originalObjectsArray[i].__obj_id;\n    };\n\n    return cloneObj;\n}",
            "line": " demo/platforms/ios/www/framework/pk-object.js:261"
        },
        {
            "message": "Missing item type\nSCROLLER\n Author:  Kerri Shotts\n Version: 0.1 alpha\n License: MIT\nThis library is intended to be similar to iScroll-lite in that it should be\n a relatively fast method of scrolling content without being horribly laggy\n or cause incorrect \"clicks\" to be registered.\nThis library does *NOT* support physics-based scrolling, except for a small\n inertia animation at the end of a scroll. It is not intended to replicate\n native scrolling /at all/. There are no bounces at the top or bottom. There\n is no visible scroll bar either. Essentially, overflow:scroll as supported\n on iOS 5 with no bounce/inertia scrolling.\nConsider this library an experiment. The idea is to be simpler than iScroll\n to use -- for example, the scroller only needs to be created once -- it does\n not need to be refreshed when AJAX content loads. It is intended to be at\n least as fast as iScroll, if not a little faster. It is not, however,\n intended to be a native scrolling solution. At this time, I do not believe\n it truly possible or practice, and users will notice any non-native solution\n that tries to match, so why try?\nUsage:\nvar yourScroller = new SCROLLER.GenericScroller ( \"the_element_to_scroll\" );\nwhere you have the following DOM tree:\n    container_element\n     - the_element_to_scroll\nFuture Goals:\n - Detect native physics scrolling and use it when possible\n  - Detect native overflow:scroll (non-physics) and use it when possible\n  - Improve the inertial scrolling at end (this is a very rough implementation)\n  - Become irrelevant. I hope for a day when all mobile browsers can scroll\n    complex content natively and smoothly.\nSupported Platforms:\n - Android 2.3+\n  - iOS 4.3+\n  - probably any webkit browser?\nKnown Issues:\n  - A little too willing to call a scroll a \"click\".",
            "line": " demo/platforms/ios/www/framework/scroller.js:1"
        },
        {
            "message": "Missing item type\nAttaches the scroller to a new element. The element MUST be contained within\n another element that can support the setting of scrollTop/Left.\nAny overflow values will be overridden. Any webkit transforms may also be\n overridden.",
            "line": " demo/platforms/ios/www/framework/scroller.js:107"
        },
        {
            "message": "Missing item type\nGet the scroll position",
            "line": " demo/platforms/ios/www/framework/scroller.js:148"
        },
        {
            "message": "Missing item type\nScroll to a given location. If the location can't be scrolled to,\n the nearest location will be used.",
            "line": " demo/platforms/ios/www/framework/scroller.js:161"
        },
        {
            "message": "Missing item type\ntouchStart initializes all our values when a touch is received.",
            "line": " demo/platforms/ios/www/framework/scroller.js:174"
        },
        {
            "message": "Missing item type\nWhen a touch moves, we'll receive the event here.",
            "line": " demo/platforms/ios/www/framework/scroller.js:204"
        },
        {
            "message": "Missing item type\nWhen a finger is lifted from the screen, we'll get this event.\n We can determine whether or not it was a click if we scrolled at all,\n and if we scrolled a certain distance, we'll do a little inertial\n scrolling",
            "line": " demo/platforms/ios/www/framework/scroller.js:238"
        },
        {
            "message": "Missing item type\nUI-BASE\n Author: Kerri Shotts\n Version: 0.3\nThis provides the basics of the UI model, including poings, rects, and more.",
            "line": " demo/platforms/ios/www/framework/ui-base.js:1"
        },
        {
            "message": "Missing item type\nPoints are of the form { x: #, y: # }",
            "line": " demo/platforms/ios/www/framework/ui-base.js:37"
        },
        {
            "message": "Missing item type\noffsets a point by the values in another point. For example,\n if pointA = { x:100, y:100 } and pointB = { x:-5, y:10 }, the\n returned point will be { x:95, y:110 }.",
            "line": " demo/platforms/ios/www/framework/ui-base.js:50"
        },
        {
            "message": "Missing item type\nSizes are similar to points, but they are of the form\n { w: width, h: height }",
            "line": " demo/platforms/ios/www/framework/ui-base.js:62"
        },
        {
            "message": "Missing item type\nRects are of the form { origin: point, size: size }, or\n { origin: {x: #, y: #}, size: {w: width, h: height} }",
            "line": " demo/platforms/ios/www/framework/ui-base.js:89"
        },
        {
            "message": "Missing item type\nOffsets a rect's origin point by the supplied point.",
            "line": " demo/platforms/ios/www/framework/ui-base.js:105"
        },
        {
            "message": "Missing item type\nOffsets a rect's origin by the origin of the second rect,\n and offsets the rect's size by the size of the second rect.\nThis implies that the second rect does not need to be \"real\",\n as in, it can have negative sizes and such.",
            "line": " demo/platforms/ios/www/framework/ui-base.js:115"
        },
        {
            "message": "Missing item type\nReturns true if the two rects supplied intersect. Note that this\n will not work if the rectangles are non-canonical.",
            "line": " demo/platforms/ios/www/framework/ui-base.js:130"
        },
        {
            "message": "Missing item type\nThink of these as constants, except you have to call them like a \n method.\nzeroPoint() returns a point of {0,0}\n zeroSize() returns a size of {0,0}\n zeroRect() returns a rect of { {0,0}, {0,0} }\n screenSize() returns a **point** representing the size of the screen (or browser).\n screenBounds() returns a **rect** representing the size of the screen (with a {0,0} origin).",
            "line": " demo/platforms/ios/www/framework/ui-base.js:155"
        },
        {
            "message": "Missing item type\nfonts",
            "line": " demo/platforms/ios/www/framework/ui-base.js:173"
        },
        {
            "message": "Missing item type\nShadows",
            "line": " demo/platforms/ios/www/framework/ui-base.js:237"
        },
        {
            "message": "Missing item type\nColors",
            "line": " demo/platforms/ios/www/framework/ui-base.js:314"
        },
        {
            "message": "Missing item type\nImages",
            "line": " demo/platforms/ios/www/framework/ui-base.js:361"
        },
        {
            "message": "Missing item type\nborders",
            "line": " demo/platforms/ios/www/framework/ui-base.js:458"
        },
        {
            "message": "Missing item type\nevents",
            "line": " demo/platforms/ios/www/framework/ui-base.js:554"
        },
        {
            "message": "Missing item type\nUI-CORE\n Author: Kerri Shotts\nThis script provides a lot of the core user interface framework, such as\n loading content via AJAX, transitions, and more.",
            "line": " demo/platforms/ios/www/framework/ui-core.js:1"
        },
        {
            "message": "Missing item type\nGlobal back button handler, since doing it per-view and per-\n message is buggy. This will call backButtonPressed() on any\n active message or view. If said method isn't found, it will\n pop the view on its own.\nNOTE: if backButtonPressed() is defined, it is expected to\n pop the view, if the method is also a view. If the view is\n not popped, the back button will have no effect.\nSECOND NOTE: Since back buttons received in quick succession\n are problematic, we force the user to wait 1s before the next\n back button is accepted.",
            "line": " demo/platforms/ios/www/framework/ui-core.js:84"
        },
        {
            "message": "Missing item type\nInitializes the application framework\n  - in this version of the framework, we force an orientation update.\n  - by default, we attach a global back button handler\n  - we deisable animations and transforms for Android and WP7.",
            "line": " demo/platforms/ios/www/framework/ui-core.js:129"
        },
        {
            "message": "Missing item type\nCalled on first-start and whenever the orientation changes. It updates the\n body's class to reflect the device, formfactor, orientation, and scaling.",
            "line": " demo/platforms/ios/www/framework/ui-core.js:177"
        },
        {
            "message": "Missing item type\nShows a view and pushes it on the viewStack. NO ANIMATION.\n DOES NOT PROPERLY CALL viewWillHide/viewDidHide of any view, since there\n may be no view visible.",
            "line": " demo/platforms/ios/www/framework/ui-core.js:261"
        },
        {
            "message": "Missing item type\nHides a view and pops it off the viewStack. NO ANIMATION.\n DOES NOT ATTEMPT TO CALL viewWillShow or viewDidShow of any view\n on the stack, as there may not be any view visible.",
            "line": " demo/platforms/ios/www/framework/ui-core.js:288"
        },
        {
            "message": "Missing item type\nSwaps a view on the stack with the desired view. NO ANIMATION.",
            "line": " demo/platforms/ios/www/framework/ui-core.js:314"
        },
        {
            "message": "Missing item type\nShows a view WITH ANIMATION and pushes it onto the view stack.\n The animation is a slide from right to left.",
            "line": " demo/platforms/ios/www/framework/ui-core.js:505"
        },
        {
            "message": "Missing item type\nHides a view WITH ANIMATION and pops it from the stack.",
            "line": " demo/platforms/ios/www/framework/ui-core.js:664"
        },
        {
            "message": "Missing item type\nApplies touch listeners to various items in the dom.\nIn this version of the framework, we apply it to BUTTONs.",
            "line": " demo/platforms/ios/www/framework/ui-core.js:924"
        },
        {
            "message": "Missing item type\nUI-GESTURES\n Author:  Kerri Shotts\n Version: 0.1 alpha\n License: MIT\nA simple, no-frills gesture recognizer. Permits long-press recognition,\n horizontal swipe recognition, and vertical swipe recognition. Recognizing\n swipes in a particular direction (left, right, up, down) should be easy to\n add later.\nThe SimpleGesture class represents the basic recognizer -- it implements all\n the tracking of touch and mouse events. Every 100ms it calls\n a recognition function, which by default does nothing. Essentially, Simple-\n Gesture is abstract. This method is expected to be overridden by a specific\n recognizer, which the LongPressGesture, HorizontalSwipeGesture, and\n VerticalSwipeGesture do.\nThe LongPressGesture will fire off an event when a longpress is recognized.\n How this is recognized is partially defined by the caller -- that is,\n two durations can be supplied. By default, the long-press is recognized at\n 1s and cancelled at 3s (assuming no previous recognition). It is also\n cancelled should any movement outside of a 25px radius occur.\nThe HorizontalSwipeGesture and VerticalSwipeGesture will fire off an event\n when a swipe in the given axis is detected. This swipe is detected when the\n length of the swipe exceeds 75px (or the provided override), and will be\n fired as long as the duration of the swipe is less than the cancel duration\n (3s by default). The line must not deviate by more than 25px in the specified\n axis, or the gesture will fail to be recognized.\nUsage:\nvar anElement = document.getElementById(\"abc\");\n var aLongPressGesture = new GESTURES.LongPressGesture\n                             ( anElement, theFunctionToCallWhenRecognized,\n                               [ thePressDuration, [ theCancelDelay ]] );\nvar aHorizontalSwipeGesture = new GESTURES.HorizontalSwipeGesture\n                               ( anElement, theFunctionToCallWhenRecognized,\n                                 [ theSwipeLength, [ theCancelDelay ]] );\nvar aVerticalSwipeGesture = new GESTURES.VerticalSwipeGesture\n                             ( anElement, theFunctionToCallWhenRecognized,\n                               [ theSwipeLength, [ theCancelDelay ]] );\n\nWhere: anElement is an HTML DOM element\n        theFunctionToCallWhenRecognized is a function that will be called\n            when the gesture is recognized. It will be passed the recognizer,\n            and as such, one can store & retrieve data in this manner:\n                aLongPressGesture.data = \"Hello\";\n                 function theFunctionToCallWhenRecognized ( gr )\n                 { alert (gr.data); }\n           This will generate an alert of \"Hello\" when the element is long-\n            pressed.\n       thePressDuration: Optional, defaults to 1s. The amount of time required\n            to recognize a long-press.\n        theSwipeLength: Optional, defaults to 75px. The length of a swipe\n            required to recognize a swipe.\n        theCancelDelay: Optional, defaults to 3s. If a gesture is not recognized\n            prior to this delay, the gesture is cancelled, that is, it will\n            never be recognized.",
            "line": " demo/platforms/ios/www/framework/ui-gestures.js:1"
        },
        {
            "message": "Missing item type\nUI-LABEL\n Author: Kerri Shotts\n Version: 0.3\nUI-LABEL provides the UI.Label object",
            "line": " demo/platforms/ios/www/framework/ui-label.js:1"
        },
        {
            "message": "Missing item type\nlabels have the following properties:\n  - text (properlly innerHTML)\n  - textColor ( font Color )\n  - shadow\n  - shadowColor\n  - shadowOffset\n  - textAlignment\n  - font",
            "line": " demo/platforms/ios/www/framework/ui-label.js:48"
        },
        {
            "message": "Missing item type\ninit",
            "line": " demo/platforms/ios/www/framework/ui-label.js:124"
        },
        {
            "message": "Missing item type\nUI-MSG\n Author: Kerri Shotts\nThis script provides a mechanism by which alerts, prompts, and confirmations\n can be displayed to the end user.",
            "line": " demo/platforms/ios/www/framework/ui-msg.js:1"
        },
        {
            "message": "Missing item type\nUI-VIEW\n Author: Kerri Shotts\n Version: 0.3\nUI-VIEW provides the UI.View object",
            "line": " demo/platforms/ios/www/framework/ui-view.js:1"
        },
        {
            "message": "Missing item type\nAll views have direct DOM representations",
            "line": " demo/platforms/ios/www/framework/ui-view.js:60"
        },
        {
            "message": "Missing item type\nAll views have subviews",
            "line": " demo/platforms/ios/www/framework/ui-view.js:66"
        },
        {
            "message": "Missing item type\nAll views have bounds and frames.",
            "line": " demo/platforms/ios/www/framework/ui-view.js:104"
        },
        {
            "message": "Missing item type\nrecalculates the element's position based on\n the frame. It also calls calcElement() for the\n object, if defined. After that, it calls the\n _calcElement for every subview, in case they\n decide to be re-positioned.",
            "line": " demo/platforms/ios/www/framework/ui-view.js:210"
        },
        {
            "message": "Missing item type\nEvery view has a background color, even if it is transparent.",
            "line": " demo/platforms/ios/www/framework/ui-view.js:263"
        },
        {
            "message": "Missing item type\nEvery view can have a background image",
            "line": " demo/platforms/ios/www/framework/ui-view.js:283"
        },
        {
            "message": "Missing item type\nEvery view can also have a border",
            "line": " demo/platforms/ios/www/framework/ui-view.js:302"
        },
        {
            "message": "Missing item type\nAnd every view can also have multiple shadows",
            "line": " demo/platforms/ios/www/framework/ui-view.js:323"
        },
        {
            "message": "Missing item type\nEvery view can be shown or hidden",
            "line": " demo/platforms/ios/www/framework/ui-view.js:352"
        },
        {
            "message": "Missing item type\nEvery view has opacity",
            "line": " demo/platforms/ios/www/framework/ui-view.js:376"
        },
        {
            "message": "Missing item type\nViews can override their scrolling",
            "line": " demo/platforms/ios/www/framework/ui-view.js:398"
        },
        {
            "message": "Missing item type\nevent processing",
            "line": " demo/platforms/ios/www/framework/ui-view.js:416"
        },
        {
            "message": "Missing item type\ninit",
            "line": " demo/platforms/ios/www/framework/ui-view.js:500"
        },
        {
            "message": "Missing item type\nUTILITY\n Author: Kerri Shotts\nThis library includes simple utility functions",
            "line": " demo/platforms/ios/www/framework/utility.js:1"
        },
        {
            "message": "Missing item type\nChecks to see if the dependency has already been loaded.",
            "line": " demo/platforms/ios/www/framework/utility.js:46"
        },
        {
            "message": "Missing item type\nReturns an element specified by elementId. Similar to (but not exactly like) jQuery's $()",
            "line": " demo/platforms/ios/www/framework/utility.js:105"
        },
        {
            "message": "Missing item type\nReturns an element specified by elementId, but with localization. Localization assumes\n you have at least one element of the form <elementId_enus>, and that all other localized\n elements have the locale after the elementId appended with an underscore.\n (eg: thisElementIsLocalized_enus and thisElementIsLocalized_eses)",
            "line": " demo/platforms/ios/www/framework/utility.js:115"
        },
        {
            "message": "Missing item type\nSimilar to $$. Returns all classes matching a selector.",
            "line": " demo/platforms/ios/www/framework/utility.js:153"
        },
        {
            "message": "Missing item type\nUtility function to delay execution of code",
            "line": " demo/platforms/ios/www/framework/utility.js:163"
        },
        {
            "message": "Missing item type\nLoads a file or URL and returns it to the completion\n handler. The completion handler must be of the form\n fn(success/failure, data).",
            "line": " demo/platforms/ios/www/framework/utility.js:172"
        },
        {
            "message": "Missing item type\nJavascript doesn't provide any native include functionality,\n which tends to bloat code and result in long scripts that are\n brittle. Here's our tiny effort to help stem the tide and\n make Javascript just a /little/ nicer.\nNOTE: includes are loaded SYNCHRONOUSLY. This is done as further\n includes may rely upon the one being loaded now. However, it does\n mean that larger files may take longer to process.",
            "line": " demo/platforms/ios/www/framework/utility.js:272"
        },
        {
            "message": "Missing item type\nLoads an HTML fragment, creates a DIV, and adds it to the DOM.\n Any script tags inside will be executed.",
            "line": " demo/platforms/ios/www/framework/utility.js:314"
        },
        {
            "message": "Missing item type\nRetrieves a JSON string from the specified URL, and executes completion.\n Completion must be of the form ( success, data ).",
            "line": " demo/platforms/ios/www/framework/utility.js:407"
        },
        {
            "message": "Missing item type\nLoads a URL in a popup window. Uses ChildBrowser for PG 2.2.x or\n lower, and in-app browser for 2.3 or higher.",
            "line": " demo/platforms/ios/www/framework/utility.js:442"
        },
        {
            "message": "Missing item type\ninstanceOfTemplate returns an HTML string ready for insertion into the DOM\n as an instance of the supplied template (templateElement). Any %VAR% are\n replaced by VAR from the replacements object.",
            "line": " demo/platforms/ios/www/framework/utility.js:476"
        },
        {
            "message": "Missing item type\nFilename Handling",
            "line": " demo/platforms/ios/www/framework/utility.js:496"
        },
        {
            "message": "Missing item type\nListen for DOMContentLoaded and notify our channel subscribers.",
            "line": " demo/platforms/ios/www/cordova.js:98"
        },
        {
            "message": "Missing item type\nIntercept calls to addEventListener + removeEventListener and handle deviceready,\nresume, and pause events.",
            "line": " demo/platforms/ios/www/cordova.js:108"
        },
        {
            "message": "Missing item type\nHouses custom event handlers to intercept on document + window event listeners.",
            "line": " demo/platforms/ios/www/cordova.js:117"
        },
        {
            "message": "Missing item type\nMethods to add/remove your own addEventListener hijacking on document + window.",
            "line": " demo/platforms/ios/www/cordova.js:183"
        },
        {
            "message": "Missing item type\nRetrieve original event handlers that were replaced by Cordova",
            "line": " demo/platforms/ios/www/cordova.js:201"
        },
        {
            "message": "Missing item type\nMethod to fire event from native code\nbNoDetach is required for events which cause an exception which needs to be caught in native code",
            "line": " demo/platforms/ios/www/cordova.js:210"
        },
        {
            "message": "Missing item type\nPlugin callback mechanism.",
            "line": " demo/platforms/ios/www/cordova.js:240"
        },
        {
            "message": "Missing item type\nCalled by native code when returning successful result from an action.",
            "line": " demo/platforms/ios/www/cordova.js:260"
        },
        {
            "message": "Missing item type\nCalled by native code when returning error result from an action.",
            "line": " demo/platforms/ios/www/cordova.js:271"
        },
        {
            "message": "Missing item type\nCalled by native code when returning the result from an action.",
            "line": " demo/platforms/ios/www/cordova.js:284"
        },
        {
            "message": "Missing item type\nMerge properties from one object onto another recursively.  Properties from\nthe src object will overwrite existing target property.",
            "line": " demo/platforms/ios/www/cordova.js:462"
        },
        {
            "message": "Missing item type\nCustom pub-sub \"channel\" that can have functions subscribed to it\nThis object is used to define and control firing of events for\ncordova initialization, as well as for custom events thereafter.\n\nThe order of events during page load and Cordova startup is as follows:\n\nonDOMContentLoaded*         Internal event that is received when the web page is loaded and parsed.\nonNativeReady*              Internal event that indicates the Cordova native side is ready.\nonCordovaReady*             Internal event fired when all Cordova JavaScript objects have been created.\nonCordovaInfoReady*         Internal event fired when device properties are available.\nonCordovaConnectionReady*   Internal event fired when the connection property has been set.\nonDeviceReady*              User event fired to indicate that Cordova is ready\nonResume                    User event fired to indicate a start/resume lifecycle event\nonPause                     User event fired to indicate a pause lifecycle event\nonDestroy*                  Internal event fired when app is being destroyed (User should use window.onunload event, not this one).\n\nThe events marked with an * are sticky. Once they have fired, they will stay in the fired state.\nAll listeners that subscribe after the event is fired will be executed right away.\n\nThe only Cordova events that user code should register for are:\n     deviceready           Cordova native code is initialized and Cordova APIs can be called from JavaScript\n     pause                 App has moved to background\n     resume                App has returned to foreground\n\nListeners can be registered as:\n     document.addEventListener(\"deviceready\", myDeviceReadyListener, false);\n     document.addEventListener(\"resume\", myResumeListener, false);\n     document.addEventListener(\"pause\", myPauseListener, false);\n\nThe DOM lifecycle events should be used for saving and restoring state\n     window.onload\n     window.onunload",
            "line": " demo/platforms/ios/www/cordova.js:507"
        },
        {
            "message": "Missing item type\nChannel",
            "line": " demo/platforms/ios/www/cordova.js:543"
        },
        {
            "message": "Missing item type\nCalls the provided function only after all of the channels specified\nhave been fired. All channels must be sticky channels.",
            "line": " demo/platforms/ios/www/cordova.js:563"
        },
        {
            "message": "Missing item type\ncordova Channels that must fire before \"deviceready\" is fired.",
            "line": " demo/platforms/ios/www/cordova.js:588"
        },
        {
            "message": "Missing item type\nIndicate that a feature needs to be initialized before it is ready to be used.\nThis holds up Cordova's \"deviceready\" event until the feature has been initialized\nand Cordova.initComplete(feature) is called.",
            "line": " demo/platforms/ios/www/cordova.js:594"
        },
        {
            "message": "Missing item type\nIndicate that initialization code has completed and the feature is ready to be used.",
            "line": " demo/platforms/ios/www/cordova.js:609"
        },
        {
            "message": "Missing item type\nSubscribes the given function to the channel. Any time that\nChannel.fire is called so too will the function.\nOptionally specify an execution context for the function\nand a guid that can be used to stop subscribing to the channel.\nReturns the guid.",
            "line": " demo/platforms/ios/www/cordova.js:626"
        },
        {
            "message": "Missing item type\nUnsubscribes the function with the given guid from the channel.",
            "line": " demo/platforms/ios/www/cordova.js:662"
        },
        {
            "message": "Missing item type\nCalls all functions subscribed to this channel.",
            "line": " demo/platforms/ios/www/cordova.js:680"
        },
        {
            "message": "Missing item type\nCreates a gap bridge iframe used to notify the native code about queued\ncommands.",
            "line": " demo/platforms/ios/www/cordova.js:780"
        },
        {
            "message": "Missing item type\nGets a picture from source defined by \"options.sourceType\", and returns the\nimage as defined by the \"options.destinationType\" option.\n\nThe defaults are sourceType=CAMERA and destinationType=FILE_URI.",
            "line": " demo/platforms/ios/www/cordova.js:1138"
        },
        {
            "message": "Missing item type\nA handle to an image picker popover.",
            "line": " demo/platforms/ios/www/cordova.js:1219"
        },
        {
            "message": "Missing item type\nEncapsulates options for iOS Popover image picker",
            "line": " demo/platforms/ios/www/cordova.js:1238"
        },
        {
            "message": "Missing item type\nEncapsulates all audio capture operation configuration options.",
            "line": " demo/platforms/ios/www/cordova.js:1258"
        },
        {
            "message": "Missing item type\nThe CaptureError interface encapsulates all errors in the Capture API.",
            "line": " demo/platforms/ios/www/cordova.js:1277"
        },
        {
            "message": "Missing item type\nEncapsulates all image capture operation configuration options.",
            "line": " demo/platforms/ios/www/cordova.js:1302"
        },
        {
            "message": "Missing item type\nEncapsulates all video capture operation configuration options.",
            "line": " demo/platforms/ios/www/cordova.js:1319"
        },
        {
            "message": "Missing item type\nCompassError.\nAn error code assigned by an implementation when an error has occurred",
            "line": " demo/platforms/ios/www/cordova.js:1338"
        },
        {
            "message": "Missing item type\nEncapsulates a set of parameters that the capture device supports.",
            "line": " demo/platforms/ios/www/cordova.js:1371"
        },
        {
            "message": "Missing item type\nNetwork status",
            "line": " demo/platforms/ios/www/cordova.js:1392"
        },
        {
            "message": "Missing item type\nConverts primitives into Complex Object\nCurrently only used for Date fields",
            "line": " demo/platforms/ios/www/cordova.js:1416"
        },
        {
            "message": "Missing item type\nConverts Complex objects into primitives\nOnly conversion at present is for Dates.",
            "line": " demo/platforms/ios/www/cordova.js:1430"
        },
        {
            "message": "Missing item type\nContains information about a single contact.",
            "line": " demo/platforms/ios/www/cordova.js:1454"
        },
        {
            "message": "Missing item type\nRemoves contact from device storage.",
            "line": " demo/platforms/ios/www/cordova.js:1491"
        },
        {
            "message": "Missing item type\nCreates a deep copy of this Contact.\nWith the contact ID set to null.",
            "line": " demo/platforms/ios/www/cordova.js:1509"
        },
        {
            "message": "Missing item type\nPersists contact to device storage.",
            "line": " demo/platforms/ios/www/cordova.js:1539"
        },
        {
            "message": "Missing item type\nContact address.",
            "line": " demo/platforms/ios/www/cordova.js:1573"
        },
        {
            "message": "Missing item type\nContactError.\nAn error code assigned by an implementation when an error has occurred",
            "line": " demo/platforms/ios/www/cordova.js:1604"
        },
        {
            "message": "Missing item type\nError codes",
            "line": " demo/platforms/ios/www/cordova.js:1613"
        },
        {
            "message": "Missing item type\nGeneric contact field.",
            "line": " demo/platforms/ios/www/cordova.js:1631"
        },
        {
            "message": "Missing item type\nContactFindOptions.",
            "line": " demo/platforms/ios/www/cordova.js:1653"
        },
        {
            "message": "Missing item type\nContact name.",
            "line": " demo/platforms/ios/www/cordova.js:1672"
        },
        {
            "message": "Missing item type\nContact organization.",
            "line": " demo/platforms/ios/www/cordova.js:1698"
        },
        {
            "message": "Missing item type\nThis class contains position information.",
            "line": " demo/platforms/ios/www/cordova.js:1727"
        },
        {
            "message": "Missing item type\nThe latitude of the position.",
            "line": " demo/platforms/ios/www/cordova.js:1739"
        },
        {
            "message": "Missing item type\nThe longitude of the position,",
            "line": " demo/platforms/ios/www/cordova.js:1743"
        },
        {
            "message": "Missing item type\nThe accuracy of the position.",
            "line": " demo/platforms/ios/www/cordova.js:1747"
        },
        {
            "message": "Missing item type\nThe altitude of the position.",
            "line": " demo/platforms/ios/www/cordova.js:1751"
        },
        {
            "message": "Missing item type\nThe direction the device is moving at the position.",
            "line": " demo/platforms/ios/www/cordova.js:1755"
        },
        {
            "message": "Missing item type\nThe velocity with which the device is moving at the position.",
            "line": " demo/platforms/ios/www/cordova.js:1759"
        },
        {
            "message": "Missing item type\nThe altitude accuracy of the position.",
            "line": " demo/platforms/ios/www/cordova.js:1768"
        },
        {
            "message": "Missing item type\nAn interface representing a directory on the file system.\n\n{boolean} isFile always false (readonly)\n{boolean} isDirectory always true (readonly)\n{DOMString} name of the directory, excluding the path leading to it (readonly)\n{DOMString} fullPath the absolute full path to the directory (readonly)\nTODO: implement this!!! {FileSystem} filesystem on which the directory resides (readonly)",
            "line": " demo/platforms/ios/www/cordova.js:1788"
        },
        {
            "message": "Missing item type\nCreates a new DirectoryReader to read entries from this directory",
            "line": " demo/platforms/ios/www/cordova.js:1803"
        },
        {
            "message": "Missing item type\nCreates or looks up a directory",
            "line": " demo/platforms/ios/www/cordova.js:1810"
        },
        {
            "message": "Missing item type\nDeletes a directory and all of it's contents",
            "line": " demo/platforms/ios/www/cordova.js:1830"
        },
        {
            "message": "Missing item type\nCreates or looks up a file",
            "line": " demo/platforms/ios/www/cordova.js:1844"
        },
        {
            "message": "Missing item type\nAn interface that lists the files and directories in a directory.",
            "line": " demo/platforms/ios/www/cordova.js:1875"
        },
        {
            "message": "Missing item type\nReturns a list of entries from a directory.",
            "line": " demo/platforms/ios/www/cordova.js:1882"
        },
        {
            "message": "Missing item type\nRepresents a file or directory on the local file system.",
            "line": " demo/platforms/ios/www/cordova.js:1925"
        },
        {
            "message": "Missing item type\nLook up the metadata of the entry.",
            "line": " demo/platforms/ios/www/cordova.js:1947"
        },
        {
            "message": "Missing item type\nSet the metadata of the entry.",
            "line": " demo/platforms/ios/www/cordova.js:1968"
        },
        {
            "message": "Missing item type\nMove a file or directory to a new location.",
            "line": " demo/platforms/ios/www/cordova.js:1983"
        },
        {
            "message": "Missing item type\nCopy a directory to a different location.",
            "line": " demo/platforms/ios/www/cordova.js:2022"
        },
        {
            "message": "Missing item type\nReturn a URL that can be used to identify this entry.",
            "line": " demo/platforms/ios/www/cordova.js:2063"
        },
        {
            "message": "Missing item type\nReturns a URI that can be used to identify this entry.",
            "line": " demo/platforms/ios/www/cordova.js:2071"
        },
        {
            "message": "Missing item type\nRemove a file or directory. It is an error to attempt to delete a\ndirectory that is not empty. It is an error to attempt to delete a\nroot directory of a file system.",
            "line": " demo/platforms/ios/www/cordova.js:2083"
        },
        {
            "message": "Missing item type\nLook up the parent DirectoryEntry of this entry.",
            "line": " demo/platforms/ios/www/cordova.js:2099"
        },
        {
            "message": "Missing item type\nConstructor.\nname {DOMString} name of the file, without path information\nfullPath {DOMString} the full path of the file, including the name\ntype {DOMString} mime type\nlastModifiedDate {Date} last modified date\nsize {Number} size of the file in bytes",
            "line": " demo/platforms/ios/www/cordova.js:2125"
        },
        {
            "message": "Missing item type\nReturns a \"slice\" of the file. Since Cordova Files don't contain the actual\ncontent, this really returns a File with adjusted start and end.\nSlices of slices are supported.\nstart {Number} The index at which to start the slice (inclusive).\nend {Number} The index at which to end the slice (exclusive).",
            "line": " demo/platforms/ios/www/cordova.js:2146"
        },
        {
            "message": "Missing item type\nAn interface representing a file on the file system.\n\n{boolean} isFile always true (readonly)\n{boolean} isDirectory always false (readonly)\n{DOMString} name of the file, excluding the path leading to it (readonly)\n{DOMString} fullPath the absolute full path to the file (readonly)\n{FileSystem} filesystem on which the file resides (readonly)",
            "line": " demo/platforms/ios/www/cordova.js:2194"
        },
        {
            "message": "Missing item type\nCreates a new FileWriter associated with the file that this FileEntry represents.",
            "line": " demo/platforms/ios/www/cordova.js:2209"
        },
        {
            "message": "Missing item type\nReturns a File that represents the current state of the file that this FileEntry represents.",
            "line": " demo/platforms/ios/www/cordova.js:2227"
        },
        {
            "message": "Missing item type\nFileError",
            "line": " demo/platforms/ios/www/cordova.js:2252"
        },
        {
            "message": "Missing item type\nThis class reads the mobile device file system.\n\nFor Android:\n     The root directory is the root of the file system.\n     To read from the SD card, the file name is \"sdcard/my_file.txt\"",
            "line": " demo/platforms/ios/www/cordova.js:2291"
        },
        {
            "message": "Missing item type\nAbort reading file.",
            "line": " demo/platforms/ios/www/cordova.js:2362"
        },
        {
            "message": "Missing item type\nRead text file.",
            "line": " demo/platforms/ios/www/cordova.js:2387"
        },
        {
            "message": "Missing item type\nRead file and return data as a base64 encoded data url.\nA data url is of the form:\n     data:[<mediatype>][;base64],<data>",
            "line": " demo/platforms/ios/www/cordova.js:2464"
        },
        {
            "message": "Missing item type\nRead file and return data as a binary data.",
            "line": " demo/platforms/ios/www/cordova.js:2538"
        },
        {
            "message": "Missing item type\nRead file and return data as a binary data.",
            "line": " demo/platforms/ios/www/cordova.js:2552"
        },
        {
            "message": "Missing item type\nAn interface representing a file system",
            "line": " demo/platforms/ios/www/cordova.js:2575"
        },
        {
            "message": "Missing item type\nFileTransfer uploads a file to a remote server.",
            "line": " demo/platforms/ios/www/cordova.js:2611"
        },
        {
            "message": "Missing item type\nGiven an absolute file path, uploads a file on the device to a remote server\nusing a multipart HTTP request.",
            "line": " demo/platforms/ios/www/cordova.js:2620"
        },
        {
            "message": "Missing item type\nDownloads a file form a given URL and saves it to the specified directory.",
            "line": " demo/platforms/ios/www/cordova.js:2673"
        },
        {
            "message": "Missing item type\nAborts the ongoing file transfer on this object",
            "line": " demo/platforms/ios/www/cordova.js:2713"
        },
        {
            "message": "Missing item type\nFileTransferError",
            "line": " demo/platforms/ios/www/cordova.js:2729"
        },
        {
            "message": "Missing item type\nOptions to customize the HTTP request used to upload files.",
            "line": " demo/platforms/ios/www/cordova.js:2753"
        },
        {
            "message": "Missing item type\nFileUploadResult",
            "line": " demo/platforms/ios/www/cordova.js:2778"
        },
        {
            "message": "Missing item type\nThis class writes to the mobile device file system.\n\nFor Android:\n     The root directory is the root of the file system.\n     To write to the SD card, the file name is \"sdcard/my_file.txt\"",
            "line": " demo/platforms/ios/www/cordova.js:2799"
        },
        {
            "message": "Missing item type\nAbort writing file.",
            "line": " demo/platforms/ios/www/cordova.js:2841"
        },
        {
            "message": "Missing item type\nWrites data to the file",
            "line": " demo/platforms/ios/www/cordova.js:2866"
        },
        {
            "message": "Missing item type\nMoves the file pointer to the location specified.\n\nIf the offset is a negative number the position of the file\npointer is rewound.  If the offset is greater than the file\nsize the position is set to the end of the file.",
            "line": " demo/platforms/ios/www/cordova.js:2940"
        },
        {
            "message": "Missing item type\nTruncates the file to the size specified.",
            "line": " demo/platforms/ios/www/cordova.js:2975"
        },
        {
            "message": "Missing item type\nSupplies arguments to methods that lookup or create files and directories.",
            "line": " demo/platforms/ios/www/cordova.js:3054"
        },
        {
            "message": "Missing item type\nGlobalization error object",
            "line": " demo/platforms/ios/www/cordova.js:3076"
        },
        {
            "message": "Missing item type\nRepresents a local file system.",
            "line": " demo/platforms/ios/www/cordova.js:3150"
        },
        {
            "message": "Missing item type\nThis class provides access to the device media, interfaces to both sound and video",
            "line": " demo/platforms/ios/www/cordova.js:3173"
        },
        {
            "message": "Missing item type\nStart or resume playing audio file.",
            "line": " demo/platforms/ios/www/cordova.js:3217"
        },
        {
            "message": "Missing item type\nStop playing audio file.",
            "line": " demo/platforms/ios/www/cordova.js:3224"
        },
        {
            "message": "Missing item type\nSeek or jump to a new time in the track..",
            "line": " demo/platforms/ios/www/cordova.js:3234"
        },
        {
            "message": "Missing item type\nPause playing audio file.",
            "line": " demo/platforms/ios/www/cordova.js:3244"
        },
        {
            "message": "Missing item type\nGet duration of an audio file.\nThe duration is only set for audio that is playing, paused or stopped.",
            "line": " demo/platforms/ios/www/cordova.js:3251"
        },
        {
            "message": "Missing item type\nGet position of audio.",
            "line": " demo/platforms/ios/www/cordova.js:3261"
        },
        {
            "message": "Missing item type\nStart recording audio file.",
            "line": " demo/platforms/ios/www/cordova.js:3272"
        },
        {
            "message": "Missing item type\nStop recording audio file.",
            "line": " demo/platforms/ios/www/cordova.js:3279"
        },
        {
            "message": "Missing item type\nRelease the resources.",
            "line": " demo/platforms/ios/www/cordova.js:3286"
        },
        {
            "message": "Missing item type\nAdjust the volume.",
            "line": " demo/platforms/ios/www/cordova.js:3293"
        },
        {
            "message": "Missing item type\nAudio has status update.\nPRIVATE",
            "line": " demo/platforms/ios/www/cordova.js:3300"
        },
        {
            "message": "Missing item type\nThis class contains information about any Media errors.",
            "line": " demo/platforms/ios/www/cordova.js:3347"
        },
        {
            "message": "Missing item type\nRepresents a single file.\n\nname {DOMString} name of the file, without path information\nfullPath {DOMString} the full path of the file, including the name\ntype {DOMString} mime type\nlastModifiedDate {Date} last modified date\nsize {Number} size of the file in bytes",
            "line": " demo/platforms/ios/www/cordova.js:3391"
        },
        {
            "message": "Missing item type\nRequest capture format data for a specific file and type",
            "line": " demo/platforms/ios/www/cordova.js:3406"
        },
        {
            "message": "Missing item type\nMediaFileData encapsulates format information of a media file.",
            "line": " demo/platforms/ios/www/cordova.js:3427"
        },
        {
            "message": "Missing item type\nInformation about the state of the file or directory\n\n{Date} modificationTime (readonly)",
            "line": " demo/platforms/ios/www/cordova.js:3451"
        },
        {
            "message": "Missing item type\nPosition error object",
            "line": " demo/platforms/ios/www/cordova.js:3485"
        },
        {
            "message": "Missing item type\nThis class provides access to device accelerometer data.",
            "line": " demo/platforms/ios/www/cordova.js:3560"
        },
        {
            "message": "Missing item type\nAsynchronously acquires the current acceleration.",
            "line": " demo/platforms/ios/www/cordova.js:3621"
        },
        {
            "message": "Missing item type\nAsynchronously acquires the acceleration repeatedly at a given interval.",
            "line": " demo/platforms/ios/www/cordova.js:3649"
        },
        {
            "message": "Missing item type\nClears the specified accelerometer watch.",
            "line": " demo/platforms/ios/www/cordova.js:3693"
        },
        {
            "message": "Missing item type\nThis class contains information about the current battery status.",
            "line": " demo/platforms/ios/www/cordova.js:3726"
        },
        {
            "message": "Missing item type\nEvent handlers for when callbacks get registered for the battery.\nKeep track of how many handlers we have so we can start and stop the native battery listener\nappropriately (and hopefully save on battery life!).",
            "line": " demo/platforms/ios/www/cordova.js:3752"
        },
        {
            "message": "Missing item type\nCallback for battery status",
            "line": " demo/platforms/ios/www/cordova.js:3766"
        },
        {
            "message": "Missing item type\nError callback for battery start",
            "line": " demo/platforms/ios/www/cordova.js:3794"
        },
        {
            "message": "Missing item type\nLaunches a capture of different types.",
            "line": " demo/platforms/ios/www/cordova.js:3835"
        },
        {
            "message": "Missing item type\nThe Capture interface exposes an interface to the camera and microphone of the hosting device.",
            "line": " demo/platforms/ios/www/cordova.js:3860"
        },
        {
            "message": "Missing item type\nLaunch audio recorder application for recording audio clip(s).",
            "line": " demo/platforms/ios/www/cordova.js:3869"
        },
        {
            "message": "Missing item type\nLaunch camera application for taking image(s).",
            "line": " demo/platforms/ios/www/cordova.js:3880"
        },
        {
            "message": "Missing item type\nLaunch device camera application for recording video(s).",
            "line": " demo/platforms/ios/www/cordova.js:3891"
        },
        {
            "message": "Missing item type\nAsynchronously acquires the current heading.",
            "line": " demo/platforms/ios/www/cordova.js:3933"
        },
        {
            "message": "Missing item type\nAsynchronously acquires the heading repeatedly at a given interval.",
            "line": " demo/platforms/ios/www/cordova.js:3957"
        },
        {
            "message": "Missing item type\nClears the specified heading watch.",
            "line": " demo/platforms/ios/www/cordova.js:3988"
        },
        {
            "message": "Missing item type\nRepresents a group of Contacts.",
            "line": " demo/platforms/ios/www/cordova.js:4203"
        },
        {
            "message": "Missing item type\nReturns an array of Contacts matching the search criteria.",
            "line": " demo/platforms/ios/www/cordova.js:4208"
        },
        {
            "message": "Missing item type\nThis function creates a new contact, but it does not persist the contact\nto device storage. To persist the contact to device storage, invoke\ncontact.save().",
            "line": " demo/platforms/ios/www/cordova.js:4232"
        },
        {
            "message": "Missing item type\nThis represents the mobile device, and provides properties for inspecting the model, version, UUID of the\nphone, etc.",
            "line": " demo/platforms/ios/www/cordova.js:4283"
        },
        {
            "message": "Missing item type\nGet device info",
            "line": " demo/platforms/ios/www/cordova.js:4316"
        },
        {
            "message": "Missing item type\nSends the given message through exec() to the Echo plugin, which sends it back to the successCallback.",
            "line": " demo/platforms/ios/www/cordova.js:4346"
        },
        {
            "message": "Missing item type\nAsynchronously acquires the current position.",
            "line": " demo/platforms/ios/www/cordova.js:4465"
        },
        {
            "message": "Missing item type\nAsynchronously watches the geolocation for changes to geolocation.  When a change occurs,\nthe successCallback is called with the new location.",
            "line": " demo/platforms/ios/www/cordova.js:4539"
        },
        {
            "message": "Missing item type\nClears the specified heading watch.",
            "line": " demo/platforms/ios/www/cordova.js:4590"
        },
        {
            "message": "Missing item type\nReturns the string identifier for the client's current language.\nIt returns the language identifier string to the successCB callback with a\nproperties object as a parameter. If there is an error getting the language,\nthen the errorCB callback is invoked.",
            "line": " demo/platforms/ios/www/cordova.js:4630"
        },
        {
            "message": "Missing item type\nReturns the string identifier for the client's current locale setting.\nIt returns the locale identifier string to the successCB callback with a\nproperties object as a parameter. If there is an error getting the locale,\nthen the errorCB callback is invoked.",
            "line": " demo/platforms/ios/www/cordova.js:4652"
        },
        {
            "message": "Missing item type\nReturns a date formatted as a string according to the client's user preferences and\ncalendar using the time zone of the client. It returns the formatted date string to the\nsuccessCB callback with a properties object as a parameter. If there is an error\nformatting the date, then the errorCB callback is invoked.\n\nThe defaults are: formatLenght=\"short\" and selector=\"date and time\"",
            "line": " demo/platforms/ios/www/cordova.js:4675"
        },
        {
            "message": "Missing item type\nParses a date formatted as a string according to the client's user\npreferences and calendar using the time zone of the client and returns\nthe corresponding date object. It returns the date to the successCB\ncallback with a properties object as a parameter. If there is an error\nparsing the date string, then the errorCB callback is invoked.\n\nThe defaults are: formatLength=\"short\" and selector=\"date and time\"",
            "line": " demo/platforms/ios/www/cordova.js:4707"
        },
        {
            "message": "Missing item type\nReturns a pattern string for formatting and parsing dates according to the client's\nuser preferences. It returns the pattern to the successCB callback with a\nproperties object as a parameter. If there is an error obtaining the pattern,\nthen the errorCB callback is invoked.\n\nThe defaults are: formatLength=\"short\" and selector=\"date and time\"",
            "line": " demo/platforms/ios/www/cordova.js:4748"
        },
        {
            "message": "Missing item type\nReturns an array of either the names of the months or days of the week\naccording to the client's user preferences and calendar. It returns the array of names to the\nsuccessCB callback with a properties object as a parameter. If there is an error obtaining the\nnames, then the errorCB callback is invoked.\n\nThe defaults are: type=\"wide\" and item=\"months\"",
            "line": " demo/platforms/ios/www/cordova.js:4786"
        },
        {
            "message": "Missing item type\nReturns whether daylight savings time is in effect for a given date using the client's\ntime zone and calendar. It returns whether or not daylight savings time is in effect\nto the successCB callback with a properties object as a parameter. If there is an error\nreading the date, then the errorCB callback is invoked.",
            "line": " demo/platforms/ios/www/cordova.js:4816"
        },
        {
            "message": "Missing item type\nReturns the first day of the week according to the client's user preferences and calendar.\nThe days of the week are numbered starting from 1 where 1 is considered to be Sunday.\nIt returns the day to the successCB callback with a properties object as a parameter.\nIf there is an error obtaining the pattern, then the errorCB callback is invoked.",
            "line": " demo/platforms/ios/www/cordova.js:4842"
        },
        {
            "message": "Missing item type\nReturns a number formatted as a string according to the client's user preferences.\nIt returns the formatted number string to the successCB callback with a properties object as a\nparameter. If there is an error formatting the number, then the errorCB callback is invoked.\n\nThe defaults are: type=\"decimal\"",
            "line": " demo/platforms/ios/www/cordova.js:4866"
        },
        {
            "message": "Missing item type\nParses a number formatted as a string according to the client's user preferences and\nreturns the corresponding number. It returns the number to the successCB callback with a\nproperties object as a parameter. If there is an error parsing the number string, then\nthe errorCB callback is invoked.\n\nThe defaults are: type=\"decimal\"",
            "line": " demo/platforms/ios/www/cordova.js:4894"
        },
        {
            "message": "Missing item type\nReturns a pattern string for formatting and parsing numbers according to the client's user\npreferences. It returns the pattern to the successCB callback with a properties object as a\nparameter. If there is an error obtaining the pattern, then the errorCB callback is invoked.\n\nThe defaults are: type=\"decimal\"",
            "line": " demo/platforms/ios/www/cordova.js:4922"
        },
        {
            "message": "Missing item type\nReturns a pattern string for formatting and parsing currency values according to the client's\nuser preferences and ISO 4217 currency code. It returns the pattern to the successCB callback with a\nproperties object as a parameter. If there is an error obtaining the pattern, then the errorCB\ncallback is invoked.",
            "line": " demo/platforms/ios/www/cordova.js:4959"
        },
        {
            "message": "Missing item type\nProvides iOS Contact.display API.",
            "line": " demo/platforms/ios/www/cordova.js:5024"
        },
        {
            "message": "Missing item type\ncreate a nice string for an object",
            "line": " demo/platforms/ios/www/cordova.js:5076"
        },
        {
            "message": "Missing item type\nWrapper one of the console logging methods, so that\nthe Cordova logging native is called, then the original.",
            "line": " demo/platforms/ios/www/cordova.js:5096"
        },
        {
            "message": "Missing item type\nProvides iOS enhanced contacts API.",
            "line": " demo/platforms/ios/www/cordova.js:5153"
        },
        {
            "message": "Missing item type\nLogging levels",
            "line": " demo/platforms/ios/www/cordova.js:5272"
        },
        {
            "message": "Missing item type\nGetter/Setter for the logging level\n\nReturns the current logging level.\n\nWhen a value is passed, sets the logging level to that value.\nThe values should be one of the following constants:\n   logger.LOG\n   logger.ERROR\n   logger.WARN\n   logger.INFO\n   logger.DEBUG\n\nThe value used determines which messages get printed.  The logging\nvalues above are in order, and only messages logged at the logging\nlevel or above will actually be displayed to the user.  E.g., the\ndefault level is WARN, so only messages logged with LOG, ERROR, or\nWARN will be displayed; INFO and DEBUG messages will be ignored.",
            "line": " demo/platforms/ios/www/cordova.js:5298"
        },
        {
            "message": "Missing item type\nGetter/Setter for the useConsole functionality\n\nWhen useConsole is true, the logger will log via the\nbrowser 'console' object.  Otherwise, it will use the\nnative Logger plugin.",
            "line": " demo/platforms/ios/www/cordova.js:5328"
        },
        {
            "message": "Missing item type\nLogs a message at the LOG level.\n\nParameters passed after message are used applied to\nthe message with utils.format()",
            "line": " demo/platforms/ios/www/cordova.js:5357"
        },
        {
            "message": "Missing item type\nLogs a message at the ERROR level.\n\nParameters passed after message are used applied to\nthe message with utils.format()",
            "line": " demo/platforms/ios/www/cordova.js:5365"
        },
        {
            "message": "Missing item type\nLogs a message at the WARN level.\n\nParameters passed after message are used applied to\nthe message with utils.format()",
            "line": " demo/platforms/ios/www/cordova.js:5373"
        },
        {
            "message": "Missing item type\nLogs a message at the INFO level.\n\nParameters passed after message are used applied to\nthe message with utils.format()",
            "line": " demo/platforms/ios/www/cordova.js:5381"
        },
        {
            "message": "Missing item type\nLogs a message at the DEBUG level.\n\nParameters passed after message are used applied to\nthe message with utils.format()",
            "line": " demo/platforms/ios/www/cordova.js:5389"
        },
        {
            "message": "Missing item type\nLogs a message at the specified level.\n\nParameters passed after message are used applied to\nthe message with utils.format()",
            "line": " demo/platforms/ios/www/cordova.js:5403"
        },
        {
            "message": "Missing item type\nGet connection info",
            "line": " demo/platforms/ios/www/cordova.js:5508"
        },
        {
            "message": "Missing item type\nProvides access to notifications on the device.",
            "line": " demo/platforms/ios/www/cordova.js:5576"
        },
        {
            "message": "Missing item type\nOpen a native alert dialog, with a customizable title and button text.",
            "line": " demo/platforms/ios/www/cordova.js:5582"
        },
        {
            "message": "Missing item type\nOpen a native confirm dialog, with a customizable title and button text.\nThe result that the user selects is returned to the result callback.",
            "line": " demo/platforms/ios/www/cordova.js:5596"
        },
        {
            "message": "Missing item type\nCauses the device to vibrate.",
            "line": " demo/platforms/ios/www/cordova.js:5611"
        },
        {
            "message": "Missing item type\nCauses the device to beep.\nOn Android, the default notification ringtone is played \"count\" times.",
            "line": " demo/platforms/ios/www/cordova.js:5620"
        },
        {
            "message": "Missing item type\nRequest a file system in which to store application data.",
            "line": " demo/platforms/ios/www/cordova.js:5652"
        },
        {
            "message": "Missing item type\nLook up file system Entry referred to by local URI.",
            "line": " demo/platforms/ios/www/cordova.js:5699"
        },
        {
            "message": "Missing item type\nDefines a property getter / setter for obj[key].",
            "line": " demo/platforms/ios/www/cordova.js:5785"
        },
        {
            "message": "Missing item type\nDefines a property getter for obj[key].",
            "line": " demo/platforms/ios/www/cordova.js:5806"
        },
        {
            "message": "Missing item type\nReturns whether the item was found in the array.",
            "line": " demo/platforms/ios/www/cordova.js:5824"
        },
        {
            "message": "Missing item type\nReturns an indication of whether the argument is an array or not",
            "line": " demo/platforms/ios/www/cordova.js:5839"
        },
        {
            "message": "Missing item type\nReturns an indication of whether the argument is a Date or not",
            "line": " demo/platforms/ios/www/cordova.js:5846"
        },
        {
            "message": "Missing item type\nDoes a deep clone of the object.",
            "line": " demo/platforms/ios/www/cordova.js:5853"
        },
        {
            "message": "Missing item type\nReturns a wrapped version of the function",
            "line": " demo/platforms/ios/www/cordova.js:5880"
        },
        {
            "message": "Missing item type\nCreate a UUID",
            "line": " demo/platforms/ios/www/cordova.js:5895"
        },
        {
            "message": "Missing item type\nExtends a child object from a parent object using classical inheritance\npattern.",
            "line": " demo/platforms/ios/www/cordova.js:5906"
        },
        {
            "message": "Missing item type\nAlerts a message in any available way: alert or console.log.",
            "line": " demo/platforms/ios/www/cordova.js:5922"
        },
        {
            "message": "Missing item type\nFormats a string and arguments following it ala sprintf()\n\nsee utils.vformat() for more information",
            "line": " demo/platforms/ios/www/cordova.js:5933"
        },
        {
            "message": "Missing item type\nFormats a string and arguments following it ala vsprintf()\n\nformat chars:\n  %j - format arg as JSON\n  %o - format arg as JSON\n  %c - format arg as ''\n  %% - replace with '%'\nany other char following % will format it's\narg via toString().\n\nfor rationale, see FireBug's Console API:\n   http://getfirebug.com/wiki/index.php/Console_API",
            "line": " demo/platforms/ios/www/cordova.js:5943"
        },
        {
            "message": "Missing item type\nCreate all cordova objects once page has fully loaded and native side is ready.",
            "line": " demo/platforms/ios/www/cordova.js:6043"
        },
        {
            "message": "Missing item type\nBASE PKOBJECT\n\n*****************************************************************************\nThe Object class provides the top object that all other objects inherit\n from. This provides object inheritance via a subclass/superclass mechanism\n without having to worry about prototype or constructor inheritance.\nPKObjects provide simple subclassing and a limited form of KVO in the form\n of tags and tag listeners.",
            "line": " demo/www/framework/PKObject.js:1"
        },
        {
            "message": "Missing item type\nWe need a way to provide inheritance. Most methods only provide\n inheritance across the constructor chain, not across any possible\n method. But for our purposes, we need to be able to provide for\n overriding any method (such as drawing, touch responses, etc.),\n and so we implement inheritance in a different way.\nFirst, the _classHierarchy, a private property, provides the\n inheritance tree. All objects inherit from \"Object\".",
            "line": " demo/www/framework/PKObject.js:38"
        },
        {
            "message": "Missing item type\nObjects are subclassed using this method. The newClass is the\n unique class name of the object (and should match the class'\n actual name.",
            "line": " demo/www/framework/PKObject.js:52"
        },
        {
            "message": "Missing item type\ngetClass returns the current class of the object. The\n \"class\" property can be used as well. Note that there\n is no \"setter\" for this property; an object's class\n can *not* be changed.",
            "line": " demo/www/framework/PKObject.js:64"
        },
        {
            "message": "Missing item type\nReturns the super class for the given class. If the\n class is not supplied, the class is assumed to be the\n object's own class.\nThe property \"superClass\" uses this to return the\n object's direct superclass, but getSuperClassOfClass\n can be used to determine superclasses higher up\n the hierarchy.",
            "line": " demo/www/framework/PKObject.js:78"
        },
        {
            "message": "Missing item type\n_super is an object that stores overridden functions by class and method\n name. This is how we get the ability to arbitrarily override any method\n already present in the superclass.",
            "line": " demo/www/framework/PKObject.js:105"
        },
        {
            "message": "Missing item type\nMust be called prior to defining the overridden function as this moves\n the original function into the _super object. The functionName must\n match the name of the method exactly, since there may be a long tree\n of code that depends on it.",
            "line": " demo/www/framework/PKObject.js:114"
        },
        {
            "message": "Missing item type\nCalls a super function with up to 10 arguments.",
            "line": " demo/www/framework/PKObject.js:132"
        },
        {
            "message": "Missing item type\ninitializes the object",
            "line": " demo/www/framework/PKObject.js:151"
        },
        {
            "message": "Missing item type\nObjects have some properties that we want all objects to have...",
            "line": " demo/www/framework/PKObject.js:161"
        },
        {
            "message": "Missing item type\nAll objects subject notifications for events",
            "line": " demo/www/framework/PKObject.js:210"
        },
        {
            "message": "Missing item type\n//http://stackoverflow.com/a/11462081\nfunction clone(obj){\n    var clonedObjectsArray = [];\n    var originalObjectsArray = []; //used to remove the unique ids when finished\n    var next_objid = 0;\n\n    function objectId(obj) {\n        if (obj == null) return null;\n        if (obj.__obj_id == undefined){\n            obj.__obj_id = next_objid++;\n            originalObjectsArray[obj.__obj_id] = obj;\n        }\n        return obj.__obj_id;\n    }\n\n    function cloneRecursive(obj) {\n        if (null == obj || typeof obj == \"string\" || typeof obj == \"number\" || typeof obj == \"boolean\") return obj;\n\n        // Handle Date\n        if (obj instanceof Date) {\n            var copy = new Date();\n            copy.setTime(obj.getTime());\n            return copy;\n        }\n\n        // Handle Array\n        if (obj instanceof Array) {\n            var copy = [];\n            for (var i = 0; i < obj.length; ++i) {\n                copy[i] = cloneRecursive(obj[i]);\n            }\n            return copy;\n        }\n\n        // Handle Object\n        if (obj instanceof Object) {\n            if (clonedObjectsArray[objectId(obj)] != undefined)\n                return clonedObjectsArray[objectId(obj)];\n\n            var copy;\n            if (obj instanceof Function)//Handle Function\n                copy = function(){return obj.apply(this, arguments);};\n            else\n                copy = {};\n\n            clonedObjectsArray[objectId(obj)] = copy;\n\n            for (var attr in obj)\n                if (attr != \"__obj_id\" && obj.hasOwnProperty(attr))\n                    copy[attr] = cloneRecursive(obj[attr]);                 \n\n            return copy;\n        }       \n\n\n        throw new Error(\"Unable to copy obj! Its type isn't supported.\");\n    }\n    var cloneObj = cloneRecursive(obj);\n\n\n\n    //remove the unique ids\n    for (var i = 0; i < originalObjectsArray.length; i++)\n    {\n        delete originalObjectsArray[i].__obj_id;\n    };\n\n    return cloneObj;\n}",
            "line": " demo/www/framework/PKObject.js:256"
        },
        {
            "message": "Missing item type\nDEVICE\n Author: Kerri Shotts\nThis library includes functions that reflect the device and its current\n state",
            "line": " demo/www/framework/device.js:1"
        },
        {
            "message": "Missing item type\nReturns the device platform, lowercased. If PKDEVICE.platformOverride is\n other than \"false\", it is returned instead.",
            "line": " demo/www/framework/device.js:42"
        },
        {
            "message": "Missing item type\nReturns the device's form factor. Possible values are \"tablet\" and\n \"phone\". If PKDEVICE.formFactorOverride is not false, it is returned\n instead.",
            "line": " demo/www/framework/device.js:97"
        },
        {
            "message": "Missing item type\nDetermines if the device is in Portrait orientation.",
            "line": " demo/www/framework/device.js:128"
        },
        {
            "message": "Missing item type\nDetermines if the device is in Landscape orientation.",
            "line": " demo/www/framework/device.js:137"
        },
        {
            "message": "Missing item type\nDetermines if the device is a hiDPI device (aka retina)",
            "line": " demo/www/framework/device.js:150"
        },
        {
            "message": "Missing item type\nFILEUTIL\n Author: Kerri Shotts\nThis library includes routines to deal with the FILE API, (which is... a bit\n painful.) The purpose of the library is to reduce the amount of work necessary\n to go through obtaining a file system, working with directories and files,\n etc. That isn't to say that we can eliminate callbacks or even callback\n chaining -- but it is significantly easier without all the intervening cruft,\n which is essentially (for all intents and purposes) boilerplate.\nIMPORTANT NOTE:\nThis library provides various conveniences that make referencing persistent\n and temporary storage a bit easier as well. For example, you can use a\n path like the following:\n    doc://photo.jpg   -->   /some/gobbledygook/yourApp/Documents/photo.jpg\n     tmp://photo.jpg   -->   /some/gobbledygook/yourApp/tmp/photo.jpg\nSeveral APIs (such as camera capture) may also refer to paths with\n \"file://localhost\" attached. The routines will gracefully remove this so that\n the reference is a true file.\nCONVENIENCE:\nFor those who are more comfortable with *nix/BSD commands, nearly each method\n has a version that correlates to a roughly *nix name. The parameters are the\n same, however.\nMETHODS\n   copyFileTo ( source, target, success, failure )         |   cp ()\n   moveFileTo ( source, target, success, failure )         |   mv ()\n   removeFile ( theFile, success, failure )                |   rm ()\n   renameFile ( source, newName, success, failure )        |   -\n   createFileWriter ( theFile, success, failure )          |   fcreate ()\n   writeFileData ( writer, theData, success, failure )     |   fwrite ()\nPLANNED METHODS\n  getListing ( path, filters, success, failure )          |    ls ()\n   createDirectory ( path, newDirectory, success, failure )|    mkdir()\n   removeDirectory ( path, theDirectory, success, failure )|    rmdir()\n   createFileReader ( theFile, success, failure )          |    fopen()\n   readFileData ( reader, success, failure )               |    fread()",
            "line": " demo/www/framework/fileutil.js:1"
        },
        {
            "message": "Missing item type\nDetermines the persistent and temporary file systems prior\n to file operations. While it's unlikely that these will\n change during application execution, it certainly doesn't\n hurt to re-read them whenever possible (just in case!).\nWhen both are read, the success method is called. If we\n can't obtain one or the other, the failure method is called.",
            "line": " demo/www/framework/fileutil.js:101"
        },
        {
            "message": "Missing item type\nHandles substition strings within a file path.\n doc:/ translates to the persistent storage. We don't use \"//\" here\n        since the persistentFS doesn't have a trailing \"/\", so we leave\n        that in the original.\n  tmp:/ translates to the temporary storage.\n  file://localhost translates to nothing.",
            "line": " demo/www/framework/fileutil.js:140"
        },
        {
            "message": "Missing item type\nCopies the file identified by @source to the file identified by @target.\n If the copy is successful, success() is called. If not, failure() is\n called.\nThe target will generally be of the form \"doc://filename\", but it can\n be any path and file name that the application has access to.\nNOTE: Copying will fail if the target exists.",
            "line": " demo/www/framework/fileutil.js:159"
        },
        {
            "message": "Missing item type\n*nix convenience method.",
            "line": " demo/www/framework/fileutil.js:193"
        },
        {
            "message": "Missing item type\nMoves the file identified by @source to the file identified by @target.\n If the move is successful, success() is called. If not, failure() is\n called.\nThe target will generally be of the form \"doc://filename\", but it can\n be any path and file name that the application has access to.\nNOTE: The move will overwrite the target if it exists.",
            "line": " demo/www/framework/fileutil.js:203"
        },
        {
            "message": "Missing item type\nConvenience method that allows renaming a file in the same\n directory as the source. The source's path will prepended\n to the new name.\nNOTE: The move will overwrite the target if it exists.",
            "line": " demo/www/framework/fileutil.js:237"
        },
        {
            "message": "Missing item type\n*nix convenience method.",
            "line": " demo/www/framework/fileutil.js:252"
        },
        {
            "message": "Missing item type\nRemoves the file identified by @theFile. The full path must\n be specified.",
            "line": " demo/www/framework/fileutil.js:262"
        },
        {
            "message": "Missing item type\n*nix convenience method.",
            "line": " demo/www/framework/fileutil.js:283"
        },
        {
            "message": "Missing item type\nCreates a fileWriter for @theFile. If successful, it will\n call success() with the created writer. If unsuccessful, it\n will call failure().\nOnce in success(), writeFileData() may be used to finish\n the writing of data to the file.\nNote: if the file exists, it will be overwritten.",
            "line": " demo/www/framework/fileutil.js:293"
        },
        {
            "message": "Missing item type\n*nix convenience method.",
            "line": " demo/www/framework/fileutil.js:320"
        },
        {
            "message": "Missing item type\nWrites @theData to the specified writer. When complete,\n success() will be called. If it fails, failure().",
            "line": " demo/www/framework/fileutil.js:330"
        },
        {
            "message": "Missing item type\n*nix convenience method.",
            "line": " demo/www/framework/fileutil.js:343"
        },
        {
            "message": "Missing item type\nlocalization.js\n Author: Kerri Shotts\nProvides simple localization, as described in Chapter 1 of PhoneGap HotShot.\nRelies on JQuery/Globalize.js, as found at https://github.com/jquery/globalize",
            "line": " demo/www/framework/localization.js:2"
        },
        {
            "message": "Missing item type\nLoads the JQuery Globalize script from the framework directory\n as well as the underlying cultures definitions.",
            "line": " demo/www/framework/localization.js:49"
        },
        {
            "message": "Missing item type\nLoads the appropriate locale from the JQuery Globalize script.",
            "line": " demo/www/framework/localization.js:59"
        },
        {
            "message": "Missing item type\nSets the current locale for the JQuery Globalize script.",
            "line": " demo/www/framework/localization.js:72"
        },
        {
            "message": "Missing item type\nAdd a translation to the existing translation matrix",
            "line": " demo/www/framework/localization.js:81"
        },
        {
            "message": "Missing item type\nReturn the user's locale (e.g., en-US or fr-FR)\n for proper localization.",
            "line": " demo/www/framework/localization.js:103"
        },
        {
            "message": "Missing item type\nConvenience function for translating text.",
            "line": " demo/www/framework/localization.js:177"
        },
        {
            "message": "Missing item type\nConvenience function for localizing numbers.",
            "line": " demo/www/framework/localization.js:217"
        },
        {
            "message": "Missing item type\nConvenience function for localizing currency.",
            "line": " demo/www/framework/localization.js:241"
        },
        {
            "message": "Missing item type\nConvenience function for localizing percentages.",
            "line": " demo/www/framework/localization.js:264"
        },
        {
            "message": "Missing item type\nConvenience function for localizing dates.",
            "line": " demo/www/framework/localization.js:285"
        },
        {
            "message": "Missing item type\nBASE PKOBJECT\n\n*****************************************************************************\nThe Object class provides the top object that all other objects inherit\n from. This provides object inheritance via a subclass/superclass mechanism\n without having to worry about prototype or constructor inheritance.\nPKObjects provide simple subclassing and a limited form of KVO in the form\n of tags and tag listeners.",
            "line": " demo/www/framework/pk-object.js:1"
        },
        {
            "message": "Missing item type\nWe need a way to provide inheritance. Most methods only provide\n inheritance across the constructor chain, not across any possible\n method. But for our purposes, we need to be able to provide for\n overriding any method (such as drawing, touch responses, etc.),\n and so we implement inheritance in a different way.\nFirst, the _classHierarchy, a private property, provides the\n inheritance tree. All objects inherit from \"Object\".",
            "line": " demo/www/framework/pk-object.js:42"
        },
        {
            "message": "Missing item type\nObjects are subclassed using this method. The newClass is the\n unique class name of the object (and should match the class'\n actual name.",
            "line": " demo/www/framework/pk-object.js:56"
        },
        {
            "message": "Missing item type\ngetClass returns the current class of the object. The\n \"class\" property can be used as well. Note that there\n is no \"setter\" for this property; an object's class\n can *not* be changed.",
            "line": " demo/www/framework/pk-object.js:68"
        },
        {
            "message": "Missing item type\nReturns the super class for the given class. If the\n class is not supplied, the class is assumed to be the\n object's own class.\nThe property \"superClass\" uses this to return the\n object's direct superclass, but getSuperClassOfClass\n can be used to determine superclasses higher up\n the hierarchy.",
            "line": " demo/www/framework/pk-object.js:82"
        },
        {
            "message": "Missing item type\n_super is an object that stores overridden functions by class and method\n name. This is how we get the ability to arbitrarily override any method\n already present in the superclass.",
            "line": " demo/www/framework/pk-object.js:109"
        },
        {
            "message": "Missing item type\nMust be called prior to defining the overridden function as this moves\n the original function into the _super object. The functionName must\n match the name of the method exactly, since there may be a long tree\n of code that depends on it.",
            "line": " demo/www/framework/pk-object.js:118"
        },
        {
            "message": "Missing item type\nCalls a super function with up to 10 arguments.",
            "line": " demo/www/framework/pk-object.js:136"
        },
        {
            "message": "Missing item type\ninitializes the object",
            "line": " demo/www/framework/pk-object.js:155"
        },
        {
            "message": "Missing item type\nObjects have some properties that we want all objects to have...",
            "line": " demo/www/framework/pk-object.js:165"
        },
        {
            "message": "Missing item type\nAll objects subject notifications for events",
            "line": " demo/www/framework/pk-object.js:214"
        },
        {
            "message": "Missing item type\n//http://stackoverflow.com/a/11462081\nfunction clone(obj){\n    var clonedObjectsArray = [];\n    var originalObjectsArray = []; //used to remove the unique ids when finished\n    var next_objid = 0;\n\n    function objectId(obj) {\n        if (obj == null) return null;\n        if (obj.__obj_id == undefined){\n            obj.__obj_id = next_objid++;\n            originalObjectsArray[obj.__obj_id] = obj;\n        }\n        return obj.__obj_id;\n    }\n\n    function cloneRecursive(obj) {\n        if (null == obj || typeof obj == \"string\" || typeof obj == \"number\" || typeof obj == \"boolean\") return obj;\n\n        // Handle Date\n        if (obj instanceof Date) {\n            var copy = new Date();\n            copy.setTime(obj.getTime());\n            return copy;\n        }\n\n        // Handle Array\n        if (obj instanceof Array) {\n            var copy = [];\n            for (var i = 0; i < obj.length; ++i) {\n                copy[i] = cloneRecursive(obj[i]);\n            }\n            return copy;\n        }\n\n        // Handle Object\n        if (obj instanceof Object) {\n            if (clonedObjectsArray[objectId(obj)] != undefined)\n                return clonedObjectsArray[objectId(obj)];\n\n            var copy;\n            if (obj instanceof Function)//Handle Function\n                copy = function(){return obj.apply(this, arguments);};\n            else\n                copy = {};\n\n            clonedObjectsArray[objectId(obj)] = copy;\n\n            for (var attr in obj)\n                if (attr != \"__obj_id\" && obj.hasOwnProperty(attr))\n                    copy[attr] = cloneRecursive(obj[attr]);                 \n\n            return copy;\n        }       \n\n\n        throw new Error(\"Unable to copy obj! Its type isn't supported.\");\n    }\n    var cloneObj = cloneRecursive(obj);\n\n\n\n    //remove the unique ids\n    for (var i = 0; i < originalObjectsArray.length; i++)\n    {\n        delete originalObjectsArray[i].__obj_id;\n    };\n\n    return cloneObj;\n}",
            "line": " demo/www/framework/pk-object.js:261"
        },
        {
            "message": "Missing item type\nSCROLLER\n Author:  Kerri Shotts\n Version: 0.1 alpha\n License: MIT\nThis library is intended to be similar to iScroll-lite in that it should be\n a relatively fast method of scrolling content without being horribly laggy\n or cause incorrect \"clicks\" to be registered.\nThis library does *NOT* support physics-based scrolling, except for a small\n inertia animation at the end of a scroll. It is not intended to replicate\n native scrolling /at all/. There are no bounces at the top or bottom. There\n is no visible scroll bar either. Essentially, overflow:scroll as supported\n on iOS 5 with no bounce/inertia scrolling.\nConsider this library an experiment. The idea is to be simpler than iScroll\n to use -- for example, the scroller only needs to be created once -- it does\n not need to be refreshed when AJAX content loads. It is intended to be at\n least as fast as iScroll, if not a little faster. It is not, however,\n intended to be a native scrolling solution. At this time, I do not believe\n it truly possible or practice, and users will notice any non-native solution\n that tries to match, so why try?\nUsage:\nvar yourScroller = new SCROLLER.GenericScroller ( \"the_element_to_scroll\" );\nwhere you have the following DOM tree:\n    container_element\n     - the_element_to_scroll\nFuture Goals:\n - Detect native physics scrolling and use it when possible\n  - Detect native overflow:scroll (non-physics) and use it when possible\n  - Improve the inertial scrolling at end (this is a very rough implementation)\n  - Become irrelevant. I hope for a day when all mobile browsers can scroll\n    complex content natively and smoothly.\nSupported Platforms:\n - Android 2.3+\n  - iOS 4.3+\n  - probably any webkit browser?\nKnown Issues:\n  - A little too willing to call a scroll a \"click\".",
            "line": " demo/www/framework/scroller.js:1"
        },
        {
            "message": "Missing item type\nAttaches the scroller to a new element. The element MUST be contained within\n another element that can support the setting of scrollTop/Left.\nAny overflow values will be overridden. Any webkit transforms may also be\n overridden.",
            "line": " demo/www/framework/scroller.js:107"
        },
        {
            "message": "Missing item type\nGet the scroll position",
            "line": " demo/www/framework/scroller.js:148"
        },
        {
            "message": "Missing item type\nScroll to a given location. If the location can't be scrolled to,\n the nearest location will be used.",
            "line": " demo/www/framework/scroller.js:161"
        },
        {
            "message": "Missing item type\ntouchStart initializes all our values when a touch is received.",
            "line": " demo/www/framework/scroller.js:174"
        },
        {
            "message": "Missing item type\nWhen a touch moves, we'll receive the event here.",
            "line": " demo/www/framework/scroller.js:204"
        },
        {
            "message": "Missing item type\nWhen a finger is lifted from the screen, we'll get this event.\n We can determine whether or not it was a click if we scrolled at all,\n and if we scrolled a certain distance, we'll do a little inertial\n scrolling",
            "line": " demo/www/framework/scroller.js:238"
        },
        {
            "message": "Missing item type\nUI-BASE\n Author: Kerri Shotts\n Version: 0.3\nThis provides the basics of the UI model, including poings, rects, and more.",
            "line": " demo/www/framework/ui-base.js:1"
        },
        {
            "message": "Missing item type\nPoints are of the form { x: #, y: # }",
            "line": " demo/www/framework/ui-base.js:37"
        },
        {
            "message": "Missing item type\noffsets a point by the values in another point. For example,\n if pointA = { x:100, y:100 } and pointB = { x:-5, y:10 }, the\n returned point will be { x:95, y:110 }.",
            "line": " demo/www/framework/ui-base.js:50"
        },
        {
            "message": "Missing item type\nSizes are similar to points, but they are of the form\n { w: width, h: height }",
            "line": " demo/www/framework/ui-base.js:62"
        },
        {
            "message": "Missing item type\nRects are of the form { origin: point, size: size }, or\n { origin: {x: #, y: #}, size: {w: width, h: height} }",
            "line": " demo/www/framework/ui-base.js:89"
        },
        {
            "message": "Missing item type\nOffsets a rect's origin point by the supplied point.",
            "line": " demo/www/framework/ui-base.js:105"
        },
        {
            "message": "Missing item type\nOffsets a rect's origin by the origin of the second rect,\n and offsets the rect's size by the size of the second rect.\nThis implies that the second rect does not need to be \"real\",\n as in, it can have negative sizes and such.",
            "line": " demo/www/framework/ui-base.js:115"
        },
        {
            "message": "Missing item type\nReturns true if the two rects supplied intersect. Note that this\n will not work if the rectangles are non-canonical.",
            "line": " demo/www/framework/ui-base.js:130"
        },
        {
            "message": "Missing item type\nThink of these as constants, except you have to call them like a \n method.\nzeroPoint() returns a point of {0,0}\n zeroSize() returns a size of {0,0}\n zeroRect() returns a rect of { {0,0}, {0,0} }\n screenSize() returns a **point** representing the size of the screen (or browser).\n screenBounds() returns a **rect** representing the size of the screen (with a {0,0} origin).",
            "line": " demo/www/framework/ui-base.js:155"
        },
        {
            "message": "Missing item type\nfonts",
            "line": " demo/www/framework/ui-base.js:173"
        },
        {
            "message": "Missing item type\nShadows",
            "line": " demo/www/framework/ui-base.js:237"
        },
        {
            "message": "Missing item type\nColors",
            "line": " demo/www/framework/ui-base.js:314"
        },
        {
            "message": "Missing item type\nImages",
            "line": " demo/www/framework/ui-base.js:361"
        },
        {
            "message": "Missing item type\nborders",
            "line": " demo/www/framework/ui-base.js:458"
        },
        {
            "message": "Missing item type\nevents",
            "line": " demo/www/framework/ui-base.js:554"
        },
        {
            "message": "Missing item type\nUI-CORE\n Author: Kerri Shotts\nThis script provides a lot of the core user interface framework, such as\n loading content via AJAX, transitions, and more.",
            "line": " demo/www/framework/ui-core.js:1"
        },
        {
            "message": "Missing item type\nGlobal back button handler, since doing it per-view and per-\n message is buggy. This will call backButtonPressed() on any\n active message or view. If said method isn't found, it will\n pop the view on its own.\nNOTE: if backButtonPressed() is defined, it is expected to\n pop the view, if the method is also a view. If the view is\n not popped, the back button will have no effect.\nSECOND NOTE: Since back buttons received in quick succession\n are problematic, we force the user to wait 1s before the next\n back button is accepted.",
            "line": " demo/www/framework/ui-core.js:84"
        },
        {
            "message": "Missing item type\nInitializes the application framework\n  - in this version of the framework, we force an orientation update.\n  - by default, we attach a global back button handler\n  - we deisable animations and transforms for Android and WP7.",
            "line": " demo/www/framework/ui-core.js:129"
        },
        {
            "message": "Missing item type\nCalled on first-start and whenever the orientation changes. It updates the\n body's class to reflect the device, formfactor, orientation, and scaling.",
            "line": " demo/www/framework/ui-core.js:177"
        },
        {
            "message": "Missing item type\nShows a view and pushes it on the viewStack. NO ANIMATION.\n DOES NOT PROPERLY CALL viewWillHide/viewDidHide of any view, since there\n may be no view visible.",
            "line": " demo/www/framework/ui-core.js:261"
        },
        {
            "message": "Missing item type\nHides a view and pops it off the viewStack. NO ANIMATION.\n DOES NOT ATTEMPT TO CALL viewWillShow or viewDidShow of any view\n on the stack, as there may not be any view visible.",
            "line": " demo/www/framework/ui-core.js:288"
        },
        {
            "message": "Missing item type\nSwaps a view on the stack with the desired view. NO ANIMATION.",
            "line": " demo/www/framework/ui-core.js:314"
        },
        {
            "message": "Missing item type\nShows a view WITH ANIMATION and pushes it onto the view stack.\n The animation is a slide from right to left.",
            "line": " demo/www/framework/ui-core.js:505"
        },
        {
            "message": "Missing item type\nHides a view WITH ANIMATION and pops it from the stack.",
            "line": " demo/www/framework/ui-core.js:664"
        },
        {
            "message": "Missing item type\nApplies touch listeners to various items in the dom.\nIn this version of the framework, we apply it to BUTTONs.",
            "line": " demo/www/framework/ui-core.js:924"
        },
        {
            "message": "Missing item type\nUI-GESTURES\n Author:  Kerri Shotts\n Version: 0.1 alpha\n License: MIT\nA simple, no-frills gesture recognizer. Permits long-press recognition,\n horizontal swipe recognition, and vertical swipe recognition. Recognizing\n swipes in a particular direction (left, right, up, down) should be easy to\n add later.\nThe SimpleGesture class represents the basic recognizer -- it implements all\n the tracking of touch and mouse events. Every 100ms it calls\n a recognition function, which by default does nothing. Essentially, Simple-\n Gesture is abstract. This method is expected to be overridden by a specific\n recognizer, which the LongPressGesture, HorizontalSwipeGesture, and\n VerticalSwipeGesture do.\nThe LongPressGesture will fire off an event when a longpress is recognized.\n How this is recognized is partially defined by the caller -- that is,\n two durations can be supplied. By default, the long-press is recognized at\n 1s and cancelled at 3s (assuming no previous recognition). It is also\n cancelled should any movement outside of a 25px radius occur.\nThe HorizontalSwipeGesture and VerticalSwipeGesture will fire off an event\n when a swipe in the given axis is detected. This swipe is detected when the\n length of the swipe exceeds 75px (or the provided override), and will be\n fired as long as the duration of the swipe is less than the cancel duration\n (3s by default). The line must not deviate by more than 25px in the specified\n axis, or the gesture will fail to be recognized.\nUsage:\nvar anElement = document.getElementById(\"abc\");\n var aLongPressGesture = new GESTURES.LongPressGesture\n                             ( anElement, theFunctionToCallWhenRecognized,\n                               [ thePressDuration, [ theCancelDelay ]] );\nvar aHorizontalSwipeGesture = new GESTURES.HorizontalSwipeGesture\n                               ( anElement, theFunctionToCallWhenRecognized,\n                                 [ theSwipeLength, [ theCancelDelay ]] );\nvar aVerticalSwipeGesture = new GESTURES.VerticalSwipeGesture\n                             ( anElement, theFunctionToCallWhenRecognized,\n                               [ theSwipeLength, [ theCancelDelay ]] );\n\nWhere: anElement is an HTML DOM element\n        theFunctionToCallWhenRecognized is a function that will be called\n            when the gesture is recognized. It will be passed the recognizer,\n            and as such, one can store & retrieve data in this manner:\n                aLongPressGesture.data = \"Hello\";\n                 function theFunctionToCallWhenRecognized ( gr )\n                 { alert (gr.data); }\n           This will generate an alert of \"Hello\" when the element is long-\n            pressed.\n       thePressDuration: Optional, defaults to 1s. The amount of time required\n            to recognize a long-press.\n        theSwipeLength: Optional, defaults to 75px. The length of a swipe\n            required to recognize a swipe.\n        theCancelDelay: Optional, defaults to 3s. If a gesture is not recognized\n            prior to this delay, the gesture is cancelled, that is, it will\n            never be recognized.",
            "line": " demo/www/framework/ui-gestures.js:1"
        },
        {
            "message": "Missing item type\nUI-LABEL\n Author: Kerri Shotts\n Version: 0.3\nUI-LABEL provides the UI.Label object",
            "line": " demo/www/framework/ui-label.js:1"
        },
        {
            "message": "Missing item type\nlabels have the following properties:\n  - text (properlly innerHTML)\n  - textColor ( font Color )\n  - shadow\n  - shadowColor\n  - shadowOffset\n  - textAlignment\n  - font",
            "line": " demo/www/framework/ui-label.js:48"
        },
        {
            "message": "Missing item type\ninit",
            "line": " demo/www/framework/ui-label.js:124"
        },
        {
            "message": "Missing item type\nUI-MSG\n Author: Kerri Shotts\nThis script provides a mechanism by which alerts, prompts, and confirmations\n can be displayed to the end user.",
            "line": " demo/www/framework/ui-msg.js:1"
        },
        {
            "message": "Missing item type\nUI-VIEW\n Author: Kerri Shotts\n Version: 0.3\nUI-VIEW provides the UI.View object",
            "line": " demo/www/framework/ui-view.js:1"
        },
        {
            "message": "Missing item type\nAll views have direct DOM representations",
            "line": " demo/www/framework/ui-view.js:60"
        },
        {
            "message": "Missing item type\nAll views have subviews",
            "line": " demo/www/framework/ui-view.js:66"
        },
        {
            "message": "Missing item type\nAll views have bounds and frames.",
            "line": " demo/www/framework/ui-view.js:104"
        },
        {
            "message": "Missing item type\nrecalculates the element's position based on\n the frame. It also calls calcElement() for the\n object, if defined. After that, it calls the\n _calcElement for every subview, in case they\n decide to be re-positioned.",
            "line": " demo/www/framework/ui-view.js:210"
        },
        {
            "message": "Missing item type\nEvery view has a background color, even if it is transparent.",
            "line": " demo/www/framework/ui-view.js:263"
        },
        {
            "message": "Missing item type\nEvery view can have a background image",
            "line": " demo/www/framework/ui-view.js:283"
        },
        {
            "message": "Missing item type\nEvery view can also have a border",
            "line": " demo/www/framework/ui-view.js:302"
        },
        {
            "message": "Missing item type\nAnd every view can also have multiple shadows",
            "line": " demo/www/framework/ui-view.js:323"
        },
        {
            "message": "Missing item type\nEvery view can be shown or hidden",
            "line": " demo/www/framework/ui-view.js:352"
        },
        {
            "message": "Missing item type\nEvery view has opacity",
            "line": " demo/www/framework/ui-view.js:376"
        },
        {
            "message": "Missing item type\nViews can override their scrolling",
            "line": " demo/www/framework/ui-view.js:398"
        },
        {
            "message": "Missing item type\nevent processing",
            "line": " demo/www/framework/ui-view.js:416"
        },
        {
            "message": "Missing item type\ninit",
            "line": " demo/www/framework/ui-view.js:500"
        },
        {
            "message": "Missing item type\nUTILITY\n Author: Kerri Shotts\nThis library includes simple utility functions",
            "line": " demo/www/framework/utility.js:1"
        },
        {
            "message": "Missing item type\nChecks to see if the dependency has already been loaded.",
            "line": " demo/www/framework/utility.js:46"
        },
        {
            "message": "Missing item type\nReturns an element specified by elementId. Similar to (but not exactly like) jQuery's $()",
            "line": " demo/www/framework/utility.js:105"
        },
        {
            "message": "Missing item type\nReturns an element specified by elementId, but with localization. Localization assumes\n you have at least one element of the form <elementId_enus>, and that all other localized\n elements have the locale after the elementId appended with an underscore.\n (eg: thisElementIsLocalized_enus and thisElementIsLocalized_eses)",
            "line": " demo/www/framework/utility.js:115"
        },
        {
            "message": "Missing item type\nSimilar to $$. Returns all classes matching a selector.",
            "line": " demo/www/framework/utility.js:153"
        },
        {
            "message": "Missing item type\nUtility function to delay execution of code",
            "line": " demo/www/framework/utility.js:163"
        },
        {
            "message": "Missing item type\nLoads a file or URL and returns it to the completion\n handler. The completion handler must be of the form\n fn(success/failure, data).",
            "line": " demo/www/framework/utility.js:172"
        },
        {
            "message": "Missing item type\nJavascript doesn't provide any native include functionality,\n which tends to bloat code and result in long scripts that are\n brittle. Here's our tiny effort to help stem the tide and\n make Javascript just a /little/ nicer.\nNOTE: includes are loaded SYNCHRONOUSLY. This is done as further\n includes may rely upon the one being loaded now. However, it does\n mean that larger files may take longer to process.",
            "line": " demo/www/framework/utility.js:272"
        },
        {
            "message": "Missing item type\nLoads an HTML fragment, creates a DIV, and adds it to the DOM.\n Any script tags inside will be executed.",
            "line": " demo/www/framework/utility.js:314"
        },
        {
            "message": "Missing item type\nRetrieves a JSON string from the specified URL, and executes completion.\n Completion must be of the form ( success, data ).",
            "line": " demo/www/framework/utility.js:407"
        },
        {
            "message": "Missing item type\nLoads a URL in a popup window. Uses ChildBrowser for PG 2.2.x or\n lower, and in-app browser for 2.3 or higher.",
            "line": " demo/www/framework/utility.js:442"
        },
        {
            "message": "Missing item type\ninstanceOfTemplate returns an HTML string ready for insertion into the DOM\n as an instance of the supplied template (templateElement). Any %VAR% are\n replaced by VAR from the replacements object.",
            "line": " demo/www/framework/utility.js:476"
        },
        {
            "message": "Missing item type\nFilename Handling",
            "line": " demo/www/framework/utility.js:496"
        },
        {
            "message": "Missing item type\nDEVICE\n Author: Kerri Shotts\nThis library includes functions that reflect the device and its current\n state",
            "line": " framework/device.js:1"
        },
        {
            "message": "Missing item type\nReturns the device platform, lowercased. If PKDEVICE.platformOverride is\n other than \"false\", it is returned instead.",
            "line": " framework/device.js:42"
        },
        {
            "message": "Missing item type\nReturns the device's form factor. Possible values are \"tablet\" and\n \"phone\". If PKDEVICE.formFactorOverride is not false, it is returned\n instead.",
            "line": " framework/device.js:97"
        },
        {
            "message": "Missing item type\nDetermines if the device is in Portrait orientation.",
            "line": " framework/device.js:128"
        },
        {
            "message": "Missing item type\nDetermines if the device is in Landscape orientation.",
            "line": " framework/device.js:137"
        },
        {
            "message": "Missing item type\nDetermines if the device is a hiDPI device (aka retina)",
            "line": " framework/device.js:150"
        },
        {
            "message": "Missing item type\nFILEUTIL\n Author: Kerri Shotts\nThis library includes routines to deal with the FILE API, (which is... a bit\n painful.) The purpose of the library is to reduce the amount of work necessary\n to go through obtaining a file system, working with directories and files,\n etc. That isn't to say that we can eliminate callbacks or even callback\n chaining -- but it is significantly easier without all the intervening cruft,\n which is essentially (for all intents and purposes) boilerplate.\nIMPORTANT NOTE:\nThis library provides various conveniences that make referencing persistent\n and temporary storage a bit easier as well. For example, you can use a\n path like the following:\n    doc://photo.jpg   -->   /some/gobbledygook/yourApp/Documents/photo.jpg\n     tmp://photo.jpg   -->   /some/gobbledygook/yourApp/tmp/photo.jpg\nSeveral APIs (such as camera capture) may also refer to paths with\n \"file://localhost\" attached. The routines will gracefully remove this so that\n the reference is a true file.\nCONVENIENCE:\nFor those who are more comfortable with *nix/BSD commands, nearly each method\n has a version that correlates to a roughly *nix name. The parameters are the\n same, however.\nMETHODS\n   copyFileTo ( source, target, success, failure )         |   cp ()\n   moveFileTo ( source, target, success, failure )         |   mv ()\n   removeFile ( theFile, success, failure )                |   rm ()\n   renameFile ( source, newName, success, failure )        |   -\n   createFileWriter ( theFile, success, failure )          |   fcreate ()\n   writeFileData ( writer, theData, success, failure )     |   fwrite ()\nPLANNED METHODS\n  getListing ( path, filters, success, failure )          |    ls ()\n   createDirectory ( path, newDirectory, success, failure )|    mkdir()\n   removeDirectory ( path, theDirectory, success, failure )|    rmdir()\n   createFileReader ( theFile, success, failure )          |    fopen()\n   readFileData ( reader, success, failure )               |    fread()",
            "line": " framework/fileutil.js:1"
        },
        {
            "message": "Missing item type\nDetermines the persistent and temporary file systems prior\n to file operations. While it's unlikely that these will\n change during application execution, it certainly doesn't\n hurt to re-read them whenever possible (just in case!).\nWhen both are read, the success method is called. If we\n can't obtain one or the other, the failure method is called.",
            "line": " framework/fileutil.js:101"
        },
        {
            "message": "Missing item type\nHandles substition strings within a file path.\n doc:/ translates to the persistent storage. We don't use \"//\" here\n        since the persistentFS doesn't have a trailing \"/\", so we leave\n        that in the original.\n  tmp:/ translates to the temporary storage.\n  file://localhost translates to nothing.",
            "line": " framework/fileutil.js:140"
        },
        {
            "message": "Missing item type\nCopies the file identified by @source to the file identified by @target.\n If the copy is successful, success() is called. If not, failure() is\n called.\nThe target will generally be of the form \"doc://filename\", but it can\n be any path and file name that the application has access to.\nNOTE: Copying will fail if the target exists.",
            "line": " framework/fileutil.js:159"
        },
        {
            "message": "Missing item type\n*nix convenience method.",
            "line": " framework/fileutil.js:193"
        },
        {
            "message": "Missing item type\nMoves the file identified by @source to the file identified by @target.\n If the move is successful, success() is called. If not, failure() is\n called.\nThe target will generally be of the form \"doc://filename\", but it can\n be any path and file name that the application has access to.\nNOTE: The move will overwrite the target if it exists.",
            "line": " framework/fileutil.js:203"
        },
        {
            "message": "Missing item type\nConvenience method that allows renaming a file in the same\n directory as the source. The source's path will prepended\n to the new name.\nNOTE: The move will overwrite the target if it exists.",
            "line": " framework/fileutil.js:237"
        },
        {
            "message": "Missing item type\n*nix convenience method.",
            "line": " framework/fileutil.js:252"
        },
        {
            "message": "Missing item type\nRemoves the file identified by @theFile. The full path must\n be specified.",
            "line": " framework/fileutil.js:262"
        },
        {
            "message": "Missing item type\n*nix convenience method.",
            "line": " framework/fileutil.js:283"
        },
        {
            "message": "Missing item type\nCreates a fileWriter for @theFile. If successful, it will\n call success() with the created writer. If unsuccessful, it\n will call failure().\nOnce in success(), writeFileData() may be used to finish\n the writing of data to the file.\nNote: if the file exists, it will be overwritten.",
            "line": " framework/fileutil.js:293"
        },
        {
            "message": "Missing item type\n*nix convenience method.",
            "line": " framework/fileutil.js:320"
        },
        {
            "message": "Missing item type\nWrites @theData to the specified writer. When complete,\n success() will be called. If it fails, failure().",
            "line": " framework/fileutil.js:330"
        },
        {
            "message": "Missing item type\n*nix convenience method.",
            "line": " framework/fileutil.js:343"
        },
        {
            "message": "Missing item type\nlocalization.js\n Author: Kerri Shotts\nProvides simple localization, as described in Chapter 1 of PhoneGap HotShot.\nRelies on JQuery/Globalize.js, as found at https://github.com/jquery/globalize",
            "line": " framework/localization.js:2"
        },
        {
            "message": "Missing item type\nLoads the JQuery Globalize script from the framework directory\n as well as the underlying cultures definitions.",
            "line": " framework/localization.js:49"
        },
        {
            "message": "Missing item type\nLoads the appropriate locale from the JQuery Globalize script.",
            "line": " framework/localization.js:59"
        },
        {
            "message": "Missing item type\nSets the current locale for the JQuery Globalize script.",
            "line": " framework/localization.js:72"
        },
        {
            "message": "Missing item type\nAdd a translation to the existing translation matrix",
            "line": " framework/localization.js:81"
        },
        {
            "message": "Missing item type\nReturn the user's locale (e.g., en-US or fr-FR)\n for proper localization.",
            "line": " framework/localization.js:103"
        },
        {
            "message": "Missing item type\nConvenience function for translating text.",
            "line": " framework/localization.js:177"
        },
        {
            "message": "Missing item type\nConvenience function for localizing numbers.",
            "line": " framework/localization.js:217"
        },
        {
            "message": "Missing item type\nConvenience function for localizing currency.",
            "line": " framework/localization.js:241"
        },
        {
            "message": "Missing item type\nConvenience function for localizing percentages.",
            "line": " framework/localization.js:264"
        },
        {
            "message": "Missing item type\nConvenience function for localizing dates.",
            "line": " framework/localization.js:285"
        },
        {
            "message": "Missing item type\nAll objects subject notifications for events",
            "line": " framework/pk-object.js:376"
        },
        {
            "message": "Missing item type\n//http://stackoverflow.com/a/11462081\nfunction clone(obj){\n    var clonedObjectsArray = [];\n    var originalObjectsArray = []; //used to remove the unique ids when finished\n    var next_objid = 0;\n\n    function objectId(obj) {\n        if (obj == null) return null;\n        if (obj.__obj_id == undefined){\n            obj.__obj_id = next_objid++;\n            originalObjectsArray[obj.__obj_id] = obj;\n        }\n        return obj.__obj_id;\n    }\n\n    function cloneRecursive(obj) {\n        if (null == obj || typeof obj == \"string\" || typeof obj == \"number\" || typeof obj == \"boolean\") return obj;\n\n        // Handle Date\n        if (obj instanceof Date) {\n            var copy = new Date();\n            copy.setTime(obj.getTime());\n            return copy;\n        }\n\n        // Handle Array\n        if (obj instanceof Array) {\n            var copy = [];\n            for (var i = 0; i < obj.length; ++i) {\n                copy[i] = cloneRecursive(obj[i]);\n            }\n            return copy;\n        }\n\n        // Handle Object\n        if (obj instanceof Object) {\n            if (clonedObjectsArray[objectId(obj)] != undefined)\n                return clonedObjectsArray[objectId(obj)];\n\n            var copy;\n            if (obj instanceof Function)//Handle Function\n                copy = function(){return obj.apply(this, arguments);};\n            else\n                copy = {};\n\n            clonedObjectsArray[objectId(obj)] = copy;\n\n            for (var attr in obj)\n                if (attr != \"__obj_id\" && obj.hasOwnProperty(attr))\n                    copy[attr] = cloneRecursive(obj[attr]);                 \n\n            return copy;\n        }       \n\n\n        throw new Error(\"Unable to copy obj! Its type isn't supported.\");\n    }\n    var cloneObj = cloneRecursive(obj);\n\n\n\n    //remove the unique ids\n    for (var i = 0; i < originalObjectsArray.length; i++)\n    {\n        delete originalObjectsArray[i].__obj_id;\n    };\n\n    return cloneObj;\n}",
            "line": " framework/pk-object.js:475"
        },
        {
            "message": "Missing item type\nSCROLLER\n Author:  Kerri Shotts\n Version: 0.1 alpha\n License: MIT\nThis library is intended to be similar to iScroll-lite in that it should be\n a relatively fast method of scrolling content without being horribly laggy\n or cause incorrect \"clicks\" to be registered.\nThis library does *NOT* support physics-based scrolling, except for a small\n inertia animation at the end of a scroll. It is not intended to replicate\n native scrolling /at all/. There are no bounces at the top or bottom. There\n is no visible scroll bar either. Essentially, overflow:scroll as supported\n on iOS 5 with no bounce/inertia scrolling.\nConsider this library an experiment. The idea is to be simpler than iScroll\n to use -- for example, the scroller only needs to be created once -- it does\n not need to be refreshed when AJAX content loads. It is intended to be at\n least as fast as iScroll, if not a little faster. It is not, however,\n intended to be a native scrolling solution. At this time, I do not believe\n it truly possible or practice, and users will notice any non-native solution\n that tries to match, so why try?\nUsage:\nvar yourScroller = new SCROLLER.GenericScroller ( \"the_element_to_scroll\" );\nwhere you have the following DOM tree:\n    container_element\n     - the_element_to_scroll\nFuture Goals:\n - Detect native physics scrolling and use it when possible\n  - Detect native overflow:scroll (non-physics) and use it when possible\n  - Improve the inertial scrolling at end (this is a very rough implementation)\n  - Become irrelevant. I hope for a day when all mobile browsers can scroll\n    complex content natively and smoothly.\nSupported Platforms:\n - Android 2.3+\n  - iOS 4.3+\n  - probably any webkit browser?\nKnown Issues:\n  - A little too willing to call a scroll a \"click\".",
            "line": " framework/scroller.js:1"
        },
        {
            "message": "Missing item type\nAttaches the scroller to a new element. The element MUST be contained within\n another element that can support the setting of scrollTop/Left.\nAny overflow values will be overridden. Any webkit transforms may also be\n overridden.",
            "line": " framework/scroller.js:107"
        },
        {
            "message": "Missing item type\nGet the scroll position",
            "line": " framework/scroller.js:148"
        },
        {
            "message": "Missing item type\nScroll to a given location. If the location can't be scrolled to,\n the nearest location will be used.",
            "line": " framework/scroller.js:161"
        },
        {
            "message": "Missing item type\ntouchStart initializes all our values when a touch is received.",
            "line": " framework/scroller.js:174"
        },
        {
            "message": "Missing item type\nWhen a touch moves, we'll receive the event here.",
            "line": " framework/scroller.js:204"
        },
        {
            "message": "Missing item type\nWhen a finger is lifted from the screen, we'll get this event.\n We can determine whether or not it was a click if we scrolled at all,\n and if we scrolled a certain distance, we'll do a little inertial\n scrolling",
            "line": " framework/scroller.js:238"
        },
        {
            "message": "Missing item type\nUI-BASE",
            "line": " This provides the basics of the UI model, including poings, rects, and more.:1"
        },
        {
            "message": "Missing item type",
            "line": " framework/ui-base.js:34"
        },
        {
            "message": "Missing item type\nUI-CORE\n Author: Kerri Shotts\nThis script provides a lot of the core user interface framework, such as\n loading content via AJAX, transitions, and more.",
            "line": " framework/ui-core.js:1"
        },
        {
            "message": "Missing item type\nGlobal back button handler, since doing it per-view and per-\n message is buggy. This will call backButtonPressed() on any\n active message or view. If said method isn't found, it will\n pop the view on its own.\nNOTE: if backButtonPressed() is defined, it is expected to\n pop the view, if the method is also a view. If the view is\n not popped, the back button will have no effect.\nSECOND NOTE: Since back buttons received in quick succession\n are problematic, we force the user to wait 1s before the next\n back button is accepted.",
            "line": " framework/ui-core.js:84"
        },
        {
            "message": "Missing item type\nInitializes the application framework\n  - in this version of the framework, we force an orientation update.\n  - by default, we attach a global back button handler\n  - we deisable animations and transforms for Android and WP7.",
            "line": " framework/ui-core.js:129"
        },
        {
            "message": "Missing item type\nCalled on first-start and whenever the orientation changes. It updates the\n body's class to reflect the device, formfactor, orientation, and scaling.",
            "line": " framework/ui-core.js:177"
        },
        {
            "message": "Missing item type\nShows a view and pushes it on the viewStack. NO ANIMATION.\n DOES NOT PROPERLY CALL viewWillHide/viewDidHide of any view, since there\n may be no view visible.",
            "line": " framework/ui-core.js:261"
        },
        {
            "message": "Missing item type\nHides a view and pops it off the viewStack. NO ANIMATION.\n DOES NOT ATTEMPT TO CALL viewWillShow or viewDidShow of any view\n on the stack, as there may not be any view visible.",
            "line": " framework/ui-core.js:288"
        },
        {
            "message": "Missing item type\nSwaps a view on the stack with the desired view. NO ANIMATION.",
            "line": " framework/ui-core.js:314"
        },
        {
            "message": "Missing item type\nShows a view WITH ANIMATION and pushes it onto the view stack.\n The animation is a slide from right to left.",
            "line": " framework/ui-core.js:505"
        },
        {
            "message": "Missing item type\nHides a view WITH ANIMATION and pops it from the stack.",
            "line": " framework/ui-core.js:664"
        },
        {
            "message": "Missing item type\nApplies touch listeners to various items in the dom.\nIn this version of the framework, we apply it to BUTTONs.",
            "line": " framework/ui-core.js:924"
        },
        {
            "message": "Missing item type\nUI-GESTURES\n Author:  Kerri Shotts\n Version: 0.1 alpha\n License: MIT\nA simple, no-frills gesture recognizer. Permits long-press recognition,\n horizontal swipe recognition, and vertical swipe recognition. Recognizing\n swipes in a particular direction (left, right, up, down) should be easy to\n add later.\nThe SimpleGesture class represents the basic recognizer -- it implements all\n the tracking of touch and mouse events. Every 100ms it calls\n a recognition function, which by default does nothing. Essentially, Simple-\n Gesture is abstract. This method is expected to be overridden by a specific\n recognizer, which the LongPressGesture, HorizontalSwipeGesture, and\n VerticalSwipeGesture do.\nThe LongPressGesture will fire off an event when a longpress is recognized.\n How this is recognized is partially defined by the caller -- that is,\n two durations can be supplied. By default, the long-press is recognized at\n 1s and cancelled at 3s (assuming no previous recognition). It is also\n cancelled should any movement outside of a 25px radius occur.\nThe HorizontalSwipeGesture and VerticalSwipeGesture will fire off an event\n when a swipe in the given axis is detected. This swipe is detected when the\n length of the swipe exceeds 75px (or the provided override), and will be\n fired as long as the duration of the swipe is less than the cancel duration\n (3s by default). The line must not deviate by more than 25px in the specified\n axis, or the gesture will fail to be recognized.\nUsage:\nvar anElement = document.getElementById(\"abc\");\n var aLongPressGesture = new GESTURES.LongPressGesture\n                             ( anElement, theFunctionToCallWhenRecognized,\n                               [ thePressDuration, [ theCancelDelay ]] );\nvar aHorizontalSwipeGesture = new GESTURES.HorizontalSwipeGesture\n                               ( anElement, theFunctionToCallWhenRecognized,\n                                 [ theSwipeLength, [ theCancelDelay ]] );\nvar aVerticalSwipeGesture = new GESTURES.VerticalSwipeGesture\n                             ( anElement, theFunctionToCallWhenRecognized,\n                               [ theSwipeLength, [ theCancelDelay ]] );\n\nWhere: anElement is an HTML DOM element\n        theFunctionToCallWhenRecognized is a function that will be called\n            when the gesture is recognized. It will be passed the recognizer,\n            and as such, one can store & retrieve data in this manner:\n                aLongPressGesture.data = \"Hello\";\n                 function theFunctionToCallWhenRecognized ( gr )\n                 { alert (gr.data); }\n           This will generate an alert of \"Hello\" when the element is long-\n            pressed.\n       thePressDuration: Optional, defaults to 1s. The amount of time required\n            to recognize a long-press.\n        theSwipeLength: Optional, defaults to 75px. The length of a swipe\n            required to recognize a swipe.\n        theCancelDelay: Optional, defaults to 3s. If a gesture is not recognized\n            prior to this delay, the gesture is cancelled, that is, it will\n            never be recognized.",
            "line": " framework/ui-gestures.js:1"
        },
        {
            "message": "Missing item type\nUI-MSG\n Author: Kerri Shotts\nThis script provides a mechanism by which alerts, prompts, and confirmations\n can be displayed to the end user.",
            "line": " framework/ui-msg.js:1"
        },
        {
            "message": "Missing item type\nUTILITY\n Author: Kerri Shotts\nThis library includes simple utility functions",
            "line": " framework/utility.js:1"
        },
        {
            "message": "Missing item type\nChecks to see if the dependency has already been loaded.",
            "line": " framework/utility.js:46"
        },
        {
            "message": "Missing item type\nReturns an element specified by elementId. Similar to (but not exactly like) jQuery's $()",
            "line": " framework/utility.js:105"
        },
        {
            "message": "Missing item type\nReturns an element specified by elementId, but with localization. Localization assumes\n you have at least one element of the form <elementId_enus>, and that all other localized\n elements have the locale after the elementId appended with an underscore.\n (eg: thisElementIsLocalized_enus and thisElementIsLocalized_eses)",
            "line": " framework/utility.js:115"
        },
        {
            "message": "Missing item type\nSimilar to $$. Returns all classes matching a selector.",
            "line": " framework/utility.js:153"
        },
        {
            "message": "Missing item type\nUtility function to delay execution of code",
            "line": " framework/utility.js:163"
        },
        {
            "message": "Missing item type\nLoads a file or URL and returns it to the completion\n handler. The completion handler must be of the form\n fn(success/failure, data).",
            "line": " framework/utility.js:172"
        },
        {
            "message": "Missing item type\nJavascript doesn't provide any native include functionality,\n which tends to bloat code and result in long scripts that are\n brittle. Here's our tiny effort to help stem the tide and\n make Javascript just a /little/ nicer.\nNOTE: includes are loaded SYNCHRONOUSLY. This is done as further\n includes may rely upon the one being loaded now. However, it does\n mean that larger files may take longer to process.",
            "line": " framework/utility.js:272"
        },
        {
            "message": "Missing item type\nLoads an HTML fragment, creates a DIV, and adds it to the DOM.\n Any script tags inside will be executed.",
            "line": " framework/utility.js:314"
        },
        {
            "message": "Missing item type\nRetrieves a JSON string from the specified URL, and executes completion.\n Completion must be of the form ( success, data ).",
            "line": " framework/utility.js:407"
        },
        {
            "message": "Missing item type\nLoads a URL in a popup window. Uses ChildBrowser for PG 2.2.x or\n lower, and in-app browser for 2.3 or higher.",
            "line": " framework/utility.js:442"
        },
        {
            "message": "Missing item type\ninstanceOfTemplate returns an HTML string ready for insertion into the DOM\n as an instance of the supplied template (templateElement). Any %VAR% are\n replaced by VAR from the replacements object.",
            "line": " framework/utility.js:476"
        },
        {
            "message": "Missing item type\nFilename Handling",
            "line": " framework/utility.js:496"
        }
    ]
}